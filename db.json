{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/vis/1.csv","path":"vis/1.csv","modified":0,"renderable":0},{"_id":"source/vis/1.html","path":"vis/1.html","modified":0,"renderable":0},{"_id":"source/vis/email.csv","path":"vis/email.csv","modified":0,"renderable":0},{"_id":"source/vis/email2.csv","path":"vis/email2.csv","modified":0,"renderable":0},{"_id":"source/vis/index.html","path":"vis/index.html","modified":0,"renderable":0},{"_id":"source/vis/new.csv","path":"vis/new.csv","modified":0,"renderable":0},{"_id":"source/vis/staff.csv","path":"vis/staff.csv","modified":0,"renderable":0},{"_id":"source/vis/temp.html","path":"vis/temp.html","modified":0,"renderable":0},{"_id":"source/vis/d3.v3.min.js","path":"vis/d3.v3.min.js","modified":0,"renderable":0},{"_id":"themes/anatole/source/css/blog_basic.css","path":"css/blog_basic.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/faviconlll.png","path":"images/faviconlll.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/logo@2x.png","path":"images/logo@2x.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/js/jquery-migrate-1.2.1.min.js","path":"js/jquery-migrate-1.2.1.min.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/js/jquery.appear.js","path":"js/jquery.appear.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/js/mathjax.js","path":"js/mathjax.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/anatole/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"033d9adbe192b6f657dcfcacb3150e49db9629bc","modified":1542669067000},{"_id":"themes/anatole/.gitignore","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1542726271000},{"_id":"themes/anatole/LICENSE","hash":"359cb81298c1fdbccf531548fc097466b0151be4","modified":1542726271000},{"_id":"themes/anatole/README.md","hash":"75a3829b8a316249ec0b4fd8eae2d371de879494","modified":1542726271000},{"_id":"themes/anatole/_config.sample.yml","hash":"c6bce49d93a37e9ed5f0c4b104decc0bd7832e04","modified":1542726271000},{"_id":"themes/anatole/_config.yml","hash":"27edb63db6386cf4c725c6c3e8ee4c1059f72e49","modified":1542727202000},{"_id":"themes/anatole/package.json","hash":"cf731a3ebf3913747fccb6c4c6615eba7d7e88a4","modified":1542726271000},{"_id":"source/_posts/CV_part01_Introduction.md","hash":"45b40629ebca054a63055e9f5e3e82f9a5d61ebb","modified":1488974324000},{"_id":"source/_posts/CV_part02_Imageformation.md","hash":"0dba1708b8e1e9c8561df8e82ca018673c8195f1","modified":1506565289000},{"_id":"source/_posts/Data Mining.md","hash":"58901329c61d271ec6733a7acdfe76f300391217","modified":1542728833000},{"_id":"source/_posts/ES6.md","hash":"70fd949e7f8c2d858957a6b821347c52c70fce9a","modified":1543181469000},{"_id":"source/_posts/TOEFL-writing-01.md","hash":"7e55ead5bdb949e833cb5c562ddcf38ed20fa517","modified":1542726271000},{"_id":"source/_posts/express1-app-js.md","hash":"dd3551c50224f4928d0db8dba9f48198b04467c6","modified":1542825427000},{"_id":"source/_posts/gulp.md","hash":"05519ede49dfe297a354c35899864eef97f1a805","modified":1542758999000},{"_id":"source/_posts/gulp2.md","hash":"a9bedd155458ede4f6aca00d20102f9b3eb90c84","modified":1543074190000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1542726271000},{"_id":"source/_posts/jquery风格替换插件.md","hash":"435b37902d09eb0a15e772cb9c738ca5417e6374","modified":1543189327000},{"_id":"source/_posts/TOEFL-writing-01-independent-grammar01-subject.md","hash":"cc2e5435c5a0e36cbaeb6e21a6520386fa5e8292","modified":1542726271000},{"_id":"source/_posts/js组件1-获取当前函数参数对象.md","hash":"1dfce91ab7ddce2a3b3e8a0e5e575fdfbda4af20","modified":1542825430000},{"_id":"source/_posts/js规范-1.变量的声明与定义.md","hash":"d8b2c47c4cc756bbe1406b9d540d4c95215ca6a8","modified":1542825436000},{"_id":"source/_posts/mathjax-solution.md","hash":"db86f4b0dbadee9af54cb024a47202eef4aeb361","modified":1542729852000},{"_id":"source/_posts/shell-1.md","hash":"0ece2a433cedfccbdc8689e01d48e842105af64e","modified":1542726271000},{"_id":"source/_posts/test.md","hash":"9881cf3e87cbbb312718dbccfabf9492f7108afd","modified":1542726271000},{"_id":"source/_posts/ubuntu ext4-fs error.md","hash":"b7f469e86e921c05aac0a446106cc9adc556e5a4","modified":1542792923000},{"_id":"source/_posts/unix-1.md","hash":"9d34809920dea893f5a586bccc832d6629dd7bbd","modified":1542755365000},{"_id":"source/_posts/vue-vs-jquery.md","hash":"9aaf762ec7ded2bfd5b28e374fc02df97565e657","modified":1543180097000},{"_id":"source/_posts/vue1-介绍.md","hash":"ff4db376cab06f214f6040eff7839dc1854684a9","modified":1543173640000},{"_id":"source/_posts/如何让nodejs高效.md","hash":"c98360eafccbbbbd28eba0649ac61bfdd6a9f327","modified":1543180365000},{"_id":"source/_posts/终端优化1-仓库备份.md","hash":"15b8035a03a406f1a411e7a5718c38b52d099a76","modified":1542878133000},{"_id":"source/_posts/终端优化2-自动路径切换.md","hash":"b37fbdab293665daa5475b2f37b3fda57b37e4eb","modified":1543180533000},{"_id":"source/_posts/记web开发二三事(二)-web开发2.0.md","hash":"dc929ccc1fa7f832e41c1e6415bf5f3c25794393","modified":1543107884000},{"_id":"source/_posts/记web开发二三事.md","hash":"e0ff1bab7c508acbcbdc94ac406345810110b0d2","modified":1542985828000},{"_id":"source/about/index.md","hash":"53887668f58da60f178562c8582fcf17162697e3","modified":1542707569000},{"_id":"source/links/index.md","hash":"fa6b293d1581721148986232d83c84cdab0f6487","modified":1542707581000},{"_id":"source/vis/1.csv","hash":"d61517a27d41bc69cfddc6e4a272ff30aa581817","modified":1478944605000},{"_id":"source/vis/1.html","hash":"aee22037755da82b43c8e2a300a79ed3b6171a97","modified":1478328092000},{"_id":"source/vis/email.csv","hash":"9a82f2d5a735e4866e3b605c8e18b247d9885ed5","modified":1478328673000},{"_id":"source/vis/email2.csv","hash":"0b9649006faf1b839e2ef67e5fe48cd9ba31d031","modified":1478326241000},{"_id":"source/vis/index.html","hash":"05039dd8587ec1335681ac7a6b9ad26a6902f95d","modified":1488968098000},{"_id":"source/vis/new.csv","hash":"b81c493f92f955313084d4066418e8fbbed6a58e","modified":1478945217000},{"_id":"source/vis/staff.csv","hash":"199cbf18e56c94148b1bc3b23c5193b3967229f1","modified":1477693020000},{"_id":"source/vis/temp.html","hash":"5cd722f31d65d59f20a5637811b0964eaf4c01b1","modified":1478955128000},{"_id":"source/photos/index.html","hash":"05039dd8587ec1335681ac7a6b9ad26a6902f95d","modified":1488968428000},{"_id":"source/photos/index.md","hash":"ecc09e7f6f5e5a082124630d687b075e4f2cef8d","modified":1488965881000},{"_id":"themes/anatole/languages/pt-BR.yml","hash":"0041d8ba28a4c39d2b38bd818fbb2d76b5c8708b","modified":1542726271000},{"_id":"themes/anatole/languages/zh-cn-.yml","hash":"dab1823e036f4adb3b7ae9efe95a37a15e47bec2","modified":1542726271000},{"_id":"themes/anatole/layout/archive.pug","hash":"07b9a9a13eaa5a9bc1426e3c57f3efad2d86e83b","modified":1542726271000},{"_id":"themes/anatole/layout/category.pug","hash":"ae894ef4baee4a0c7c8e66641166061e789f1fa7","modified":1542726271000},{"_id":"themes/anatole/layout/index.pug","hash":"53da3cfd498951148acb33de1574df80ae282dc5","modified":1542726271000},{"_id":"themes/anatole/layout/mixins.pug","hash":"107bfd2fe10de0d8b110c13bb1168af79e62a37c","modified":1542726271000},{"_id":"themes/anatole/layout/page.pug","hash":"15142c94e5c2247aba8efb64cffd695b3f133670","modified":1542726271000},{"_id":"themes/anatole/layout/post.pug","hash":"0316975c4e87ffb420b377194fffc4d70d8340f6","modified":1542727381000},{"_id":"themes/anatole/layout/tag.pug","hash":"7017a8bae4f4a412dafb556772bdcf2cfddeb79f","modified":1542726271000},{"_id":"source/vis/d3.v3.min.js","hash":"98d11ed74f83088254b6202c83d8641227e0f0f8","modified":1478152951000},{"_id":"themes/anatole/layout/partial/comments.pug","hash":"fad5bbe7c2a134c892fcb1c731d979463145a49b","modified":1542726271000},{"_id":"themes/anatole/layout/partial/footer.pug","hash":"99a9a09ea94dfb402a7e4736468440d198c3ada0","modified":1542726271000},{"_id":"themes/anatole/layout/partial/head.pug","hash":"3d6126d0b53a889a46ad61eb8cc0ab1b35446c49","modified":1542726271000},{"_id":"themes/anatole/layout/partial/layout.pug","hash":"827355b979173e13c521f30ee0160db5105ab9b7","modified":1542733272000},{"_id":"themes/anatole/layout/partial/mathjax.pug","hash":"9780684a0988e539bf7efc58a41d6fa5cb6074c4","modified":1542727339000},{"_id":"themes/anatole/layout/partial/nav.pug","hash":"a998067d3555527e05ad65cd701e6cce87a64fa1","modified":1542733784000},{"_id":"themes/anatole/layout/partial/sidebar.pug","hash":"6721b1e0b1e59e54d031a4978e7f82aece336efc","modified":1542726271000},{"_id":"themes/anatole/source/css/blog_basic.css","hash":"7db88f0873e858b21a4c981c8481708ad9117478","modified":1542726271000},{"_id":"themes/anatole/source/css/font-awesome.min.css","hash":"95d0b0c4d11105c81be1857b744076a1d2bed918","modified":1542726271000},{"_id":"themes/anatole/source/css/style.css","hash":"871a5c940cbc0ce5488a670f2285f2c3015cf71c","modified":1542726271000},{"_id":"themes/anatole/source/css/style.scss","hash":"175c9237798207f705c62777b5f51509adec6d0a","modified":1542726271000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.eot","hash":"0183979056f0b87616cd99d5c54a48f3b771eee6","modified":1542726271000},{"_id":"themes/anatole/source/images/favicon.png","hash":"02383b8631a236118dadc874216200a3e9995977","modified":1542726271000},{"_id":"themes/anatole/source/images/faviconlll.png","hash":"d659236704308954da9d64b101c4f54cc3f3255c","modified":1542726271000},{"_id":"themes/anatole/source/images/logo.png","hash":"41bdf2ebd8cc193ad82a211758af827d891b1a90","modified":1542726271000},{"_id":"themes/anatole/source/images/logo@2x.png","hash":"49c3fa97724abf53861bf11356ea9ba5bcb11576","modified":1542726271000},{"_id":"themes/anatole/source/js/jquery-migrate-1.2.1.min.js","hash":"743052320809514fb788fe1d3df37fc87ce90452","modified":1542726271000},{"_id":"themes/anatole/source/js/jquery.appear.js","hash":"1f8067d7bd4c0bde30785e8016100f239e14394f","modified":1542726271000},{"_id":"themes/anatole/source/js/mathjax.js","hash":"22ad0fd4728a7fb579ad3fa89037d6a762a0daa0","modified":1542728273000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.ttf","hash":"6225ccc4ec94d060f19efab97ca42d842845b949","modified":1542726271000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.woff","hash":"7d65e0227d0d7cdc1718119cd2a7dce0638f151c","modified":1542726271000},{"_id":"themes/anatole/source/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1542726271000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.svg","hash":"cd980eab6db5fa57db670cb2e4278e67e1a4d6c9","modified":1542726271000},{"_id":"public/about/index.html","hash":"cacdb0ced048531d354661e332660dd6f4342b30","modified":1543266508892},{"_id":"public/links/index.html","hash":"1fe6d4f33a46c5ebb66a510cbbdce323f9508daa","modified":1543266508897},{"_id":"public/photos/index.html","hash":"8cd832d0b790acc4dd4d0283939002ff7732c53a","modified":1543266508897},{"_id":"public/2018/11/25/记web开发二三事(二)-web开发2.0/index.html","hash":"a2b23fb6a2eec4f09939da0648fb2e949128f68c","modified":1543266508898},{"_id":"public/2018/11/25/vue1-介绍/index.html","hash":"adb838527b47931e1c2b7f87519b18150f2cfe51","modified":1543266508898},{"_id":"public/2018/11/24/gulp2/index.html","hash":"f031a061534c206042382d32778d452706cce9a1","modified":1543266508898},{"_id":"public/2018/11/23/记web开发二三事/index.html","hash":"817b38981b09454da4780c94295f4fede80b52e0","modified":1543266508898},{"_id":"public/2018/11/23/如何让nodejs高效/index.html","hash":"6743c8b1f07bed53cfc557d8234466bee306cc11","modified":1543266508898},{"_id":"public/2018/11/22/终端优化1-仓库备份/index.html","hash":"0e2999beb3a63e03b1e961079a70ba784f8d1522","modified":1543266508898},{"_id":"public/2018/11/22/终端优化2-自动路径切换/index.html","hash":"df35caf9dd5f3e21c16d3fd2ed8b0a59e9c5c0b0","modified":1543266508898},{"_id":"public/2018/11/21/express1-app-js/index.html","hash":"9f0ae5d63a1be2c44f08d2810d3efee08a07cd00","modified":1543266508898},{"_id":"public/2018/11/21/js组件1-获取当前函数参数对象/index.html","hash":"c1bbd0dfd35b9a37d78322c2078cce9e8deee483","modified":1543266508898},{"_id":"public/2018/11/21/gulp/index.html","hash":"4e249d455d4928e7670d34a30e3f2dce5b0b13ce","modified":1543266508899},{"_id":"public/2018/11/21/unix-1/index.html","hash":"7612217ba0721b25890654faa6b794a0cfb88d31","modified":1543266508899},{"_id":"public/2018/11/21/ubuntu ext4-fs error/index.html","hash":"e89cba950b8fae67e86071dedc5589e728d1b8a9","modified":1543266508899},{"_id":"public/2018/11/20/mathjax-solution/index.html","hash":"4d2e2a174cfe6be305fc59ea0cbe85aacbd3d246","modified":1543266508899},{"_id":"public/2018/11/20/shell-1/index.html","hash":"299e86e8e0b3acbbf18e6aa4af815a67d7e57a00","modified":1543266508899},{"_id":"public/2018/11/20/test/index.html","hash":"621950b8d4d9abc098c172c56910b41ca04a12fc","modified":1543266508899},{"_id":"public/2018/03/06/Data Mining/index.html","hash":"035247570f034954c99afc4791a67d8d990ad1e1","modified":1543266508899},{"_id":"public/2017/03/16/CV_part02_Imageformation/index.html","hash":"87d168e7f1dc94caca96e9b4c770aeec6ceaa855","modified":1543266508899},{"_id":"public/2017/03/08/CV_part01_Introduction/index.html","hash":"9099552dba056b771a57a4cc1c629416b282a725","modified":1543266508899},{"_id":"public/archives/index.html","hash":"c63760b901f833d7316ed274baa330685502e839","modified":1543266508899},{"_id":"public/archives/page/2/index.html","hash":"0b0134752f1802dbdaac8113ae75b87da354c1e4","modified":1543266508899},{"_id":"public/categories/CV/index.html","hash":"54dfa7b8b1aaa879245843fae13241389b891178","modified":1543266508899},{"_id":"public/categories/data-mining/index.html","hash":"bf3d58dd163d851004c106e221e23837eec99d6b","modified":1543266508899},{"_id":"public/tags/CV/index.html","hash":"ed6e40d1cfed1c77d6200fea0bc90ce6e3cb15cc","modified":1543266508899},{"_id":"public/tags/data-mining/index.html","hash":"b9cd232cd428659542c38919c5306ea1e1b1f38c","modified":1543266508899},{"_id":"public/tags/js/index.html","hash":"c774b65380906a0cc7c478843052ba1b2aee72a4","modified":1543266508899},{"_id":"public/tags/js-express-nodejs/index.html","hash":"f20e92ca1a3f4cbc5271f990ac1aba52ca585385","modified":1543266508899},{"_id":"public/tags/gulp-vue/index.html","hash":"4af12d8303b3387ec2ca58baedc2afccaaf184b0","modified":1543266508899},{"_id":"public/tags/gulp/index.html","hash":"e05315cb2e10e51d0f08b41f8dcb7aa2e4be680c","modified":1543266508899},{"_id":"public/tags/mathjax/index.html","hash":"ce5c89041e7772fce928d58eae6914a2c20060c4","modified":1543266508899},{"_id":"public/tags/hexo/index.html","hash":"1b848ecd1ce4a8395efbc338ba061797a3bb52f8","modified":1543266508899},{"_id":"public/tags/shell/index.html","hash":"71813ffbfd554efac903c1e4713582644d983f3b","modified":1543266508899},{"_id":"public/tags/linux/index.html","hash":"dea79a79345627f505b89bb37b113ea70a3e9077","modified":1543266508900},{"_id":"public/tags/unix-OS-fs-error/index.html","hash":"485b3b94d1e4cb920689daecce99166ad2b6cdb1","modified":1543266508900},{"_id":"public/tags/unix-OS/index.html","hash":"b476b2da72dc3ffe057897cff76d0fa5fb2b1b7c","modified":1543266508900},{"_id":"public/tags/vuejs/index.html","hash":"8b5408dbd53cd1c5d4cde9eac678d93b9883dbf0","modified":1543266508900},{"_id":"public/tags/nodejs/index.html","hash":"52cfa78a7b308cdaa9fdbab5c7d9d1cb2eae0299","modified":1543266508900},{"_id":"public/tags/unix-OS-zsh/index.html","hash":"ac0774893846f416278ff4ec977d4d1695d0edf8","modified":1543266508900},{"_id":"public/tags/杂谈-web开发/index.html","hash":"a533d33c862f0351ba305088090590a4db19b3a7","modified":1543266508900},{"_id":"public/index.html","hash":"ebf165b60c2ce627773e761444d9775c443e75b0","modified":1543266508900},{"_id":"public/page/2/index.html","hash":"2774a883fc724e034e8c51babedcf413911ec15f","modified":1543266508900},{"_id":"public/page/3/index.html","hash":"4253113a62da39c7ffe8de125b143ba51b285898","modified":1543266508900},{"_id":"public/2018/11/21/js规范-1.变量的声明与定义/index.html","hash":"da561d9afb2342b2bb41eaf94c2ea0a3ef0fe0bb","modified":1543266508900},{"_id":"public/2018/11/20/TOEFL-writing-01/index.html","hash":"9af2e6cb1ede0564015fbba63ab630dec6c66861","modified":1543266508900},{"_id":"public/2018/11/20/TOEFL-writing-01-independent-grammar01-subject/index.html","hash":"8da43b8888c2ac20ce587f4edff26443204c7d97","modified":1543266508900},{"_id":"public/2018/11/27/hello-world/index.html","hash":"c388f8eb3717d8f21a3647e517959a8f45f56176","modified":1543266508904},{"_id":"public/2018/11/26/jquery风格替换插件/index.html","hash":"24552547c3d38adde08ca9edafdc81b425f991d6","modified":1543266508904},{"_id":"public/2018/11/26/vue-vs-jquery/index.html","hash":"51e26e64ad3049ab3e5d3d606e78e74982b033fd","modified":1543266508904},{"_id":"public/2018/11/26/ES6/index.html","hash":"7a93b70d39759f6208cd78af7ec789426c32989c","modified":1543266508904},{"_id":"public/CNAME","hash":"033d9adbe192b6f657dcfcacb3150e49db9629bc","modified":1543266508907},{"_id":"public/vis/1.csv","hash":"d61517a27d41bc69cfddc6e4a272ff30aa581817","modified":1543266508907},{"_id":"public/vis/1.html","hash":"aee22037755da82b43c8e2a300a79ed3b6171a97","modified":1543266508907},{"_id":"public/vis/email.csv","hash":"9a82f2d5a735e4866e3b605c8e18b247d9885ed5","modified":1543266508908},{"_id":"public/vis/email2.csv","hash":"0b9649006faf1b839e2ef67e5fe48cd9ba31d031","modified":1543266508908},{"_id":"public/vis/index.html","hash":"05039dd8587ec1335681ac7a6b9ad26a6902f95d","modified":1543266508908},{"_id":"public/vis/new.csv","hash":"b81c493f92f955313084d4066418e8fbbed6a58e","modified":1543266508908},{"_id":"public/vis/staff.csv","hash":"199cbf18e56c94148b1bc3b23c5193b3967229f1","modified":1543266508908},{"_id":"public/vis/temp.html","hash":"5cd722f31d65d59f20a5637811b0964eaf4c01b1","modified":1543266508908},{"_id":"public/css/style.scss","hash":"175c9237798207f705c62777b5f51509adec6d0a","modified":1543266508908},{"_id":"public/fonts/fontawesome-webfont.eot","hash":"0183979056f0b87616cd99d5c54a48f3b771eee6","modified":1543266508908},{"_id":"public/images/faviconlll.png","hash":"d659236704308954da9d64b101c4f54cc3f3255c","modified":1543266508908},{"_id":"public/images/favicon.png","hash":"02383b8631a236118dadc874216200a3e9995977","modified":1543266508908},{"_id":"public/images/logo.png","hash":"41bdf2ebd8cc193ad82a211758af827d891b1a90","modified":1543266508908},{"_id":"public/images/logo@2x.png","hash":"49c3fa97724abf53861bf11356ea9ba5bcb11576","modified":1543266508908},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"7d65e0227d0d7cdc1718119cd2a7dce0638f151c","modified":1543266508908},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"6225ccc4ec94d060f19efab97ca42d842845b949","modified":1543266508910},{"_id":"public/js/jquery-migrate-1.2.1.min.js","hash":"743052320809514fb788fe1d3df37fc87ce90452","modified":1543266508915},{"_id":"public/js/jquery.appear.js","hash":"1f8067d7bd4c0bde30785e8016100f239e14394f","modified":1543266508915},{"_id":"public/js/mathjax.js","hash":"22ad0fd4728a7fb579ad3fa89037d6a762a0daa0","modified":1543266508915},{"_id":"public/vis/d3.v3.min.js","hash":"98d11ed74f83088254b6202c83d8641227e0f0f8","modified":1543266508915},{"_id":"public/css/blog_basic.css","hash":"7db88f0873e858b21a4c981c8481708ad9117478","modified":1543266508916},{"_id":"public/css/style.css","hash":"871a5c940cbc0ce5488a670f2285f2c3015cf71c","modified":1543266508916},{"_id":"public/css/font-awesome.min.css","hash":"95d0b0c4d11105c81be1857b744076a1d2bed918","modified":1543266508920},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"cd980eab6db5fa57db670cb2e4278e67e1a4d6c9","modified":1543266508921},{"_id":"public/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1543266508928}],"Category":[{"name":"CV","_id":"cjoyt14ju0004o49uq9fonfva"},{"name":"data mining","_id":"cjoyt14k6000go49uyfkxvzd8"}],"Data":[],"Page":[{"title":"about","date":"2018-11-20T09:52:49.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-11-20 17:52:49\n---\n","updated":"2018-11-20T09:52:49.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjoyt14jr0001o49u8o4mpaw3","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"links","date":"2018-11-20T09:53:01.000Z","_content":"","source":"links/index.md","raw":"---\ntitle: links\ndate: 2018-11-20 17:53:01\n---\n","updated":"2018-11-20T09:53:01.000Z","path":"links/index.html","comments":1,"layout":"page","_id":"cjoyt14jt0003o49uaog5nnby","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"<!DOCTYPE html>  \n<html> \n    <head>\n    <meta charset=\"utf-8\">  \n        <title>实验三 树图网可视化</title>  \n        <script type=\"text/javascript\" src=\"/js/src/d3.v3.min.js\"></script>  \n    <style type=\"text/css\"> \n        #svg\n        {  \n            padding:20px;  \n            margin:0 auto;\n            padding-top:20px;\n        }\n    </style>  \n    </head>  \n    <body>  \n    </body>  \n    <div id=\"svg\"></div>\n        <script type=\"text/javascript\"> \n\n        var width = 2500, height = 1400;\n        var links = new Array();\n        var nodes = new Array();\n        var colors1 = [1,4,6,45,54,65,76,99];\n        var colors2 = [989,643,76,45,1];\n        var legendText = [\"<10\", \"11 – 50\", \"51 – 100\", \"101 - 200\",\"201 - 300\",\"301 - 400\",\">401\"];\n        var legendText2 = [\"director\", \"CEO\", \"Business Development Unit\", \"Business Support Unit\",\"Business Control Unit\"];\n        d3.csv(\"new.csv\",function(error,data2)\n        {\n            if(error)\n            {\n                console.log(error);\n            }\n            else\n            {\n                for(var i=0;i<data2.length;i++)\n                {\n                    links[i]={source: data2[i].IDA, ss:data2[i].SA ,sd:data2[i].DA,sunit: data2[i].UNITA, target: data2[i].IDB, st:data2[i].SB,tunit:data2[i].UNITB, weight:data2[i].W, td:data2[i].DB, evalue:data2[i].E};\n                }\n            }\n\n            links.forEach(function(link) \n            { \n                //console.log( nodes[link.source] );\n                link.source = nodes[link.source] || (nodes[link.source] = {name: link.source, posi:link.sunit,pos:  link.ss,dp:link.sd});\n                link.target = nodes[link.target] || (nodes[link.target] = {name: link.target, posi:link.tunit,pos:  link.st,dp:link.td});\n\n\n            });\n            var force = d3.layout.force()\n                          .nodes(d3.values(nodes))\n                          .links(links)\n                          .size([width, height])\n                          .linkDistance(150)\n                          .charge(-14500)\n                          .on(\"tick\", tick)\n                          .start();\n\n\n            var svg = d3.select(\"body\")\n                        .select(\"div\")\n                        .append(\"svg\")\n                        .attr(\"width\", width)\n                        .attr(\"height\", height);\n\n\n            var colors=d3.scale.category20(); \n\n\n            var link = svg.selectAll(\".link\")\n                          .data(force.links())\n                          .enter()\n                          .append(\"line\")\n                          .attr(\"class\", \"link\");\n\n            \n                          \n            link.style(\"stroke\",function(d){  \n                    return colors(colors1[d.weight]);  \n                })  \n                .style(\"stroke-width\",function(d,i){  \n                    return d.weight*1.5;  \n                });\n            console.log( force.links());\n            console.log( force.nodes());\n\n            var node = svg.selectAll(\".node\")\n                          .data(force.nodes())\n                          .enter().append(\"g\")\n                          .attr(\"class\", \"node\")\n                          .on(\"mouseover\", mouseover)\n                          .on(\"mouseout\", mouseout)\n                          .call(force.drag);\n                          \n            node.append(\"circle\")\n                .attr(\"r\",function(d){                     \n                    return radius (d);                          \n                })                                           \n                .style(\"fill\",function(d){      \n                    return colors(colors2[d.dp]);\n                });\n                \n            node.append(\"text\")\n                .attr(\"x\", 12)\n                .attr(\"dy\", \".35em\")\n                .text(function(d) { return (d.name); });\n\n            var line_text = svg.selectAll(\".linetext\")  \n                               .data(force.links())  \n                               .enter()  \n                               .append(\"text\")  \n                               .attr(\"class\",\"linetext\")  \n                               .text(function(d){  \n                                return d.evalue;  \n                            });  \n\n\n            function tick() \n            {\n                link\n                .attr(\"x1\", function(d) { return d.source.x; })\n                .attr(\"y1\", function(d) { return d.source.y; })\n                .attr(\"x2\", function(d) { return d.target.x; })\n                .attr(\"y2\", function(d) { return d.target.y; });\n\n                line_text.attr(\"x\",function(d){ return (d.source.x + d.target.x) / 2 ; });  \n                line_text.attr(\"y\",function(d){ return (d.source.y + d.target.y) / 2 ; });  \n       \n                line_text.style(\"fill-opacity\",function(d){  \n                    return d.source.show || d.target.show ? 2.0 : 0.0 ;  \n                });  \n\n                node\n                .attr(\"transform\", function(d) { \n                return \"translate(\" + d.x + \",\" + d.y + \")\"; \n                });\n            }\n\n            function mouseover(d,i) \n            {\n                d3.select(this).select(\"circle\").transition()\n                  .duration(750)\n                  .attr(\"r\", function(d){                        \n                return radius (d)+10;                          \n                }) ;\n\n                d3.select(this).select(\"text\")\n                .text(function(d) { return (d.name +\":\"+ d.posi); })\n                .attr(\"id\",\"text\");\n\n                d.show = true; \n            }\n\n            function mouseout(d,i) \n            {\n                d3.select(this).select(\"circle\").transition()\n                  .duration(750)\n                  .attr(\"r\", function(d){                      \n                return radius (d);                          \n                }) ;\n\n                  d3.select(this).select(\"text\")\n                .text(function(d) { return (d.name); })\n                .attr(\"id\",\"text\");\n\n                 d.show = false; \n            }\n\n\n            \n\n           function  radius (d)\n           { \n                return 60-d.pos*15;                                   \n           }   \n\n\n       var legend = d3.select(\"body\").select(\"div\").append(\"svg\")\n                      .attr(\"class\", \"legend\")\n                      .attr(\"width\", 800)\n                      .attr(\"height\", 700)\n                      .selectAll(\"g\")\n                      .data(legendText)\n                      .enter()\n                      .append(\"g\");\n    \n        legend.append(\"rect\")\n              .attr(\"x\",  function(d, i) { return 80 * i; })\n              .attr(\"y\",50)\n              .attr(\"width\", 80)\n              .attr(\"height\", 50 / 2)\n              .style(\"fill\", function(d, i) { return colors(colors1[i + 1]); });\n    \n        legend.append(\"text\")\n              .attr(\"class\", \"mono\")\n              .text(function(d) { return d; })\n              .attr(\"x\", function(d, i) { return 80 * i + 15; })\n              .attr(\"y\", 100);\n\n       var legend2 = d3.select(\"body\").select(\"div\").append(\"svg\")\n                      .attr(\"class\", \"legend\")\n                      .attr(\"width\", 1800)\n                      .attr(\"height\", 700)\n                      .selectAll(\"g\")\n                      .data(legendText2)\n                      .enter()\n                      .append(\"g\");\n    \n        legend2.append(\"rect\")\n              .attr(\"x\", function(d, i) { return 300 * i; })\n              .attr(\"y\", 50)\n              .attr(\"width\", 120)\n              .attr(\"height\", 50 / 2)\n              .style(\"fill\", function(d, i) { return colors(colors2[i]); });\n    \n        legend2.append(\"text\")\n              .attr(\"class\", \"mono\")\n              .text(function(d) { return d; })\n              .attr(\"x\", function(d, i) { return 300 * i; })\n              .attr(\"y\", 100);\n\n\n        });\n         </script>  \n</html> \n\n","source":"photos/index.html","raw":"<!DOCTYPE html>  \n<html> \n    <head>\n    <meta charset=\"utf-8\">  \n        <title>实验三 树图网可视化</title>  \n        <script type=\"text/javascript\" src=\"/js/src/d3.v3.min.js\"></script>  \n    <style type=\"text/css\"> \n        #svg\n        {  \n            padding:20px;  \n            margin:0 auto;\n            padding-top:20px;\n        }\n    </style>  \n    </head>  \n    <body>  \n    </body>  \n    <div id=\"svg\"></div>\n        <script type=\"text/javascript\"> \n\n        var width = 2500, height = 1400;\n        var links = new Array();\n        var nodes = new Array();\n        var colors1 = [1,4,6,45,54,65,76,99];\n        var colors2 = [989,643,76,45,1];\n        var legendText = [\"<10\", \"11 – 50\", \"51 – 100\", \"101 - 200\",\"201 - 300\",\"301 - 400\",\">401\"];\n        var legendText2 = [\"director\", \"CEO\", \"Business Development Unit\", \"Business Support Unit\",\"Business Control Unit\"];\n        d3.csv(\"new.csv\",function(error,data2)\n        {\n            if(error)\n            {\n                console.log(error);\n            }\n            else\n            {\n                for(var i=0;i<data2.length;i++)\n                {\n                    links[i]={source: data2[i].IDA, ss:data2[i].SA ,sd:data2[i].DA,sunit: data2[i].UNITA, target: data2[i].IDB, st:data2[i].SB,tunit:data2[i].UNITB, weight:data2[i].W, td:data2[i].DB, evalue:data2[i].E};\n                }\n            }\n\n            links.forEach(function(link) \n            { \n                //console.log( nodes[link.source] );\n                link.source = nodes[link.source] || (nodes[link.source] = {name: link.source, posi:link.sunit,pos:  link.ss,dp:link.sd});\n                link.target = nodes[link.target] || (nodes[link.target] = {name: link.target, posi:link.tunit,pos:  link.st,dp:link.td});\n\n\n            });\n            var force = d3.layout.force()\n                          .nodes(d3.values(nodes))\n                          .links(links)\n                          .size([width, height])\n                          .linkDistance(150)\n                          .charge(-14500)\n                          .on(\"tick\", tick)\n                          .start();\n\n\n            var svg = d3.select(\"body\")\n                        .select(\"div\")\n                        .append(\"svg\")\n                        .attr(\"width\", width)\n                        .attr(\"height\", height);\n\n\n            var colors=d3.scale.category20(); \n\n\n            var link = svg.selectAll(\".link\")\n                          .data(force.links())\n                          .enter()\n                          .append(\"line\")\n                          .attr(\"class\", \"link\");\n\n            \n                          \n            link.style(\"stroke\",function(d){  \n                    return colors(colors1[d.weight]);  \n                })  \n                .style(\"stroke-width\",function(d,i){  \n                    return d.weight*1.5;  \n                });\n            console.log( force.links());\n            console.log( force.nodes());\n\n            var node = svg.selectAll(\".node\")\n                          .data(force.nodes())\n                          .enter().append(\"g\")\n                          .attr(\"class\", \"node\")\n                          .on(\"mouseover\", mouseover)\n                          .on(\"mouseout\", mouseout)\n                          .call(force.drag);\n                          \n            node.append(\"circle\")\n                .attr(\"r\",function(d){                     \n                    return radius (d);                          \n                })                                           \n                .style(\"fill\",function(d){      \n                    return colors(colors2[d.dp]);\n                });\n                \n            node.append(\"text\")\n                .attr(\"x\", 12)\n                .attr(\"dy\", \".35em\")\n                .text(function(d) { return (d.name); });\n\n            var line_text = svg.selectAll(\".linetext\")  \n                               .data(force.links())  \n                               .enter()  \n                               .append(\"text\")  \n                               .attr(\"class\",\"linetext\")  \n                               .text(function(d){  \n                                return d.evalue;  \n                            });  \n\n\n            function tick() \n            {\n                link\n                .attr(\"x1\", function(d) { return d.source.x; })\n                .attr(\"y1\", function(d) { return d.source.y; })\n                .attr(\"x2\", function(d) { return d.target.x; })\n                .attr(\"y2\", function(d) { return d.target.y; });\n\n                line_text.attr(\"x\",function(d){ return (d.source.x + d.target.x) / 2 ; });  \n                line_text.attr(\"y\",function(d){ return (d.source.y + d.target.y) / 2 ; });  \n       \n                line_text.style(\"fill-opacity\",function(d){  \n                    return d.source.show || d.target.show ? 2.0 : 0.0 ;  \n                });  \n\n                node\n                .attr(\"transform\", function(d) { \n                return \"translate(\" + d.x + \",\" + d.y + \")\"; \n                });\n            }\n\n            function mouseover(d,i) \n            {\n                d3.select(this).select(\"circle\").transition()\n                  .duration(750)\n                  .attr(\"r\", function(d){                        \n                return radius (d)+10;                          \n                }) ;\n\n                d3.select(this).select(\"text\")\n                .text(function(d) { return (d.name +\":\"+ d.posi); })\n                .attr(\"id\",\"text\");\n\n                d.show = true; \n            }\n\n            function mouseout(d,i) \n            {\n                d3.select(this).select(\"circle\").transition()\n                  .duration(750)\n                  .attr(\"r\", function(d){                      \n                return radius (d);                          \n                }) ;\n\n                  d3.select(this).select(\"text\")\n                .text(function(d) { return (d.name); })\n                .attr(\"id\",\"text\");\n\n                 d.show = false; \n            }\n\n\n            \n\n           function  radius (d)\n           { \n                return 60-d.pos*15;                                   \n           }   \n\n\n       var legend = d3.select(\"body\").select(\"div\").append(\"svg\")\n                      .attr(\"class\", \"legend\")\n                      .attr(\"width\", 800)\n                      .attr(\"height\", 700)\n                      .selectAll(\"g\")\n                      .data(legendText)\n                      .enter()\n                      .append(\"g\");\n    \n        legend.append(\"rect\")\n              .attr(\"x\",  function(d, i) { return 80 * i; })\n              .attr(\"y\",50)\n              .attr(\"width\", 80)\n              .attr(\"height\", 50 / 2)\n              .style(\"fill\", function(d, i) { return colors(colors1[i + 1]); });\n    \n        legend.append(\"text\")\n              .attr(\"class\", \"mono\")\n              .text(function(d) { return d; })\n              .attr(\"x\", function(d, i) { return 80 * i + 15; })\n              .attr(\"y\", 100);\n\n       var legend2 = d3.select(\"body\").select(\"div\").append(\"svg\")\n                      .attr(\"class\", \"legend\")\n                      .attr(\"width\", 1800)\n                      .attr(\"height\", 700)\n                      .selectAll(\"g\")\n                      .data(legendText2)\n                      .enter()\n                      .append(\"g\");\n    \n        legend2.append(\"rect\")\n              .attr(\"x\", function(d, i) { return 300 * i; })\n              .attr(\"y\", 50)\n              .attr(\"width\", 120)\n              .attr(\"height\", 50 / 2)\n              .style(\"fill\", function(d, i) { return colors(colors2[i]); });\n    \n        legend2.append(\"text\")\n              .attr(\"class\", \"mono\")\n              .text(function(d) { return d; })\n              .attr(\"x\", function(d, i) { return 300 * i; })\n              .attr(\"y\", 100);\n\n\n        });\n         </script>  \n</html> \n\n","date":"2018-11-26T21:04:10.254Z","updated":"2017-03-08T10:20:28.000Z","path":"photos/index.html","title":"","comments":1,"layout":"page","_id":"cjoyt14jx0007o49ut9qryu07","content":"<!DOCTYPE html>  \n<html> \n    <head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n    <meta charset=\"utf-8\">  \n        <title>实验三 树图网可视化</title>  \n        <script type=\"text/javascript\" src=\"/js/src/d3.v3.min.js\"></script>  \n    <style type=\"text/css\"> \n        #svg\n        {  \n            padding:20px;  \n            margin:0 auto;\n            padding-top:20px;\n        }\n    </style>  \n    </head>  \n    <body>  \n    </body>  \n    <div id=\"svg\"></div>\n        <script type=\"text/javascript\"> \n\n        var width = 2500, height = 1400;\n        var links = new Array();\n        var nodes = new Array();\n        var colors1 = [1,4,6,45,54,65,76,99];\n        var colors2 = [989,643,76,45,1];\n        var legendText = [\"<10\", \"11 – 50\", \"51 – 100\", \"101 - 200\",\"201 - 300\",\"301 - 400\",\">401\"];\n        var legendText2 = [\"director\", \"CEO\", \"Business Development Unit\", \"Business Support Unit\",\"Business Control Unit\"];\n        d3.csv(\"new.csv\",function(error,data2)\n        {\n            if(error)\n            {\n                console.log(error);\n            }\n            else\n            {\n                for(var i=0;i<data2.length;i++)\n                {\n                    links[i]={source: data2[i].IDA, ss:data2[i].SA ,sd:data2[i].DA,sunit: data2[i].UNITA, target: data2[i].IDB, st:data2[i].SB,tunit:data2[i].UNITB, weight:data2[i].W, td:data2[i].DB, evalue:data2[i].E};\n                }\n            }\n\n            links.forEach(function(link) \n            { \n                //console.log( nodes[link.source] );\n                link.source = nodes[link.source] || (nodes[link.source] = {name: link.source, posi:link.sunit,pos:  link.ss,dp:link.sd});\n                link.target = nodes[link.target] || (nodes[link.target] = {name: link.target, posi:link.tunit,pos:  link.st,dp:link.td});\n\n\n            });\n            var force = d3.layout.force()\n                          .nodes(d3.values(nodes))\n                          .links(links)\n                          .size([width, height])\n                          .linkDistance(150)\n                          .charge(-14500)\n                          .on(\"tick\", tick)\n                          .start();\n\n\n            var svg = d3.select(\"body\")\n                        .select(\"div\")\n                        .append(\"svg\")\n                        .attr(\"width\", width)\n                        .attr(\"height\", height);\n\n\n            var colors=d3.scale.category20(); \n\n\n            var link = svg.selectAll(\".link\")\n                          .data(force.links())\n                          .enter()\n                          .append(\"line\")\n                          .attr(\"class\", \"link\");\n\n            \n                          \n            link.style(\"stroke\",function(d){  \n                    return colors(colors1[d.weight]);  \n                })  \n                .style(\"stroke-width\",function(d,i){  \n                    return d.weight*1.5;  \n                });\n            console.log( force.links());\n            console.log( force.nodes());\n\n            var node = svg.selectAll(\".node\")\n                          .data(force.nodes())\n                          .enter().append(\"g\")\n                          .attr(\"class\", \"node\")\n                          .on(\"mouseover\", mouseover)\n                          .on(\"mouseout\", mouseout)\n                          .call(force.drag);\n                          \n            node.append(\"circle\")\n                .attr(\"r\",function(d){                     \n                    return radius (d);                          \n                })                                           \n                .style(\"fill\",function(d){      \n                    return colors(colors2[d.dp]);\n                });\n                \n            node.append(\"text\")\n                .attr(\"x\", 12)\n                .attr(\"dy\", \".35em\")\n                .text(function(d) { return (d.name); });\n\n            var line_text = svg.selectAll(\".linetext\")  \n                               .data(force.links())  \n                               .enter()  \n                               .append(\"text\")  \n                               .attr(\"class\",\"linetext\")  \n                               .text(function(d){  \n                                return d.evalue;  \n                            });  \n\n\n            function tick() \n            {\n                link\n                .attr(\"x1\", function(d) { return d.source.x; })\n                .attr(\"y1\", function(d) { return d.source.y; })\n                .attr(\"x2\", function(d) { return d.target.x; })\n                .attr(\"y2\", function(d) { return d.target.y; });\n\n                line_text.attr(\"x\",function(d){ return (d.source.x + d.target.x) / 2 ; });  \n                line_text.attr(\"y\",function(d){ return (d.source.y + d.target.y) / 2 ; });  \n       \n                line_text.style(\"fill-opacity\",function(d){  \n                    return d.source.show || d.target.show ? 2.0 : 0.0 ;  \n                });  \n\n                node\n                .attr(\"transform\", function(d) { \n                return \"translate(\" + d.x + \",\" + d.y + \")\"; \n                });\n            }\n\n            function mouseover(d,i) \n            {\n                d3.select(this).select(\"circle\").transition()\n                  .duration(750)\n                  .attr(\"r\", function(d){                        \n                return radius (d)+10;                          \n                }) ;\n\n                d3.select(this).select(\"text\")\n                .text(function(d) { return (d.name +\":\"+ d.posi); })\n                .attr(\"id\",\"text\");\n\n                d.show = true; \n            }\n\n            function mouseout(d,i) \n            {\n                d3.select(this).select(\"circle\").transition()\n                  .duration(750)\n                  .attr(\"r\", function(d){                      \n                return radius (d);                          \n                }) ;\n\n                  d3.select(this).select(\"text\")\n                .text(function(d) { return (d.name); })\n                .attr(\"id\",\"text\");\n\n                 d.show = false; \n            }\n\n\n            \n\n           function  radius (d)\n           { \n                return 60-d.pos*15;                                   \n           }   \n\n\n       var legend = d3.select(\"body\").select(\"div\").append(\"svg\")\n                      .attr(\"class\", \"legend\")\n                      .attr(\"width\", 800)\n                      .attr(\"height\", 700)\n                      .selectAll(\"g\")\n                      .data(legendText)\n                      .enter()\n                      .append(\"g\");\n    \n        legend.append(\"rect\")\n              .attr(\"x\",  function(d, i) { return 80 * i; })\n              .attr(\"y\",50)\n              .attr(\"width\", 80)\n              .attr(\"height\", 50 / 2)\n              .style(\"fill\", function(d, i) { return colors(colors1[i + 1]); });\n    \n        legend.append(\"text\")\n              .attr(\"class\", \"mono\")\n              .text(function(d) { return d; })\n              .attr(\"x\", function(d, i) { return 80 * i + 15; })\n              .attr(\"y\", 100);\n\n       var legend2 = d3.select(\"body\").select(\"div\").append(\"svg\")\n                      .attr(\"class\", \"legend\")\n                      .attr(\"width\", 1800)\n                      .attr(\"height\", 700)\n                      .selectAll(\"g\")\n                      .data(legendText2)\n                      .enter()\n                      .append(\"g\");\n    \n        legend2.append(\"rect\")\n              .attr(\"x\", function(d, i) { return 300 * i; })\n              .attr(\"y\", 50)\n              .attr(\"width\", 120)\n              .attr(\"height\", 50 / 2)\n              .style(\"fill\", function(d, i) { return colors(colors2[i]); });\n    \n        legend2.append(\"text\")\n              .attr(\"class\", \"mono\")\n              .text(function(d) { return d; })\n              .attr(\"x\", function(d, i) { return 300 * i; })\n              .attr(\"y\", 100);\n\n\n        });\n         </script>  \n</html> \n\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>  \n<html> \n    <head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n    <meta charset=\"utf-8\">  \n        <title>实验三 树图网可视化</title>  \n        <script type=\"text/javascript\" src=\"/js/src/d3.v3.min.js\"></script>  \n    <style type=\"text/css\"> \n        #svg\n        {  \n            padding:20px;  \n            margin:0 auto;\n            padding-top:20px;\n        }\n    </style>  \n    </head>  \n    <body>  \n    </body>  \n    <div id=\"svg\"></div>\n        <script type=\"text/javascript\"> \n\n        var width = 2500, height = 1400;\n        var links = new Array();\n        var nodes = new Array();\n        var colors1 = [1,4,6,45,54,65,76,99];\n        var colors2 = [989,643,76,45,1];\n        var legendText = [\"<10\", \"11 – 50\", \"51 – 100\", \"101 - 200\",\"201 - 300\",\"301 - 400\",\">401\"];\n        var legendText2 = [\"director\", \"CEO\", \"Business Development Unit\", \"Business Support Unit\",\"Business Control Unit\"];\n        d3.csv(\"new.csv\",function(error,data2)\n        {\n            if(error)\n            {\n                console.log(error);\n            }\n            else\n            {\n                for(var i=0;i<data2.length;i++)\n                {\n                    links[i]={source: data2[i].IDA, ss:data2[i].SA ,sd:data2[i].DA,sunit: data2[i].UNITA, target: data2[i].IDB, st:data2[i].SB,tunit:data2[i].UNITB, weight:data2[i].W, td:data2[i].DB, evalue:data2[i].E};\n                }\n            }\n\n            links.forEach(function(link) \n            { \n                //console.log( nodes[link.source] );\n                link.source = nodes[link.source] || (nodes[link.source] = {name: link.source, posi:link.sunit,pos:  link.ss,dp:link.sd});\n                link.target = nodes[link.target] || (nodes[link.target] = {name: link.target, posi:link.tunit,pos:  link.st,dp:link.td});\n\n\n            });\n            var force = d3.layout.force()\n                          .nodes(d3.values(nodes))\n                          .links(links)\n                          .size([width, height])\n                          .linkDistance(150)\n                          .charge(-14500)\n                          .on(\"tick\", tick)\n                          .start();\n\n\n            var svg = d3.select(\"body\")\n                        .select(\"div\")\n                        .append(\"svg\")\n                        .attr(\"width\", width)\n                        .attr(\"height\", height);\n\n\n            var colors=d3.scale.category20(); \n\n\n            var link = svg.selectAll(\".link\")\n                          .data(force.links())\n                          .enter()\n                          .append(\"line\")\n                          .attr(\"class\", \"link\");\n\n            \n                          \n            link.style(\"stroke\",function(d){  \n                    return colors(colors1[d.weight]);  \n                })  \n                .style(\"stroke-width\",function(d,i){  \n                    return d.weight*1.5;  \n                });\n            console.log( force.links());\n            console.log( force.nodes());\n\n            var node = svg.selectAll(\".node\")\n                          .data(force.nodes())\n                          .enter().append(\"g\")\n                          .attr(\"class\", \"node\")\n                          .on(\"mouseover\", mouseover)\n                          .on(\"mouseout\", mouseout)\n                          .call(force.drag);\n                          \n            node.append(\"circle\")\n                .attr(\"r\",function(d){                     \n                    return radius (d);                          \n                })                                           \n                .style(\"fill\",function(d){      \n                    return colors(colors2[d.dp]);\n                });\n                \n            node.append(\"text\")\n                .attr(\"x\", 12)\n                .attr(\"dy\", \".35em\")\n                .text(function(d) { return (d.name); });\n\n            var line_text = svg.selectAll(\".linetext\")  \n                               .data(force.links())  \n                               .enter()  \n                               .append(\"text\")  \n                               .attr(\"class\",\"linetext\")  \n                               .text(function(d){  \n                                return d.evalue;  \n                            });  \n\n\n            function tick() \n            {\n                link\n                .attr(\"x1\", function(d) { return d.source.x; })\n                .attr(\"y1\", function(d) { return d.source.y; })\n                .attr(\"x2\", function(d) { return d.target.x; })\n                .attr(\"y2\", function(d) { return d.target.y; });\n\n                line_text.attr(\"x\",function(d){ return (d.source.x + d.target.x) / 2 ; });  \n                line_text.attr(\"y\",function(d){ return (d.source.y + d.target.y) / 2 ; });  \n       \n                line_text.style(\"fill-opacity\",function(d){  \n                    return d.source.show || d.target.show ? 2.0 : 0.0 ;  \n                });  \n\n                node\n                .attr(\"transform\", function(d) { \n                return \"translate(\" + d.x + \",\" + d.y + \")\"; \n                });\n            }\n\n            function mouseover(d,i) \n            {\n                d3.select(this).select(\"circle\").transition()\n                  .duration(750)\n                  .attr(\"r\", function(d){                        \n                return radius (d)+10;                          \n                }) ;\n\n                d3.select(this).select(\"text\")\n                .text(function(d) { return (d.name +\":\"+ d.posi); })\n                .attr(\"id\",\"text\");\n\n                d.show = true; \n            }\n\n            function mouseout(d,i) \n            {\n                d3.select(this).select(\"circle\").transition()\n                  .duration(750)\n                  .attr(\"r\", function(d){                      \n                return radius (d);                          \n                }) ;\n\n                  d3.select(this).select(\"text\")\n                .text(function(d) { return (d.name); })\n                .attr(\"id\",\"text\");\n\n                 d.show = false; \n            }\n\n\n            \n\n           function  radius (d)\n           { \n                return 60-d.pos*15;                                   \n           }   \n\n\n       var legend = d3.select(\"body\").select(\"div\").append(\"svg\")\n                      .attr(\"class\", \"legend\")\n                      .attr(\"width\", 800)\n                      .attr(\"height\", 700)\n                      .selectAll(\"g\")\n                      .data(legendText)\n                      .enter()\n                      .append(\"g\");\n    \n        legend.append(\"rect\")\n              .attr(\"x\",  function(d, i) { return 80 * i; })\n              .attr(\"y\",50)\n              .attr(\"width\", 80)\n              .attr(\"height\", 50 / 2)\n              .style(\"fill\", function(d, i) { return colors(colors1[i + 1]); });\n    \n        legend.append(\"text\")\n              .attr(\"class\", \"mono\")\n              .text(function(d) { return d; })\n              .attr(\"x\", function(d, i) { return 80 * i + 15; })\n              .attr(\"y\", 100);\n\n       var legend2 = d3.select(\"body\").select(\"div\").append(\"svg\")\n                      .attr(\"class\", \"legend\")\n                      .attr(\"width\", 1800)\n                      .attr(\"height\", 700)\n                      .selectAll(\"g\")\n                      .data(legendText2)\n                      .enter()\n                      .append(\"g\");\n    \n        legend2.append(\"rect\")\n              .attr(\"x\", function(d, i) { return 300 * i; })\n              .attr(\"y\", 50)\n              .attr(\"width\", 120)\n              .attr(\"height\", 50 / 2)\n              .style(\"fill\", function(d, i) { return colors(colors2[i]); });\n    \n        legend2.append(\"text\")\n              .attr(\"class\", \"mono\")\n              .text(function(d) { return d; })\n              .attr(\"x\", function(d, i) { return 300 * i; })\n              .attr(\"y\", 100);\n\n\n        });\n         </script>  \n</html> \n\n"},{"title":"photos","date":"2017-03-08T09:38:01.000Z","_content":"","source":"photos/index.md","raw":"---\ntitle: photos\ndate: 2017-03-08 17:38:01\n---\n","updated":"2017-03-08T09:38:01.000Z","path":"photos/index.html","comments":1,"layout":"page","_id":"cjoyt14jz0009o49u56dvtczn","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"CV_part02_Imageformation","date":"2017-03-16T03:45:41.000Z","_content":"\n","source":"_posts/CV_part02_Imageformation.md","raw":"---\ntitle: CV_part02_Imageformation\ndate: 2017-03-16 11:45:41\ntags: CV\ncategories: CV\n---\n\n","slug":"CV_part02_Imageformation","published":1,"updated":"2017-09-28T02:21:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14jn0000o49u5guqcref","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"CV_part01_Introduction","date":"2017-03-08T03:45:41.000Z","_content":"# Applications\n1. Optical character recognition\n2. Machine inspection\n3. Object recognition\n4. Medical imaging\n5. Automotive safety\n6. Match move: Hollywood movie\n7. Motion capture\n8. Surveillance\n9. Biometrics\n10. Stitching, Morphing\n11. ...ETC\n\n# Topics\n1. Image Formation\n2. Image Processing\n3. Features\n4. Segmentation\n5. Motion\n6. Stitching\n7. Computational Photographs\n8. Stereo\n9. 3D shape\n10. Image-Based Rendering\n11. Recognition","source":"_posts/CV_part01_Introduction.md","raw":"---\ntitle: CV_part01_Introduction\ndate: 2017-03-08 11:45:41\ntags: CV\ncategories: CV\n---\n# Applications\n1. Optical character recognition\n2. Machine inspection\n3. Object recognition\n4. Medical imaging\n5. Automotive safety\n6. Match move: Hollywood movie\n7. Motion capture\n8. Surveillance\n9. Biometrics\n10. Stitching, Morphing\n11. ...ETC\n\n# Topics\n1. Image Formation\n2. Image Processing\n3. Features\n4. Segmentation\n5. Motion\n6. Stitching\n7. Computational Photographs\n8. Stereo\n9. 3D shape\n10. Image-Based Rendering\n11. Recognition","slug":"CV_part01_Introduction","published":1,"updated":"2017-03-08T11:58:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14js0002o49um56d6j8m","content":"<h1 id=\"Applications\"><a href=\"#Applications\" class=\"headerlink\" title=\"Applications\"></a>Applications</h1><ol>\n<li>Optical character recognition</li>\n<li>Machine inspection</li>\n<li>Object recognition</li>\n<li>Medical imaging</li>\n<li>Automotive safety</li>\n<li>Match move: Hollywood movie</li>\n<li>Motion capture</li>\n<li>Surveillance</li>\n<li>Biometrics</li>\n<li>Stitching, Morphing</li>\n<li>…ETC</li>\n</ol>\n<h1 id=\"Topics\"><a href=\"#Topics\" class=\"headerlink\" title=\"Topics\"></a>Topics</h1><ol>\n<li>Image Formation</li>\n<li>Image Processing</li>\n<li>Features</li>\n<li>Segmentation</li>\n<li>Motion</li>\n<li>Stitching</li>\n<li>Computational Photographs</li>\n<li>Stereo</li>\n<li>3D shape</li>\n<li>Image-Based Rendering</li>\n<li>Recognition</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Applications\"><a href=\"#Applications\" class=\"headerlink\" title=\"Applications\"></a>Applications</h1><ol>\n<li>Optical character recognition</li>\n<li>Machine inspection</li>\n<li>Object recognition</li>\n<li>Medical imaging</li>\n<li>Automotive safety</li>\n<li>Match move: Hollywood movie</li>\n<li>Motion capture</li>\n<li>Surveillance</li>\n<li>Biometrics</li>\n<li>Stitching, Morphing</li>\n<li>…ETC</li>\n</ol>\n<h1 id=\"Topics\"><a href=\"#Topics\" class=\"headerlink\" title=\"Topics\"></a>Topics</h1><ol>\n<li>Image Formation</li>\n<li>Image Processing</li>\n<li>Features</li>\n<li>Segmentation</li>\n<li>Motion</li>\n<li>Stitching</li>\n<li>Computational Photographs</li>\n<li>Stereo</li>\n<li>3D shape</li>\n<li>Image-Based Rendering</li>\n<li>Recognition</li>\n</ol>\n"},{"title":"What is data?","date":"2018-03-06T03:45:41.000Z","mathjax":true,"_content":"\n## Data Object And Attribute\n\n**attribute :** dimension, feature, variable\n\n**nominal attribute :** hair_color 、 marital_status\n\n**binary attribute :** bool\n\n**ordinal attribute :** ranking\n\n**numeric attribute :**\n\n\n## Statistical Description\n\n**measure of central tendency :** mean, median, mode, midrange\n\n**measure of Data dissemination :** range, quantile, IQR, boxplot, variance, standard deviation\n\n## Data Matrix And Dissimilarity Matrix\n\n**data matrix :** \n$$\n\\left[\n\\begin{matrix}\nx_{11}&\\cdots&x_{1f}&\\cdots&x_{1p}\\\\\n\\cdots&\\cdots&\\cdots&\\cdots&\\cdots\\\\\nx_{i1}&\\cdots&x_{if}&\\cdots&x_{ip}\\\\\n\\cdots&\\cdots&\\cdots&\\cdots&\\cdots\\\\\nx_{p1}&\\cdots&x_{pf}&\\cdots&x_{pp}\\\\\n\\end{matrix}\n\\right]\\\\\n(n\\ objs\\ \\times p\\ attributes)\n$$\n\n**Dissimilarity Matrix :** \n$$\n\\left[\n\\begin{matrix}\n0\\\\\nd(2,1)&0\\\\\nd(3,1)&d(3,2)&0\\\\\n\\vdots&\\vdots&\\vdots\\\\\nd(n,1)&d(n,2)&\\cdots&\\cdots&0\\\\\n\\end{matrix}\n\\right]\\\\\n(n\\ objs\\ \\times n\\ objs)\n$$\n\n1. **nominal attribute **\n\n    **mismatch rate :** $d(i,j) = \\frac{p - m}{p}$\n\n    p:Total attribute\n\n    m:match attribute\n\n\n2. **binary attribute **\n\n    **mismatch rate :** $d(i,j) = \\frac{r + s}{q + r + s + t}$\n\n    q:the num of both i's and j's attribute whose value equals 1\n\n    t:the num of both i's and j's attribute whose value equals 0\n\n    s:the num of attributes whose value equals 0 for i and 1 for j\n\n    r:the num of attributes whose value equals 1 for i and 0 for j\n\n    ignore t: $d(i,j) = \\frac{r + s}{q + r + s}$\n\n    **Jaccard coefficient :** $d(i,j) = \\frac{q}{q + r + s}$\n\n3. **numeric attribute **\n\n    **Euclid  distance (2-norm):** $d(i,j) = \\sqrt{(x_{i1}-x_{j1})^{2}+(x_{i2}-x_{j2})^{2}+\\cdots+(x_{ip}-x_{jp})^{2}}$\n\n    **Manhattan  distance (1-norm):** $d(i,j) = |x_{i1}-x_{j1}|+|x_{i2}-x_{j2}|+\\cdots+|x_{ip}-x_{jp}|$\n\n    Euclid and Manhattan's nature:\n\n    1. Non-negative $d(i,j) \\ge 0$\n    2. $d(i,i) = 0$\n    3. Symmetry $d(i,j) = d(j,i)$\n    4. $d(i,j) \\le d(i,k) + d(k,j)$\n\n    **Minkowski  distance (p-norm):** $d(i,j) = \\sqrt[h]{|x_{i1}-x_{j1}|^{h}+|x_{i2}-x_{j2}|^{h}+\\cdots+|x_{ip}-x_{jp}|^{h}}$\n\n    **Chebyshev  distance ($\\infty$-norm):** the maximum of each attribute's distance $$d(i,j) = \\lim_{h \\to 0} \\left( \\sum_{f=1}^p |x_{if}-x_{jf}|^{h}\\right)^{\\frac{1}{h}} = \\max_{f}^{p}|x_{if}-x_{jf}|$$\n\n4. **ordinal attribute **\n\n    mapping [0.0, 1.0]\n\n\n5. **mixed type**\n\n    weighted mean\n\n6. ** cosine similarity**\n\n    $$\n    sim(x,y) = \\frac{x \\cdot y}{||x||\\ ||y||}\\\\\n    Tanimoto\\ Distance: sim(x,y) = \\frac{x \\cdot y}{x \\cdot x + y \\cdot y - x \\cdot y}\\\\\n    ||x||:Euclid\\  distance\n    $$\n\n\n\n\n\n","source":"_posts/Data Mining.md","raw":"---\ntitle: What is data?\ndate: 2018-03-06 11:45:41\ntags: data mining\nmathjax: true\ncategories: data mining\n---\n\n## Data Object And Attribute\n\n**attribute :** dimension, feature, variable\n\n**nominal attribute :** hair_color 、 marital_status\n\n**binary attribute :** bool\n\n**ordinal attribute :** ranking\n\n**numeric attribute :**\n\n\n## Statistical Description\n\n**measure of central tendency :** mean, median, mode, midrange\n\n**measure of Data dissemination :** range, quantile, IQR, boxplot, variance, standard deviation\n\n## Data Matrix And Dissimilarity Matrix\n\n**data matrix :** \n$$\n\\left[\n\\begin{matrix}\nx_{11}&\\cdots&x_{1f}&\\cdots&x_{1p}\\\\\n\\cdots&\\cdots&\\cdots&\\cdots&\\cdots\\\\\nx_{i1}&\\cdots&x_{if}&\\cdots&x_{ip}\\\\\n\\cdots&\\cdots&\\cdots&\\cdots&\\cdots\\\\\nx_{p1}&\\cdots&x_{pf}&\\cdots&x_{pp}\\\\\n\\end{matrix}\n\\right]\\\\\n(n\\ objs\\ \\times p\\ attributes)\n$$\n\n**Dissimilarity Matrix :** \n$$\n\\left[\n\\begin{matrix}\n0\\\\\nd(2,1)&0\\\\\nd(3,1)&d(3,2)&0\\\\\n\\vdots&\\vdots&\\vdots\\\\\nd(n,1)&d(n,2)&\\cdots&\\cdots&0\\\\\n\\end{matrix}\n\\right]\\\\\n(n\\ objs\\ \\times n\\ objs)\n$$\n\n1. **nominal attribute **\n\n    **mismatch rate :** $d(i,j) = \\frac{p - m}{p}$\n\n    p:Total attribute\n\n    m:match attribute\n\n\n2. **binary attribute **\n\n    **mismatch rate :** $d(i,j) = \\frac{r + s}{q + r + s + t}$\n\n    q:the num of both i's and j's attribute whose value equals 1\n\n    t:the num of both i's and j's attribute whose value equals 0\n\n    s:the num of attributes whose value equals 0 for i and 1 for j\n\n    r:the num of attributes whose value equals 1 for i and 0 for j\n\n    ignore t: $d(i,j) = \\frac{r + s}{q + r + s}$\n\n    **Jaccard coefficient :** $d(i,j) = \\frac{q}{q + r + s}$\n\n3. **numeric attribute **\n\n    **Euclid  distance (2-norm):** $d(i,j) = \\sqrt{(x_{i1}-x_{j1})^{2}+(x_{i2}-x_{j2})^{2}+\\cdots+(x_{ip}-x_{jp})^{2}}$\n\n    **Manhattan  distance (1-norm):** $d(i,j) = |x_{i1}-x_{j1}|+|x_{i2}-x_{j2}|+\\cdots+|x_{ip}-x_{jp}|$\n\n    Euclid and Manhattan's nature:\n\n    1. Non-negative $d(i,j) \\ge 0$\n    2. $d(i,i) = 0$\n    3. Symmetry $d(i,j) = d(j,i)$\n    4. $d(i,j) \\le d(i,k) + d(k,j)$\n\n    **Minkowski  distance (p-norm):** $d(i,j) = \\sqrt[h]{|x_{i1}-x_{j1}|^{h}+|x_{i2}-x_{j2}|^{h}+\\cdots+|x_{ip}-x_{jp}|^{h}}$\n\n    **Chebyshev  distance ($\\infty$-norm):** the maximum of each attribute's distance $$d(i,j) = \\lim_{h \\to 0} \\left( \\sum_{f=1}^p |x_{if}-x_{jf}|^{h}\\right)^{\\frac{1}{h}} = \\max_{f}^{p}|x_{if}-x_{jf}|$$\n\n4. **ordinal attribute **\n\n    mapping [0.0, 1.0]\n\n\n5. **mixed type**\n\n    weighted mean\n\n6. ** cosine similarity**\n\n    $$\n    sim(x,y) = \\frac{x \\cdot y}{||x||\\ ||y||}\\\\\n    Tanimoto\\ Distance: sim(x,y) = \\frac{x \\cdot y}{x \\cdot x + y \\cdot y - x \\cdot y}\\\\\n    ||x||:Euclid\\  distance\n    $$\n\n\n\n\n\n","slug":"Data Mining","published":1,"updated":"2018-11-20T15:47:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14jw0006o49ujtjt18hd","content":"<h2 id=\"Data-Object-And-Attribute\"><a href=\"#Data-Object-And-Attribute\" class=\"headerlink\" title=\"Data Object And Attribute\"></a>Data Object And Attribute</h2><p><strong>attribute :</strong> dimension, feature, variable</p>\n<p><strong>nominal attribute :</strong> hair_color 、 marital_status</p>\n<p><strong>binary attribute :</strong> bool</p>\n<p><strong>ordinal attribute :</strong> ranking</p>\n<p><strong>numeric attribute :</strong></p>\n<h2 id=\"Statistical-Description\"><a href=\"#Statistical-Description\" class=\"headerlink\" title=\"Statistical Description\"></a>Statistical Description</h2><p><strong>measure of central tendency :</strong> mean, median, mode, midrange</p>\n<p><strong>measure of Data dissemination :</strong> range, quantile, IQR, boxplot, variance, standard deviation</p>\n<h2 id=\"Data-Matrix-And-Dissimilarity-Matrix\"><a href=\"#Data-Matrix-And-Dissimilarity-Matrix\" class=\"headerlink\" title=\"Data Matrix And Dissimilarity Matrix\"></a>Data Matrix And Dissimilarity Matrix</h2><p><strong>data matrix :</strong><br>$$<br>\\left[<br>\\begin{matrix}<br>x_{11}&amp;\\cdots&amp;x_{1f}&amp;\\cdots&amp;x_{1p}\\\\<br>\\cdots&amp;\\cdots&amp;\\cdots&amp;\\cdots&amp;\\cdots\\\\<br>x_{i1}&amp;\\cdots&amp;x_{if}&amp;\\cdots&amp;x_{ip}\\\\<br>\\cdots&amp;\\cdots&amp;\\cdots&amp;\\cdots&amp;\\cdots\\\\<br>x_{p1}&amp;\\cdots&amp;x_{pf}&amp;\\cdots&amp;x_{pp}\\\\<br>\\end{matrix}<br>\\right]\\\\<br>(n objs \\times p attributes)<br>$$</p>\n<p><strong>Dissimilarity Matrix :</strong><br>$$<br>\\left[<br>\\begin{matrix}<br>0\\\\<br>d(2,1)&amp;0\\\\<br>d(3,1)&amp;d(3,2)&amp;0\\\\<br>\\vdots&amp;\\vdots&amp;\\vdots\\\\<br>d(n,1)&amp;d(n,2)&amp;\\cdots&amp;\\cdots&amp;0\\\\<br>\\end{matrix}<br>\\right]\\\\<br>(n objs \\times n objs)<br>$$</p>\n<ol>\n<li><p><strong>nominal attribute </strong></p>\n<p> <strong>mismatch rate :</strong> $d(i,j) = \\frac{p - m}{p}$</p>\n<p> p:Total attribute</p>\n<p> m:match attribute</p>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p><strong>binary attribute </strong></p>\n<p> <strong>mismatch rate :</strong> $d(i,j) = \\frac{r + s}{q + r + s + t}$</p>\n<p> q:the num of both i’s and j’s attribute whose value equals 1</p>\n<p> t:the num of both i’s and j’s attribute whose value equals 0</p>\n<p> s:the num of attributes whose value equals 0 for i and 1 for j</p>\n<p> r:the num of attributes whose value equals 1 for i and 0 for j</p>\n<p> ignore t: $d(i,j) = \\frac{r + s}{q + r + s}$</p>\n<p> <strong>Jaccard coefficient :</strong> $d(i,j) = \\frac{q}{q + r + s}$</p>\n</li>\n<li><p><strong>numeric attribute </strong></p>\n<p> <strong>Euclid  distance (2-norm):</strong> $d(i,j) = \\sqrt{(x_{i1}-x_{j1})^{2}+(x_{i2}-x_{j2})^{2}+\\cdots+(x_{ip}-x_{jp})^{2}}$</p>\n<p> <strong>Manhattan  distance (1-norm):</strong> $d(i,j) = |x_{i1}-x_{j1}|+|x_{i2}-x_{j2}|+\\cdots+|x_{ip}-x_{jp}|$</p>\n<p> Euclid and Manhattan’s nature:</p>\n<ol>\n<li>Non-negative $d(i,j) \\ge 0$</li>\n<li>$d(i,i) = 0$</li>\n<li>Symmetry $d(i,j) = d(j,i)$</li>\n<li><p>$d(i,j) \\le d(i,k) + d(k,j)$</p>\n<p><strong>Minkowski  distance (p-norm):</strong> $d(i,j) = \\sqrt[h]{|x_{i1}-x_{j1}|^{h}+|x_{i2}-x_{j2}|^{h}+\\cdots+|x_{ip}-x_{jp}|^{h}}$</p>\n<p><strong>Chebyshev  distance ($\\infty$-norm):</strong> the maximum of each attribute’s distance $$d(i,j) = \\lim_{h \\to 0} \\left( \\sum_{f=1}^p |x_{if}-x_{jf}|^{h}\\right)^{\\frac{1}{h}} = \\max_{f}^{p}|x_{if}-x_{jf}|$$</p>\n</li>\n</ol>\n</li>\n<li><p><strong>ordinal attribute </strong></p>\n<p> mapping [0.0, 1.0]</p>\n</li>\n</ol>\n<ol start=\"5\">\n<li><p><strong>mixed type</strong></p>\n<p> weighted mean</p>\n</li>\n<li><p><strong> cosine similarity</strong></p>\n<p> $$<br> sim(x,y) = \\frac{x \\cdot y}{||x|| ||y||}\\\\<br> Tanimoto Distance: sim(x,y) = \\frac{x \\cdot y}{x \\cdot x + y \\cdot y - x \\cdot y}\\\\<br> ||x||:Euclid  distance<br> $$</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Data-Object-And-Attribute\"><a href=\"#Data-Object-And-Attribute\" class=\"headerlink\" title=\"Data Object And Attribute\"></a>Data Object And Attribute</h2><p><strong>attribute :</strong> dimension, feature, variable</p>\n<p><strong>nominal attribute :</strong> hair_color 、 marital_status</p>\n<p><strong>binary attribute :</strong> bool</p>\n<p><strong>ordinal attribute :</strong> ranking</p>\n<p><strong>numeric attribute :</strong></p>\n<h2 id=\"Statistical-Description\"><a href=\"#Statistical-Description\" class=\"headerlink\" title=\"Statistical Description\"></a>Statistical Description</h2><p><strong>measure of central tendency :</strong> mean, median, mode, midrange</p>\n<p><strong>measure of Data dissemination :</strong> range, quantile, IQR, boxplot, variance, standard deviation</p>\n<h2 id=\"Data-Matrix-And-Dissimilarity-Matrix\"><a href=\"#Data-Matrix-And-Dissimilarity-Matrix\" class=\"headerlink\" title=\"Data Matrix And Dissimilarity Matrix\"></a>Data Matrix And Dissimilarity Matrix</h2><p><strong>data matrix :</strong><br>$$<br>\\left[<br>\\begin{matrix}<br>x_{11}&amp;\\cdots&amp;x_{1f}&amp;\\cdots&amp;x_{1p}\\\\<br>\\cdots&amp;\\cdots&amp;\\cdots&amp;\\cdots&amp;\\cdots\\\\<br>x_{i1}&amp;\\cdots&amp;x_{if}&amp;\\cdots&amp;x_{ip}\\\\<br>\\cdots&amp;\\cdots&amp;\\cdots&amp;\\cdots&amp;\\cdots\\\\<br>x_{p1}&amp;\\cdots&amp;x_{pf}&amp;\\cdots&amp;x_{pp}\\\\<br>\\end{matrix}<br>\\right]\\\\<br>(n objs \\times p attributes)<br>$$</p>\n<p><strong>Dissimilarity Matrix :</strong><br>$$<br>\\left[<br>\\begin{matrix}<br>0\\\\<br>d(2,1)&amp;0\\\\<br>d(3,1)&amp;d(3,2)&amp;0\\\\<br>\\vdots&amp;\\vdots&amp;\\vdots\\\\<br>d(n,1)&amp;d(n,2)&amp;\\cdots&amp;\\cdots&amp;0\\\\<br>\\end{matrix}<br>\\right]\\\\<br>(n objs \\times n objs)<br>$$</p>\n<ol>\n<li><p><strong>nominal attribute </strong></p>\n<p> <strong>mismatch rate :</strong> $d(i,j) = \\frac{p - m}{p}$</p>\n<p> p:Total attribute</p>\n<p> m:match attribute</p>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p><strong>binary attribute </strong></p>\n<p> <strong>mismatch rate :</strong> $d(i,j) = \\frac{r + s}{q + r + s + t}$</p>\n<p> q:the num of both i’s and j’s attribute whose value equals 1</p>\n<p> t:the num of both i’s and j’s attribute whose value equals 0</p>\n<p> s:the num of attributes whose value equals 0 for i and 1 for j</p>\n<p> r:the num of attributes whose value equals 1 for i and 0 for j</p>\n<p> ignore t: $d(i,j) = \\frac{r + s}{q + r + s}$</p>\n<p> <strong>Jaccard coefficient :</strong> $d(i,j) = \\frac{q}{q + r + s}$</p>\n</li>\n<li><p><strong>numeric attribute </strong></p>\n<p> <strong>Euclid  distance (2-norm):</strong> $d(i,j) = \\sqrt{(x_{i1}-x_{j1})^{2}+(x_{i2}-x_{j2})^{2}+\\cdots+(x_{ip}-x_{jp})^{2}}$</p>\n<p> <strong>Manhattan  distance (1-norm):</strong> $d(i,j) = |x_{i1}-x_{j1}|+|x_{i2}-x_{j2}|+\\cdots+|x_{ip}-x_{jp}|$</p>\n<p> Euclid and Manhattan’s nature:</p>\n<ol>\n<li>Non-negative $d(i,j) \\ge 0$</li>\n<li>$d(i,i) = 0$</li>\n<li>Symmetry $d(i,j) = d(j,i)$</li>\n<li><p>$d(i,j) \\le d(i,k) + d(k,j)$</p>\n<p><strong>Minkowski  distance (p-norm):</strong> $d(i,j) = \\sqrt[h]{|x_{i1}-x_{j1}|^{h}+|x_{i2}-x_{j2}|^{h}+\\cdots+|x_{ip}-x_{jp}|^{h}}$</p>\n<p><strong>Chebyshev  distance ($\\infty$-norm):</strong> the maximum of each attribute’s distance $$d(i,j) = \\lim_{h \\to 0} \\left( \\sum_{f=1}^p |x_{if}-x_{jf}|^{h}\\right)^{\\frac{1}{h}} = \\max_{f}^{p}|x_{if}-x_{jf}|$$</p>\n</li>\n</ol>\n</li>\n<li><p><strong>ordinal attribute </strong></p>\n<p> mapping [0.0, 1.0]</p>\n</li>\n</ol>\n<ol start=\"5\">\n<li><p><strong>mixed type</strong></p>\n<p> weighted mean</p>\n</li>\n<li><p><strong> cosine similarity</strong></p>\n<p> $$<br> sim(x,y) = \\frac{x \\cdot y}{||x|| ||y||}\\\\<br> Tanimoto Distance: sim(x,y) = \\frac{x \\cdot y}{x \\cdot x + y \\cdot y - x \\cdot y}\\\\<br> ||x||:Euclid  distance<br> $$</p>\n</li>\n</ol>\n"},{"title":"ES6","date":"2018-11-25T19:20:34.000Z","_content":"\n### 1. 箭头函数\n\n## `this` 的工作原理\n\nJavaScript 有一套完全不同于其它语言的对 `this` 的处理机制。 在**五**种不同的情况下 ，`this` 指向的各不相同。\n\n### 全局范围内\n\n```\nthis;\n```\n\n当在全部范围内使用 `this`，它将会指向*全局*对象。\n\n**译者注：**浏览器中运行的 JavaScript 脚本，这个全局对象是 `window`。\n\n### 函数调用\n\n```\nfoo();\n```\n\n这里 `this` 也会指向*全局*对象。\n\n**ES5 注意:** 在严格模式下（strict mode），不存在全局变量。 这种情况下 `this` 将会是 `undefined`。\n\n### 方法调用\n\n```\ntest.foo(); \n```\n\n这个例子中，`this` 指向 `test` 对象。\n\n### 调用构造函数\n\n```\nnew foo(); \n```\n\n如果函数倾向于和 `new` 关键词一块使用，则我们称这个函数是 [构造函数](https://bonsaiden.github.io/JavaScript-Garden/zh/#function.constructors)。 在函数内部，`this` 指向*新创建*的对象。\n\n### 显式的设置 `this`\n\n```js\nfunction foo(a, b, c) {}\n\nvar bar = {};\nfoo.apply(bar, [1, 2, 3]); // 数组将会被扩展，如下所示\nfoo.call(bar, 1, 2, 3); // 传递到foo的参数是：a = 1, b = 2, c = 3\n```\n\n当使用 `Function.prototype` 上的 `call` 或者 `apply` 方法时，函数内的 `this` 将会被 **显式设置**为函数调用的第一个参数。\n\n因此*函数调用*的规则在上例中已经不适用了，在`foo` 函数内 `this` 被设置成了 `bar`。\n\n### 箭头函数\n\n```js\n() => console.log('Hello')\n```\n\n和普通函数相比，箭头函数主要就是以下两个方面的特点\n\n1. 不绑定this，arguments\n2. 更简化的代码语法\n\n\n\n","source":"_posts/ES6.md","raw":"---\ntitle: ES6\ndate: 2018-11-26 03:20:34\ntags: js\n---\n\n### 1. 箭头函数\n\n## `this` 的工作原理\n\nJavaScript 有一套完全不同于其它语言的对 `this` 的处理机制。 在**五**种不同的情况下 ，`this` 指向的各不相同。\n\n### 全局范围内\n\n```\nthis;\n```\n\n当在全部范围内使用 `this`，它将会指向*全局*对象。\n\n**译者注：**浏览器中运行的 JavaScript 脚本，这个全局对象是 `window`。\n\n### 函数调用\n\n```\nfoo();\n```\n\n这里 `this` 也会指向*全局*对象。\n\n**ES5 注意:** 在严格模式下（strict mode），不存在全局变量。 这种情况下 `this` 将会是 `undefined`。\n\n### 方法调用\n\n```\ntest.foo(); \n```\n\n这个例子中，`this` 指向 `test` 对象。\n\n### 调用构造函数\n\n```\nnew foo(); \n```\n\n如果函数倾向于和 `new` 关键词一块使用，则我们称这个函数是 [构造函数](https://bonsaiden.github.io/JavaScript-Garden/zh/#function.constructors)。 在函数内部，`this` 指向*新创建*的对象。\n\n### 显式的设置 `this`\n\n```js\nfunction foo(a, b, c) {}\n\nvar bar = {};\nfoo.apply(bar, [1, 2, 3]); // 数组将会被扩展，如下所示\nfoo.call(bar, 1, 2, 3); // 传递到foo的参数是：a = 1, b = 2, c = 3\n```\n\n当使用 `Function.prototype` 上的 `call` 或者 `apply` 方法时，函数内的 `this` 将会被 **显式设置**为函数调用的第一个参数。\n\n因此*函数调用*的规则在上例中已经不适用了，在`foo` 函数内 `this` 被设置成了 `bar`。\n\n### 箭头函数\n\n```js\n() => console.log('Hello')\n```\n\n和普通函数相比，箭头函数主要就是以下两个方面的特点\n\n1. 不绑定this，arguments\n2. 更简化的代码语法\n\n\n\n","slug":"ES6","published":1,"updated":"2018-11-25T21:31:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14jy0008o49uyaeo67oa","content":"<h3 id=\"1-箭头函数\"><a href=\"#1-箭头函数\" class=\"headerlink\" title=\"1. 箭头函数\"></a>1. 箭头函数</h3><h2 id=\"this-的工作原理\"><a href=\"#this-的工作原理\" class=\"headerlink\" title=\"this 的工作原理\"></a><code>this</code> 的工作原理</h2><p>JavaScript 有一套完全不同于其它语言的对 <code>this</code> 的处理机制。 在<strong>五</strong>种不同的情况下 ，<code>this</code> 指向的各不相同。</p>\n<h3 id=\"全局范围内\"><a href=\"#全局范围内\" class=\"headerlink\" title=\"全局范围内\"></a>全局范围内</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this;</span><br></pre></td></tr></table></figure>\n<p>当在全部范围内使用 <code>this</code>，它将会指向<em>全局</em>对象。</p>\n<p><strong>译者注：</strong>浏览器中运行的 JavaScript 脚本，这个全局对象是 <code>window</code>。</p>\n<h3 id=\"函数调用\"><a href=\"#函数调用\" class=\"headerlink\" title=\"函数调用\"></a>函数调用</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foo();</span><br></pre></td></tr></table></figure>\n<p>这里 <code>this</code> 也会指向<em>全局</em>对象。</p>\n<p><strong>ES5 注意:</strong> 在严格模式下（strict mode），不存在全局变量。 这种情况下 <code>this</code> 将会是 <code>undefined</code>。</p>\n<h3 id=\"方法调用\"><a href=\"#方法调用\" class=\"headerlink\" title=\"方法调用\"></a>方法调用</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test.foo();</span><br></pre></td></tr></table></figure>\n<p>这个例子中，<code>this</code> 指向 <code>test</code> 对象。</p>\n<h3 id=\"调用构造函数\"><a href=\"#调用构造函数\" class=\"headerlink\" title=\"调用构造函数\"></a>调用构造函数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new foo();</span><br></pre></td></tr></table></figure>\n<p>如果函数倾向于和 <code>new</code> 关键词一块使用，则我们称这个函数是 <a href=\"https://bonsaiden.github.io/JavaScript-Garden/zh/#function.constructors\" target=\"_blank\" rel=\"noopener\">构造函数</a>。 在函数内部，<code>this</code> 指向<em>新创建</em>的对象。</p>\n<h3 id=\"显式的设置-this\"><a href=\"#显式的设置-this\" class=\"headerlink\" title=\"显式的设置 this\"></a>显式的设置 <code>this</code></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a, b, c</span>) </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = &#123;&#125;;</span><br><span class=\"line\">foo.apply(bar, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]); <span class=\"comment\">// 数组将会被扩展，如下所示</span></span><br><span class=\"line\">foo.call(bar, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 传递到foo的参数是：a = 1, b = 2, c = 3</span></span><br></pre></td></tr></table></figure>\n<p>当使用 <code>Function.prototype</code> 上的 <code>call</code> 或者 <code>apply</code> 方法时，函数内的 <code>this</code> 将会被 <strong>显式设置</strong>为函数调用的第一个参数。</p>\n<p>因此<em>函数调用</em>的规则在上例中已经不适用了，在<code>foo</code> 函数内 <code>this</code> 被设置成了 <code>bar</code>。</p>\n<h3 id=\"箭头函数\"><a href=\"#箭头函数\" class=\"headerlink\" title=\"箭头函数\"></a>箭头函数</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">() =&gt; <span class=\"built_in\">console</span>.log(<span class=\"string\">'Hello'</span>)</span><br></pre></td></tr></table></figure>\n<p>和普通函数相比，箭头函数主要就是以下两个方面的特点</p>\n<ol>\n<li>不绑定this，arguments</li>\n<li>更简化的代码语法</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-箭头函数\"><a href=\"#1-箭头函数\" class=\"headerlink\" title=\"1. 箭头函数\"></a>1. 箭头函数</h3><h2 id=\"this-的工作原理\"><a href=\"#this-的工作原理\" class=\"headerlink\" title=\"this 的工作原理\"></a><code>this</code> 的工作原理</h2><p>JavaScript 有一套完全不同于其它语言的对 <code>this</code> 的处理机制。 在<strong>五</strong>种不同的情况下 ，<code>this</code> 指向的各不相同。</p>\n<h3 id=\"全局范围内\"><a href=\"#全局范围内\" class=\"headerlink\" title=\"全局范围内\"></a>全局范围内</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this;</span><br></pre></td></tr></table></figure>\n<p>当在全部范围内使用 <code>this</code>，它将会指向<em>全局</em>对象。</p>\n<p><strong>译者注：</strong>浏览器中运行的 JavaScript 脚本，这个全局对象是 <code>window</code>。</p>\n<h3 id=\"函数调用\"><a href=\"#函数调用\" class=\"headerlink\" title=\"函数调用\"></a>函数调用</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foo();</span><br></pre></td></tr></table></figure>\n<p>这里 <code>this</code> 也会指向<em>全局</em>对象。</p>\n<p><strong>ES5 注意:</strong> 在严格模式下（strict mode），不存在全局变量。 这种情况下 <code>this</code> 将会是 <code>undefined</code>。</p>\n<h3 id=\"方法调用\"><a href=\"#方法调用\" class=\"headerlink\" title=\"方法调用\"></a>方法调用</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test.foo();</span><br></pre></td></tr></table></figure>\n<p>这个例子中，<code>this</code> 指向 <code>test</code> 对象。</p>\n<h3 id=\"调用构造函数\"><a href=\"#调用构造函数\" class=\"headerlink\" title=\"调用构造函数\"></a>调用构造函数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new foo();</span><br></pre></td></tr></table></figure>\n<p>如果函数倾向于和 <code>new</code> 关键词一块使用，则我们称这个函数是 <a href=\"https://bonsaiden.github.io/JavaScript-Garden/zh/#function.constructors\" target=\"_blank\" rel=\"noopener\">构造函数</a>。 在函数内部，<code>this</code> 指向<em>新创建</em>的对象。</p>\n<h3 id=\"显式的设置-this\"><a href=\"#显式的设置-this\" class=\"headerlink\" title=\"显式的设置 this\"></a>显式的设置 <code>this</code></h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">a, b, c</span>) </span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = &#123;&#125;;</span><br><span class=\"line\">foo.apply(bar, [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]); <span class=\"comment\">// 数组将会被扩展，如下所示</span></span><br><span class=\"line\">foo.call(bar, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 传递到foo的参数是：a = 1, b = 2, c = 3</span></span><br></pre></td></tr></table></figure>\n<p>当使用 <code>Function.prototype</code> 上的 <code>call</code> 或者 <code>apply</code> 方法时，函数内的 <code>this</code> 将会被 <strong>显式设置</strong>为函数调用的第一个参数。</p>\n<p>因此<em>函数调用</em>的规则在上例中已经不适用了，在<code>foo</code> 函数内 <code>this</code> 被设置成了 <code>bar</code>。</p>\n<h3 id=\"箭头函数\"><a href=\"#箭头函数\" class=\"headerlink\" title=\"箭头函数\"></a>箭头函数</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">() =&gt; <span class=\"built_in\">console</span>.log(<span class=\"string\">'Hello'</span>)</span><br></pre></td></tr></table></figure>\n<p>和普通函数相比，箭头函数主要就是以下两个方面的特点</p>\n<ol>\n<li>不绑定this，arguments</li>\n<li>更简化的代码语法</li>\n</ol>\n"},{"title":"express框架-1","date":"2018-11-21T12:31:18.000Z","_content":"\n### 1. 入口文件app.js\n\njs 语法小知识：\n\n```js\nvar  a =  obj || \" \"  ;   //如果 obj 为空，a就赋值为 \" \" ；\nvar  a = check() &&  do(); //如果check()返回为真，就执行do()并将结果赋值给 a;\n```\n\n\n\n### 2. db.js\n\nrequire('mongoose')\n\n连接mongoDB\n\n\n\n","source":"_posts/express1-app-js.md","raw":"---\ntitle: express框架-1\ndate: 2018-11-21 20:31:18\ntags: js express nodejs\n---\n\n### 1. 入口文件app.js\n\njs 语法小知识：\n\n```js\nvar  a =  obj || \" \"  ;   //如果 obj 为空，a就赋值为 \" \" ；\nvar  a = check() &&  do(); //如果check()返回为真，就执行do()并将结果赋值给 a;\n```\n\n\n\n### 2. db.js\n\nrequire('mongoose')\n\n连接mongoDB\n\n\n\n","slug":"express1-app-js","published":1,"updated":"2018-11-21T18:37:07.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14k0000ao49un9z48wxw","content":"<h3 id=\"1-入口文件app-js\"><a href=\"#1-入口文件app-js\" class=\"headerlink\" title=\"1. 入口文件app.js\"></a>1. 入口文件app.js</h3><p>js 语法小知识：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span>  a =  obj || <span class=\"string\">\" \"</span>  ;   <span class=\"comment\">//如果 obj 为空，a就赋值为 \" \" ；</span></span><br><span class=\"line\"><span class=\"keyword\">var</span>  a = check() &amp;&amp;  <span class=\"keyword\">do</span>(); <span class=\"comment\">//如果check()返回为真，就执行do()并将结果赋值给 a;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-db-js\"><a href=\"#2-db-js\" class=\"headerlink\" title=\"2. db.js\"></a>2. db.js</h3><p>require(‘mongoose’)</p>\n<p>连接mongoDB</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-入口文件app-js\"><a href=\"#1-入口文件app-js\" class=\"headerlink\" title=\"1. 入口文件app.js\"></a>1. 入口文件app.js</h3><p>js 语法小知识：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span>  a =  obj || <span class=\"string\">\" \"</span>  ;   <span class=\"comment\">//如果 obj 为空，a就赋值为 \" \" ；</span></span><br><span class=\"line\"><span class=\"keyword\">var</span>  a = check() &amp;&amp;  <span class=\"keyword\">do</span>(); <span class=\"comment\">//如果check()返回为真，就执行do()并将结果赋值给 a;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-db-js\"><a href=\"#2-db-js\" class=\"headerlink\" title=\"2. db.js\"></a>2. db.js</h3><p>require(‘mongoose’)</p>\n<p>连接mongoDB</p>\n"},{"title":"gulp笔记-基础配置","date":"2018-11-20T23:09:17.000Z","_content":"\n### 1. JavaScript 严格模式\n\n```javascript\n'use strict';\n// .js文件 首句加入 进入严格模式\n//  用严格模式编写的javascript代码是可以在所有javascript的解释器中正常运行的\n//  所以为了达到更好的兼容不同的环境，一定要在严格模式下编写代码并测试\n```\n\n\n\n\n\n### 2. require gulp文件夹\n\n```javascript\n// 遍历获取文件名字和路径, 都require\nfs.readdirSync('./gulp').forEach(function (file) {\n    if((/\\.(js|coffee)$/i).test(file)){\n        require('./gulp/' + file);\n    }\n});\n//  使用立即执行代码（function(){}()),除了可以执行并获得相应的对象以外，还能保证其他使用者使用   gulp脚本链接多个库文件的时候，不同文件之间不会相互污染严格模式，造成失效\n```\n\n\n\n### 3. 配置mocha测试和istanbul覆盖率\n\n```javascript\nexports.paths = {\n    mocha: 'test',\n    istanbul: 'test_coverage',\n    server:'server'\n};\n```\n\n\n\n### 4.错误处理\n\n```js\nexports.errorHandler = function() {\n    return function (err) {\n        gutil.beep();\n        gutil.log(err.toString());\n    }\n};\n```\n\n### 5. 自动刷新\n\n使用**gulp-nodemon**在修改代码后刷新浏览器页面\n\n并分别设置develop模式、test模式、production模式\n\n```\ngulp.task('serve',['nodemon']);\ngulp.task('serve:test',['nodemon:test']);\ngulp.task('serve:production',['nodemon:production']);\n```\n\n","source":"_posts/gulp.md","raw":"---\ntitle: gulp笔记-基础配置\ndate: 2018-11-21 07:09:17\ntags: gulp vue \n---\n\n### 1. JavaScript 严格模式\n\n```javascript\n'use strict';\n// .js文件 首句加入 进入严格模式\n//  用严格模式编写的javascript代码是可以在所有javascript的解释器中正常运行的\n//  所以为了达到更好的兼容不同的环境，一定要在严格模式下编写代码并测试\n```\n\n\n\n\n\n### 2. require gulp文件夹\n\n```javascript\n// 遍历获取文件名字和路径, 都require\nfs.readdirSync('./gulp').forEach(function (file) {\n    if((/\\.(js|coffee)$/i).test(file)){\n        require('./gulp/' + file);\n    }\n});\n//  使用立即执行代码（function(){}()),除了可以执行并获得相应的对象以外，还能保证其他使用者使用   gulp脚本链接多个库文件的时候，不同文件之间不会相互污染严格模式，造成失效\n```\n\n\n\n### 3. 配置mocha测试和istanbul覆盖率\n\n```javascript\nexports.paths = {\n    mocha: 'test',\n    istanbul: 'test_coverage',\n    server:'server'\n};\n```\n\n\n\n### 4.错误处理\n\n```js\nexports.errorHandler = function() {\n    return function (err) {\n        gutil.beep();\n        gutil.log(err.toString());\n    }\n};\n```\n\n### 5. 自动刷新\n\n使用**gulp-nodemon**在修改代码后刷新浏览器页面\n\n并分别设置develop模式、test模式、production模式\n\n```\ngulp.task('serve',['nodemon']);\ngulp.task('serve:test',['nodemon:test']);\ngulp.task('serve:production',['nodemon:production']);\n```\n\n","slug":"gulp","published":1,"updated":"2018-11-21T00:09:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14k4000eo49uxd824gpl","content":"<h3 id=\"1-JavaScript-严格模式\"><a href=\"#1-JavaScript-严格模式\" class=\"headerlink\" title=\"1. JavaScript 严格模式\"></a>1. JavaScript 严格模式</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"><span class=\"comment\">// .js文件 首句加入 进入严格模式</span></span><br><span class=\"line\"><span class=\"comment\">//  用严格模式编写的javascript代码是可以在所有javascript的解释器中正常运行的</span></span><br><span class=\"line\"><span class=\"comment\">//  所以为了达到更好的兼容不同的环境，一定要在严格模式下编写代码并测试</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-require-gulp文件夹\"><a href=\"#2-require-gulp文件夹\" class=\"headerlink\" title=\"2. require gulp文件夹\"></a>2. require gulp文件夹</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 遍历获取文件名字和路径, 都require</span></span><br><span class=\"line\">fs.readdirSync(<span class=\"string\">'./gulp'</span>).forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">file</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((<span class=\"regexp\">/\\.(js|coffee)$/i</span>).test(file))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">require</span>(<span class=\"string\">'./gulp/'</span> + file);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//  使用立即执行代码（function()&#123;&#125;()),除了可以执行并获得相应的对象以外，还能保证其他使用者使用   gulp脚本链接多个库文件的时候，不同文件之间不会相互污染严格模式，造成失效</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-配置mocha测试和istanbul覆盖率\"><a href=\"#3-配置mocha测试和istanbul覆盖率\" class=\"headerlink\" title=\"3. 配置mocha测试和istanbul覆盖率\"></a>3. 配置mocha测试和istanbul覆盖率</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exports.paths = &#123;</span><br><span class=\"line\">    mocha: <span class=\"string\">'test'</span>,</span><br><span class=\"line\">    istanbul: <span class=\"string\">'test_coverage'</span>,</span><br><span class=\"line\">    server:<span class=\"string\">'server'</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-错误处理\"><a href=\"#4-错误处理\" class=\"headerlink\" title=\"4.错误处理\"></a>4.错误处理</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exports.errorHandler = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">        gutil.beep();</span><br><span class=\"line\">        gutil.log(err.toString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-自动刷新\"><a href=\"#5-自动刷新\" class=\"headerlink\" title=\"5. 自动刷新\"></a>5. 自动刷新</h3><p>使用<strong>gulp-nodemon</strong>在修改代码后刷新浏览器页面</p>\n<p>并分别设置develop模式、test模式、production模式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(&apos;serve&apos;,[&apos;nodemon&apos;]);</span><br><span class=\"line\">gulp.task(&apos;serve:test&apos;,[&apos;nodemon:test&apos;]);</span><br><span class=\"line\">gulp.task(&apos;serve:production&apos;,[&apos;nodemon:production&apos;]);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-JavaScript-严格模式\"><a href=\"#1-JavaScript-严格模式\" class=\"headerlink\" title=\"1. JavaScript 严格模式\"></a>1. JavaScript 严格模式</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"><span class=\"comment\">// .js文件 首句加入 进入严格模式</span></span><br><span class=\"line\"><span class=\"comment\">//  用严格模式编写的javascript代码是可以在所有javascript的解释器中正常运行的</span></span><br><span class=\"line\"><span class=\"comment\">//  所以为了达到更好的兼容不同的环境，一定要在严格模式下编写代码并测试</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-require-gulp文件夹\"><a href=\"#2-require-gulp文件夹\" class=\"headerlink\" title=\"2. require gulp文件夹\"></a>2. require gulp文件夹</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 遍历获取文件名字和路径, 都require</span></span><br><span class=\"line\">fs.readdirSync(<span class=\"string\">'./gulp'</span>).forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">file</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((<span class=\"regexp\">/\\.(js|coffee)$/i</span>).test(file))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">require</span>(<span class=\"string\">'./gulp/'</span> + file);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//  使用立即执行代码（function()&#123;&#125;()),除了可以执行并获得相应的对象以外，还能保证其他使用者使用   gulp脚本链接多个库文件的时候，不同文件之间不会相互污染严格模式，造成失效</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-配置mocha测试和istanbul覆盖率\"><a href=\"#3-配置mocha测试和istanbul覆盖率\" class=\"headerlink\" title=\"3. 配置mocha测试和istanbul覆盖率\"></a>3. 配置mocha测试和istanbul覆盖率</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exports.paths = &#123;</span><br><span class=\"line\">    mocha: <span class=\"string\">'test'</span>,</span><br><span class=\"line\">    istanbul: <span class=\"string\">'test_coverage'</span>,</span><br><span class=\"line\">    server:<span class=\"string\">'server'</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-错误处理\"><a href=\"#4-错误处理\" class=\"headerlink\" title=\"4.错误处理\"></a>4.错误处理</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exports.errorHandler = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">        gutil.beep();</span><br><span class=\"line\">        gutil.log(err.toString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-自动刷新\"><a href=\"#5-自动刷新\" class=\"headerlink\" title=\"5. 自动刷新\"></a>5. 自动刷新</h3><p>使用<strong>gulp-nodemon</strong>在修改代码后刷新浏览器页面</p>\n<p>并分别设置develop模式、test模式、production模式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.task(&apos;serve&apos;,[&apos;nodemon&apos;]);</span><br><span class=\"line\">gulp.task(&apos;serve:test&apos;,[&apos;nodemon:test&apos;]);</span><br><span class=\"line\">gulp.task(&apos;serve:production&apos;,[&apos;nodemon:production&apos;]);</span><br></pre></td></tr></table></figure>\n"},{"title":"gulp2-构建后端开发体系","date":"2018-11-24T03:45:41.000Z","_content":"\n### 前言\n\ngulp这个工具非常轻便，用做开发中控制项目流程非常实用。gulp可以过简单的逻辑和语法就实现按事件顺序控制开发的流程。\n\n\n\n### 一、项目环境说明\n\n按功能主要可以分为开发环境development，测试环境test和生产环境production。\n\n1. 开发环境：开发环境是程序猿们专门用于开发的服务器，配置可以比较随意， 为了开发调试方便，一般打开全部错误报告。\n\n2. 测试环境：一般是克隆一份生产环境的配置，一个程序在测试环境工作不正常，那么肯定不能把它发布到生产机上。\n\n3. 生产环境：是指正式提供对外服务的，一般会关掉错误报告，打开错误日志。\n\n在**package.json**里面可以设定不同的启动选项来配合不同的项目环境。\n\n一般来说将三个环境配置成如下：\n\n```js\n \"scripts\": {\n    \"dev\": \"gulp dev\",\n    \"test\": \"gulp test\",\n    \"deploy\": \"pm2 start --no-daemon process.json\" //Docker部署 不支持deamon后台运行\n},\n```\n\n其中pm2是一款非常好用的监控软件，常用于部署。\n\n\n\n### 二、定义gulp任务\n\n在package.json同级项目根目录下建立gulpfile.js，该文件为gulp的入口文件。\n\n引入gulp文件夹下所有gulp定义文件，并设置`’dev‘`任务为默认执行。\n\n```js\n'use strict';\n\nvar gulp = require('gulp');\nvar fs = require('fs');\n\nfs.readdirSync('./gulp').forEach(function (file) {\n  if((/\\.(js|coffee)$/i).test(file)){\n    require('./gulp/' + file);\n  }\n});\n\ngulp.task('default', ['dev']);\n```\n\n\n\n在gulp文件夹下分别建立dev.js, test.js, config.js, 其中config文件是用来方便的定义一些环境变量。\n\n接下来就需要分别定义dev，test 环境的任务，视项目不同定义内容有所区别。但基本遵照如下：\n\n```js\n//默认development模式\ngulp.task('nodemon',function () {\n  nodemon({\n    script: path.join(config.paths.server,'/app.js'), \n    ext: 'js',\n    watch: [\n      path.join(config.paths.server,'/')\n    ]\n  })\n});\n//前后端合并测试模式\ngulp.task('nodemon:test',function () {\n  nodemon({\n    script: path.join(config.paths.server,'/app.js'), \n    ext: 'js json',\n    watch: [\n      path.join(config.paths.server,'/')\n    ],\n    env: { 'NODE_ENV': 'test' }\n  })\n});\n\ngulp.task('dev',['nodemon']);\ngulp.task('dev:test',['nodemon:test']);\n```\n\n使用不同环境只需要分别输入\n\n```bash\ngulp dev\ngulp dev:test\n```\n\n","source":"_posts/gulp2.md","raw":"---\ntitle: gulp2-构建后端开发体系\ndate: 2018-11-24 11:45:41\ntags: gulp\n---\n\n### 前言\n\ngulp这个工具非常轻便，用做开发中控制项目流程非常实用。gulp可以过简单的逻辑和语法就实现按事件顺序控制开发的流程。\n\n\n\n### 一、项目环境说明\n\n按功能主要可以分为开发环境development，测试环境test和生产环境production。\n\n1. 开发环境：开发环境是程序猿们专门用于开发的服务器，配置可以比较随意， 为了开发调试方便，一般打开全部错误报告。\n\n2. 测试环境：一般是克隆一份生产环境的配置，一个程序在测试环境工作不正常，那么肯定不能把它发布到生产机上。\n\n3. 生产环境：是指正式提供对外服务的，一般会关掉错误报告，打开错误日志。\n\n在**package.json**里面可以设定不同的启动选项来配合不同的项目环境。\n\n一般来说将三个环境配置成如下：\n\n```js\n \"scripts\": {\n    \"dev\": \"gulp dev\",\n    \"test\": \"gulp test\",\n    \"deploy\": \"pm2 start --no-daemon process.json\" //Docker部署 不支持deamon后台运行\n},\n```\n\n其中pm2是一款非常好用的监控软件，常用于部署。\n\n\n\n### 二、定义gulp任务\n\n在package.json同级项目根目录下建立gulpfile.js，该文件为gulp的入口文件。\n\n引入gulp文件夹下所有gulp定义文件，并设置`’dev‘`任务为默认执行。\n\n```js\n'use strict';\n\nvar gulp = require('gulp');\nvar fs = require('fs');\n\nfs.readdirSync('./gulp').forEach(function (file) {\n  if((/\\.(js|coffee)$/i).test(file)){\n    require('./gulp/' + file);\n  }\n});\n\ngulp.task('default', ['dev']);\n```\n\n\n\n在gulp文件夹下分别建立dev.js, test.js, config.js, 其中config文件是用来方便的定义一些环境变量。\n\n接下来就需要分别定义dev，test 环境的任务，视项目不同定义内容有所区别。但基本遵照如下：\n\n```js\n//默认development模式\ngulp.task('nodemon',function () {\n  nodemon({\n    script: path.join(config.paths.server,'/app.js'), \n    ext: 'js',\n    watch: [\n      path.join(config.paths.server,'/')\n    ]\n  })\n});\n//前后端合并测试模式\ngulp.task('nodemon:test',function () {\n  nodemon({\n    script: path.join(config.paths.server,'/app.js'), \n    ext: 'js json',\n    watch: [\n      path.join(config.paths.server,'/')\n    ],\n    env: { 'NODE_ENV': 'test' }\n  })\n});\n\ngulp.task('dev',['nodemon']);\ngulp.task('dev:test',['nodemon:test']);\n```\n\n使用不同环境只需要分别输入\n\n```bash\ngulp dev\ngulp dev:test\n```\n\n","slug":"gulp2","published":1,"updated":"2018-11-24T15:43:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14k5000fo49un6vymgcd","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>gulp这个工具非常轻便，用做开发中控制项目流程非常实用。gulp可以过简单的逻辑和语法就实现按事件顺序控制开发的流程。</p>\n<h3 id=\"一、项目环境说明\"><a href=\"#一、项目环境说明\" class=\"headerlink\" title=\"一、项目环境说明\"></a>一、项目环境说明</h3><p>按功能主要可以分为开发环境development，测试环境test和生产环境production。</p>\n<ol>\n<li><p>开发环境：开发环境是程序猿们专门用于开发的服务器，配置可以比较随意， 为了开发调试方便，一般打开全部错误报告。</p>\n</li>\n<li><p>测试环境：一般是克隆一份生产环境的配置，一个程序在测试环境工作不正常，那么肯定不能把它发布到生产机上。</p>\n</li>\n<li><p>生产环境：是指正式提供对外服务的，一般会关掉错误报告，打开错误日志。</p>\n</li>\n</ol>\n<p>在<strong>package.json</strong>里面可以设定不同的启动选项来配合不同的项目环境。</p>\n<p>一般来说将三个环境配置成如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"gulp dev\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>: <span class=\"string\">\"gulp test\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"deploy\"</span>: <span class=\"string\">\"pm2 start --no-daemon process.json\"</span> <span class=\"comment\">//Docker部署 不支持deamon后台运行</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>其中pm2是一款非常好用的监控软件，常用于部署。</p>\n<h3 id=\"二、定义gulp任务\"><a href=\"#二、定义gulp任务\" class=\"headerlink\" title=\"二、定义gulp任务\"></a>二、定义gulp任务</h3><p>在package.json同级项目根目录下建立gulpfile.js，该文件为gulp的入口文件。</p>\n<p>引入gulp文件夹下所有gulp定义文件，并设置<code>’dev‘</code>任务为默认执行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">fs.readdirSync(<span class=\"string\">'./gulp'</span>).forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">file</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>((<span class=\"regexp\">/\\.(js|coffee)$/i</span>).test(file))&#123;</span><br><span class=\"line\">    <span class=\"built_in\">require</span>(<span class=\"string\">'./gulp/'</span> + file);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [<span class=\"string\">'dev'</span>]);</span><br></pre></td></tr></table></figure>\n<p>在gulp文件夹下分别建立dev.js, test.js, config.js, 其中config文件是用来方便的定义一些环境变量。</p>\n<p>接下来就需要分别定义dev，test 环境的任务，视项目不同定义内容有所区别。但基本遵照如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//默认development模式</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'nodemon'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  nodemon(&#123;</span><br><span class=\"line\">    script: path.join(config.paths.server,<span class=\"string\">'/app.js'</span>), </span><br><span class=\"line\">    ext: <span class=\"string\">'js'</span>,</span><br><span class=\"line\">    watch: [</span><br><span class=\"line\">      path.join(config.paths.server,<span class=\"string\">'/'</span>)</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//前后端合并测试模式</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'nodemon:test'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  nodemon(&#123;</span><br><span class=\"line\">    script: path.join(config.paths.server,<span class=\"string\">'/app.js'</span>), </span><br><span class=\"line\">    ext: <span class=\"string\">'js json'</span>,</span><br><span class=\"line\">    watch: [</span><br><span class=\"line\">      path.join(config.paths.server,<span class=\"string\">'/'</span>)</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    env: &#123; <span class=\"string\">'NODE_ENV'</span>: <span class=\"string\">'test'</span> &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">'dev'</span>,[<span class=\"string\">'nodemon'</span>]);</span><br><span class=\"line\">gulp.task(<span class=\"string\">'dev:test'</span>,[<span class=\"string\">'nodemon:test'</span>]);</span><br></pre></td></tr></table></figure>\n<p>使用不同环境只需要分别输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp dev</span><br><span class=\"line\">gulp dev:<span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>gulp这个工具非常轻便，用做开发中控制项目流程非常实用。gulp可以过简单的逻辑和语法就实现按事件顺序控制开发的流程。</p>\n<h3 id=\"一、项目环境说明\"><a href=\"#一、项目环境说明\" class=\"headerlink\" title=\"一、项目环境说明\"></a>一、项目环境说明</h3><p>按功能主要可以分为开发环境development，测试环境test和生产环境production。</p>\n<ol>\n<li><p>开发环境：开发环境是程序猿们专门用于开发的服务器，配置可以比较随意， 为了开发调试方便，一般打开全部错误报告。</p>\n</li>\n<li><p>测试环境：一般是克隆一份生产环境的配置，一个程序在测试环境工作不正常，那么肯定不能把它发布到生产机上。</p>\n</li>\n<li><p>生产环境：是指正式提供对外服务的，一般会关掉错误报告，打开错误日志。</p>\n</li>\n</ol>\n<p>在<strong>package.json</strong>里面可以设定不同的启动选项来配合不同的项目环境。</p>\n<p>一般来说将三个环境配置成如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"gulp dev\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>: <span class=\"string\">\"gulp test\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"deploy\"</span>: <span class=\"string\">\"pm2 start --no-daemon process.json\"</span> <span class=\"comment\">//Docker部署 不支持deamon后台运行</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>其中pm2是一款非常好用的监控软件，常用于部署。</p>\n<h3 id=\"二、定义gulp任务\"><a href=\"#二、定义gulp任务\" class=\"headerlink\" title=\"二、定义gulp任务\"></a>二、定义gulp任务</h3><p>在package.json同级项目根目录下建立gulpfile.js，该文件为gulp的入口文件。</p>\n<p>引入gulp文件夹下所有gulp定义文件，并设置<code>’dev‘</code>任务为默认执行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">fs.readdirSync(<span class=\"string\">'./gulp'</span>).forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">file</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>((<span class=\"regexp\">/\\.(js|coffee)$/i</span>).test(file))&#123;</span><br><span class=\"line\">    <span class=\"built_in\">require</span>(<span class=\"string\">'./gulp/'</span> + file);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [<span class=\"string\">'dev'</span>]);</span><br></pre></td></tr></table></figure>\n<p>在gulp文件夹下分别建立dev.js, test.js, config.js, 其中config文件是用来方便的定义一些环境变量。</p>\n<p>接下来就需要分别定义dev，test 环境的任务，视项目不同定义内容有所区别。但基本遵照如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//默认development模式</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'nodemon'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  nodemon(&#123;</span><br><span class=\"line\">    script: path.join(config.paths.server,<span class=\"string\">'/app.js'</span>), </span><br><span class=\"line\">    ext: <span class=\"string\">'js'</span>,</span><br><span class=\"line\">    watch: [</span><br><span class=\"line\">      path.join(config.paths.server,<span class=\"string\">'/'</span>)</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//前后端合并测试模式</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'nodemon:test'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  nodemon(&#123;</span><br><span class=\"line\">    script: path.join(config.paths.server,<span class=\"string\">'/app.js'</span>), </span><br><span class=\"line\">    ext: <span class=\"string\">'js json'</span>,</span><br><span class=\"line\">    watch: [</span><br><span class=\"line\">      path.join(config.paths.server,<span class=\"string\">'/'</span>)</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    env: &#123; <span class=\"string\">'NODE_ENV'</span>: <span class=\"string\">'test'</span> &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">'dev'</span>,[<span class=\"string\">'nodemon'</span>]);</span><br><span class=\"line\">gulp.task(<span class=\"string\">'dev:test'</span>,[<span class=\"string\">'nodemon:test'</span>]);</span><br></pre></td></tr></table></figure>\n<p>使用不同环境只需要分别输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp dev</span><br><span class=\"line\">gulp dev:<span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-11-26T21:04:10.250Z","updated":"2018-11-20T15:04:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14k7000ko49uonb0osat","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"jquery风格替换插件","date":"2018-11-25T22:45:56.000Z","_content":"\n### 前言\n\nhttps://blog.fundebug.com/2018/11/23/removing-jquery-from-github-frontend/\n\njQuery让DOM操作、创建动画和“AJAX”请求变得相当简单，基本上，它让Web开发人员能够创建更加现代化的动态Web体验。\n\n对我来说 **方便的 替换原生js语法**  比什么乱七八糟我用不到的功能如不同浏览器端通用要重要得多的多的多的多！！！！\n\n\n\n### 所谓的jquery问题\n\n- $(selector)模式可以使用querySelectorAll()来替换；\n- 现在可以使用Element.classList来实现CSS类名切换；\n- CSS现在支持在样式表中而不是在JavaScript中定义可视动画；\n- 现在可以使用Fetch Standard执行$.ajax请求；\n- addEventListener()接口已经足够稳定，可以跨平台使用；\n- 我们可以使用轻量级的库来封装事件委托模式；\n- 随着JavaScript语言的发展，jQuery提供的一些语法糖已经变得多余。\n\n另外，链式语法不能满足我们想要的编写代码的方式。例如：\n\n```\n$('.js-widget')\n  .addClass('is-loading')\n  .show()\n```\n\n这种语法写起来很简单，但是根据我们的标准，它并不能很好地传达我们的意图。作者是否期望在当前页面上有一个或多个js-widget元素？另外，如果我们更新页面标记并意外遗漏了js-widget类名，浏览器是否会抛出异常会告诉我们出了什么问题？默认情况下，当没有任何内容与选择器匹配时，jQuery会跳过整个表达式，但对我们来说，这是一个bug。\n\n最后，我们开始使用Flow来注解类型，以便在构建时执行静态类型检查，并且我们发现，链式语法不适合做静态分析，因为几乎所有jQuery方法返回的结果都是相同的类型。我们当时之所以选择Flow，是因为@flow  weak模式等功能可以让我们逐步将类型应用于无类型的代码库上。\n\n\n\n\n\n### 我的看法！！\n\n1. jquery 格式简单，操作dom最顺手没有之一！！！\n2. 无用的特性和语法本来就可以删掉，因为我不用\n3. 页面标签是可以复杂，但是毕竟还有类，还有id，还有父子选择器，所以放屁呢，不好用？\n4. 链式语法就应用在链式执行上，爽的一逼。什么类型啦，分析啦，不都是放屁吗？我就觉得非要写一堆又长又臭的匈牙利命名的函数很蛋疼，尤其是还要让我按顺序写好多行，我简直想打人。\n5. 没用过flow真抱歉。\n6. 我支持把dom操作封装，也支持写组件，但是前端3d特效不用dom，不用选择器你告诉我怎么写？？？更何况谁说dom操作就不能函数化模块化？？更是放屁。\n7. 双向数据绑定我支持，前后端分离我也支持，这些操作都封装起来确实很棒，很方便。但这跟操作dom关系很大吗？？我就不能操作没数据跟model无关的地方的dom了吗？？凭什么我要getelementby？不难受吗？\n8. 为什么还要html？为什么还要css？既然都可以用js创建，那就直接写js不行吗？？退一万步，我就不能写个js库来生成html和css吗？\n\n\n\n综上：我想写一个，能用$选择器，能写链式语法，来构建js组件，最后再综合js组件，编译生成html css 等资源页，但是保留viewmodel层，用作数据交流！！\n\n\n\n！！！所以为什么我不用angular！！！\n\nangular内部有一个轻量级的jQuery（jqLite）！！！！！perfect！！！ \n\nangular：ui-model 跨框架组件！\n\n","source":"_posts/jquery风格替换插件.md","raw":"---\ntitle: jquery风格替换插件\ndate: 2018-11-26 06:45:56\ntags: js\n---\n\n### 前言\n\nhttps://blog.fundebug.com/2018/11/23/removing-jquery-from-github-frontend/\n\njQuery让DOM操作、创建动画和“AJAX”请求变得相当简单，基本上，它让Web开发人员能够创建更加现代化的动态Web体验。\n\n对我来说 **方便的 替换原生js语法**  比什么乱七八糟我用不到的功能如不同浏览器端通用要重要得多的多的多的多！！！！\n\n\n\n### 所谓的jquery问题\n\n- $(selector)模式可以使用querySelectorAll()来替换；\n- 现在可以使用Element.classList来实现CSS类名切换；\n- CSS现在支持在样式表中而不是在JavaScript中定义可视动画；\n- 现在可以使用Fetch Standard执行$.ajax请求；\n- addEventListener()接口已经足够稳定，可以跨平台使用；\n- 我们可以使用轻量级的库来封装事件委托模式；\n- 随着JavaScript语言的发展，jQuery提供的一些语法糖已经变得多余。\n\n另外，链式语法不能满足我们想要的编写代码的方式。例如：\n\n```\n$('.js-widget')\n  .addClass('is-loading')\n  .show()\n```\n\n这种语法写起来很简单，但是根据我们的标准，它并不能很好地传达我们的意图。作者是否期望在当前页面上有一个或多个js-widget元素？另外，如果我们更新页面标记并意外遗漏了js-widget类名，浏览器是否会抛出异常会告诉我们出了什么问题？默认情况下，当没有任何内容与选择器匹配时，jQuery会跳过整个表达式，但对我们来说，这是一个bug。\n\n最后，我们开始使用Flow来注解类型，以便在构建时执行静态类型检查，并且我们发现，链式语法不适合做静态分析，因为几乎所有jQuery方法返回的结果都是相同的类型。我们当时之所以选择Flow，是因为@flow  weak模式等功能可以让我们逐步将类型应用于无类型的代码库上。\n\n\n\n\n\n### 我的看法！！\n\n1. jquery 格式简单，操作dom最顺手没有之一！！！\n2. 无用的特性和语法本来就可以删掉，因为我不用\n3. 页面标签是可以复杂，但是毕竟还有类，还有id，还有父子选择器，所以放屁呢，不好用？\n4. 链式语法就应用在链式执行上，爽的一逼。什么类型啦，分析啦，不都是放屁吗？我就觉得非要写一堆又长又臭的匈牙利命名的函数很蛋疼，尤其是还要让我按顺序写好多行，我简直想打人。\n5. 没用过flow真抱歉。\n6. 我支持把dom操作封装，也支持写组件，但是前端3d特效不用dom，不用选择器你告诉我怎么写？？？更何况谁说dom操作就不能函数化模块化？？更是放屁。\n7. 双向数据绑定我支持，前后端分离我也支持，这些操作都封装起来确实很棒，很方便。但这跟操作dom关系很大吗？？我就不能操作没数据跟model无关的地方的dom了吗？？凭什么我要getelementby？不难受吗？\n8. 为什么还要html？为什么还要css？既然都可以用js创建，那就直接写js不行吗？？退一万步，我就不能写个js库来生成html和css吗？\n\n\n\n综上：我想写一个，能用$选择器，能写链式语法，来构建js组件，最后再综合js组件，编译生成html css 等资源页，但是保留viewmodel层，用作数据交流！！\n\n\n\n！！！所以为什么我不用angular！！！\n\nangular内部有一个轻量级的jQuery（jqLite）！！！！！perfect！！！ \n\nangular：ui-model 跨框架组件！\n\n","slug":"jquery风格替换插件","published":1,"updated":"2018-11-25T23:42:07.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14ka000lo49ur43217wa","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p><a href=\"https://blog.fundebug.com/2018/11/23/removing-jquery-from-github-frontend/\" target=\"_blank\" rel=\"noopener\">https://blog.fundebug.com/2018/11/23/removing-jquery-from-github-frontend/</a></p>\n<p>jQuery让DOM操作、创建动画和“AJAX”请求变得相当简单，基本上，它让Web开发人员能够创建更加现代化的动态Web体验。</p>\n<p>对我来说 <strong>方便的 替换原生js语法</strong>  比什么乱七八糟我用不到的功能如不同浏览器端通用要重要得多的多的多的多！！！！</p>\n<h3 id=\"所谓的jquery问题\"><a href=\"#所谓的jquery问题\" class=\"headerlink\" title=\"所谓的jquery问题\"></a>所谓的jquery问题</h3><ul>\n<li>$(selector)模式可以使用querySelectorAll()来替换；</li>\n<li>现在可以使用Element.classList来实现CSS类名切换；</li>\n<li>CSS现在支持在样式表中而不是在JavaScript中定义可视动画；</li>\n<li>现在可以使用Fetch Standard执行$.ajax请求；</li>\n<li>addEventListener()接口已经足够稳定，可以跨平台使用；</li>\n<li>我们可以使用轻量级的库来封装事件委托模式；</li>\n<li>随着JavaScript语言的发展，jQuery提供的一些语法糖已经变得多余。</li>\n</ul>\n<p>另外，链式语法不能满足我们想要的编写代码的方式。例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(&apos;.js-widget&apos;)</span><br><span class=\"line\">  .addClass(&apos;is-loading&apos;)</span><br><span class=\"line\">  .show()</span><br></pre></td></tr></table></figure>\n<p>这种语法写起来很简单，但是根据我们的标准，它并不能很好地传达我们的意图。作者是否期望在当前页面上有一个或多个js-widget元素？另外，如果我们更新页面标记并意外遗漏了js-widget类名，浏览器是否会抛出异常会告诉我们出了什么问题？默认情况下，当没有任何内容与选择器匹配时，jQuery会跳过整个表达式，但对我们来说，这是一个bug。</p>\n<p>最后，我们开始使用Flow来注解类型，以便在构建时执行静态类型检查，并且我们发现，链式语法不适合做静态分析，因为几乎所有jQuery方法返回的结果都是相同的类型。我们当时之所以选择Flow，是因为@flow  weak模式等功能可以让我们逐步将类型应用于无类型的代码库上。</p>\n<h3 id=\"我的看法！！\"><a href=\"#我的看法！！\" class=\"headerlink\" title=\"我的看法！！\"></a>我的看法！！</h3><ol>\n<li>jquery 格式简单，操作dom最顺手没有之一！！！</li>\n<li>无用的特性和语法本来就可以删掉，因为我不用</li>\n<li>页面标签是可以复杂，但是毕竟还有类，还有id，还有父子选择器，所以放屁呢，不好用？</li>\n<li>链式语法就应用在链式执行上，爽的一逼。什么类型啦，分析啦，不都是放屁吗？我就觉得非要写一堆又长又臭的匈牙利命名的函数很蛋疼，尤其是还要让我按顺序写好多行，我简直想打人。</li>\n<li>没用过flow真抱歉。</li>\n<li>我支持把dom操作封装，也支持写组件，但是前端3d特效不用dom，不用选择器你告诉我怎么写？？？更何况谁说dom操作就不能函数化模块化？？更是放屁。</li>\n<li>双向数据绑定我支持，前后端分离我也支持，这些操作都封装起来确实很棒，很方便。但这跟操作dom关系很大吗？？我就不能操作没数据跟model无关的地方的dom了吗？？凭什么我要getelementby？不难受吗？</li>\n<li>为什么还要html？为什么还要css？既然都可以用js创建，那就直接写js不行吗？？退一万步，我就不能写个js库来生成html和css吗？</li>\n</ol>\n<p>综上：我想写一个，能用$选择器，能写链式语法，来构建js组件，最后再综合js组件，编译生成html css 等资源页，但是保留viewmodel层，用作数据交流！！</p>\n<p>！！！所以为什么我不用angular！！！</p>\n<p>angular内部有一个轻量级的jQuery（jqLite）！！！！！perfect！！！ </p>\n<p>angular：ui-model 跨框架组件！</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p><a href=\"https://blog.fundebug.com/2018/11/23/removing-jquery-from-github-frontend/\" target=\"_blank\" rel=\"noopener\">https://blog.fundebug.com/2018/11/23/removing-jquery-from-github-frontend/</a></p>\n<p>jQuery让DOM操作、创建动画和“AJAX”请求变得相当简单，基本上，它让Web开发人员能够创建更加现代化的动态Web体验。</p>\n<p>对我来说 <strong>方便的 替换原生js语法</strong>  比什么乱七八糟我用不到的功能如不同浏览器端通用要重要得多的多的多的多！！！！</p>\n<h3 id=\"所谓的jquery问题\"><a href=\"#所谓的jquery问题\" class=\"headerlink\" title=\"所谓的jquery问题\"></a>所谓的jquery问题</h3><ul>\n<li>$(selector)模式可以使用querySelectorAll()来替换；</li>\n<li>现在可以使用Element.classList来实现CSS类名切换；</li>\n<li>CSS现在支持在样式表中而不是在JavaScript中定义可视动画；</li>\n<li>现在可以使用Fetch Standard执行$.ajax请求；</li>\n<li>addEventListener()接口已经足够稳定，可以跨平台使用；</li>\n<li>我们可以使用轻量级的库来封装事件委托模式；</li>\n<li>随着JavaScript语言的发展，jQuery提供的一些语法糖已经变得多余。</li>\n</ul>\n<p>另外，链式语法不能满足我们想要的编写代码的方式。例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(&apos;.js-widget&apos;)</span><br><span class=\"line\">  .addClass(&apos;is-loading&apos;)</span><br><span class=\"line\">  .show()</span><br></pre></td></tr></table></figure>\n<p>这种语法写起来很简单，但是根据我们的标准，它并不能很好地传达我们的意图。作者是否期望在当前页面上有一个或多个js-widget元素？另外，如果我们更新页面标记并意外遗漏了js-widget类名，浏览器是否会抛出异常会告诉我们出了什么问题？默认情况下，当没有任何内容与选择器匹配时，jQuery会跳过整个表达式，但对我们来说，这是一个bug。</p>\n<p>最后，我们开始使用Flow来注解类型，以便在构建时执行静态类型检查，并且我们发现，链式语法不适合做静态分析，因为几乎所有jQuery方法返回的结果都是相同的类型。我们当时之所以选择Flow，是因为@flow  weak模式等功能可以让我们逐步将类型应用于无类型的代码库上。</p>\n<h3 id=\"我的看法！！\"><a href=\"#我的看法！！\" class=\"headerlink\" title=\"我的看法！！\"></a>我的看法！！</h3><ol>\n<li>jquery 格式简单，操作dom最顺手没有之一！！！</li>\n<li>无用的特性和语法本来就可以删掉，因为我不用</li>\n<li>页面标签是可以复杂，但是毕竟还有类，还有id，还有父子选择器，所以放屁呢，不好用？</li>\n<li>链式语法就应用在链式执行上，爽的一逼。什么类型啦，分析啦，不都是放屁吗？我就觉得非要写一堆又长又臭的匈牙利命名的函数很蛋疼，尤其是还要让我按顺序写好多行，我简直想打人。</li>\n<li>没用过flow真抱歉。</li>\n<li>我支持把dom操作封装，也支持写组件，但是前端3d特效不用dom，不用选择器你告诉我怎么写？？？更何况谁说dom操作就不能函数化模块化？？更是放屁。</li>\n<li>双向数据绑定我支持，前后端分离我也支持，这些操作都封装起来确实很棒，很方便。但这跟操作dom关系很大吗？？我就不能操作没数据跟model无关的地方的dom了吗？？凭什么我要getelementby？不难受吗？</li>\n<li>为什么还要html？为什么还要css？既然都可以用js创建，那就直接写js不行吗？？退一万步，我就不能写个js库来生成html和css吗？</li>\n</ol>\n<p>综上：我想写一个，能用$选择器，能写链式语法，来构建js组件，最后再综合js组件，编译生成html css 等资源页，但是保留viewmodel层，用作数据交流！！</p>\n<p>！！！所以为什么我不用angular！！！</p>\n<p>angular内部有一个轻量级的jQuery（jqLite）！！！！！perfect！！！ </p>\n<p>angular：ui-model 跨框架组件！</p>\n"},{"title":"js组件1-获取当前函数参数对象","date":"2018-11-21T12:31:18.000Z","_content":"\narguments 参数在如下情况并不好使\n\n```\nTest({ name: \"李四\", age: 30 });//obj,undefined\nTest({ name: \"王五\"}, 18);//obj, 18\n```\n\n所以采用如下组件：\n\n```js\n/*------------------------------------------\n * 清除字符串两端空格，包含换行符、制表符\n *------------------------------------------*/\nString.prototype.Trim = function () { return this.replace(/(^[\\s\\n\\t]+|[\\s\\n\\t]+$)/g, \"\"); }\n \n/*----------------------------------------\n * 获取当前函数的参数对象\n *----------------------------------------\n * diffCase 是否区分大小写，默认 false\n *----------------------------------------*/\nfunction GetArgs(diffCase) {\n \n //返回参数对象\n var result = new Object();\n \n //获取调用函数\n var caller = arguments.callee.caller;\n if (caller == null || caller.arguments.length == 0) return result;\n \n //获取函数的参数集合\n var matchs = caller.toString().match(/\\s*function[\\w\\s]*\\(([\\w\\s,]*)\\)/);\n if (matchs == null) return result;\n var argArray = matchs[1].split(\",\");\n \n //获取参数对象\n var params = caller.arguments[0];\n var index = typeof (params) == \"object\" ? 1 : 0;\n if (index == 1) {\n  for (var p in params) {\n   for (var i = 0; i < argArray.length; i++) {\n    var arg = argArray[i].Trim();\n    if (diffCase) {\n     if (arg == p) {\n      result[arg] = params[p];\n      break;\n     }\n    } else {\n     if (arg.toLocaleLowerCase() == p.toLocaleLowerCase()) {\n      result[arg] = params[p];\n      break;\n     }\n    }\n   }\n  }\n }\n    \n //多个参数将第一个后面的参数覆盖对象传入的参数\n for (var i = index; i < argArray.length && i < caller.arguments.length; i++)\n  result[argArray[i].Trim()] = caller.arguments[i];\n \n return result;\n}\n```\n\n```js\n//测试函数\nfunction Test(name, age) {\n \n //获取参数对象\n var args = GetArgs();\n \n alert(\"姓名：\" + args.name + \"，年龄：\" + args.age);\n \n}\n \n//调用测试\nTest(\"张三\", 25);\nTest({ name: \"李四\", age: 30 });\nTest({ name: \"王五\" }, 18);\n```","source":"_posts/js组件1-获取当前函数参数对象.md","raw":"---\ntitle: js组件1-获取当前函数参数对象\ndate: 2018-11-21 20:31:18\ntags: js\n---\n\narguments 参数在如下情况并不好使\n\n```\nTest({ name: \"李四\", age: 30 });//obj,undefined\nTest({ name: \"王五\"}, 18);//obj, 18\n```\n\n所以采用如下组件：\n\n```js\n/*------------------------------------------\n * 清除字符串两端空格，包含换行符、制表符\n *------------------------------------------*/\nString.prototype.Trim = function () { return this.replace(/(^[\\s\\n\\t]+|[\\s\\n\\t]+$)/g, \"\"); }\n \n/*----------------------------------------\n * 获取当前函数的参数对象\n *----------------------------------------\n * diffCase 是否区分大小写，默认 false\n *----------------------------------------*/\nfunction GetArgs(diffCase) {\n \n //返回参数对象\n var result = new Object();\n \n //获取调用函数\n var caller = arguments.callee.caller;\n if (caller == null || caller.arguments.length == 0) return result;\n \n //获取函数的参数集合\n var matchs = caller.toString().match(/\\s*function[\\w\\s]*\\(([\\w\\s,]*)\\)/);\n if (matchs == null) return result;\n var argArray = matchs[1].split(\",\");\n \n //获取参数对象\n var params = caller.arguments[0];\n var index = typeof (params) == \"object\" ? 1 : 0;\n if (index == 1) {\n  for (var p in params) {\n   for (var i = 0; i < argArray.length; i++) {\n    var arg = argArray[i].Trim();\n    if (diffCase) {\n     if (arg == p) {\n      result[arg] = params[p];\n      break;\n     }\n    } else {\n     if (arg.toLocaleLowerCase() == p.toLocaleLowerCase()) {\n      result[arg] = params[p];\n      break;\n     }\n    }\n   }\n  }\n }\n    \n //多个参数将第一个后面的参数覆盖对象传入的参数\n for (var i = index; i < argArray.length && i < caller.arguments.length; i++)\n  result[argArray[i].Trim()] = caller.arguments[i];\n \n return result;\n}\n```\n\n```js\n//测试函数\nfunction Test(name, age) {\n \n //获取参数对象\n var args = GetArgs();\n \n alert(\"姓名：\" + args.name + \"，年龄：\" + args.age);\n \n}\n \n//调用测试\nTest(\"张三\", 25);\nTest({ name: \"李四\", age: 30 });\nTest({ name: \"王五\" }, 18);\n```","slug":"js组件1-获取当前函数参数对象","published":1,"updated":"2018-11-21T18:37:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14kb000oo49uzfkfga4x","content":"<p>arguments 参数在如下情况并不好使</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Test(&#123; name: &quot;李四&quot;, age: 30 &#125;);//obj,undefined</span><br><span class=\"line\">Test(&#123; name: &quot;王五&quot;&#125;, 18);//obj, 18</span><br></pre></td></tr></table></figure>\n<p>所以采用如下组件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"> * 清除字符串两端空格，包含换行符、制表符</span></span><br><span class=\"line\"><span class=\"comment\"> *------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"built_in\">String</span>.prototype.Trim = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.replace(<span class=\"regexp\">/(^[\\s\\n\\t]+|[\\s\\n\\t]+$)/g</span>, <span class=\"string\">\"\"</span>); &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">/*----------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"> * 获取当前函数的参数对象</span></span><br><span class=\"line\"><span class=\"comment\"> *----------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"> * diffCase 是否区分大小写，默认 false</span></span><br><span class=\"line\"><span class=\"comment\"> *----------------------------------------*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">GetArgs</span>(<span class=\"params\">diffCase</span>) </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">//返回参数对象</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> result = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">//获取调用函数</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> caller = <span class=\"built_in\">arguments</span>.callee.caller;</span><br><span class=\"line\"> <span class=\"keyword\">if</span> (caller == <span class=\"literal\">null</span> || caller.arguments.length == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> result;</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">//获取函数的参数集合</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> matchs = caller.toString().match(<span class=\"regexp\">/\\s*function[\\w\\s]*\\(([\\w\\s,]*)\\)/</span>);</span><br><span class=\"line\"> <span class=\"keyword\">if</span> (matchs == <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> result;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> argArray = matchs[<span class=\"number\">1</span>].split(<span class=\"string\">\",\"</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">//获取参数对象</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> params = caller.arguments[<span class=\"number\">0</span>];</span><br><span class=\"line\"> <span class=\"keyword\">var</span> index = <span class=\"keyword\">typeof</span> (params) == <span class=\"string\">\"object\"</span> ? <span class=\"number\">1</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"keyword\">if</span> (index == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> p <span class=\"keyword\">in</span> params) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; argArray.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arg = argArray[i].Trim();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (diffCase) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (arg == p) &#123;</span><br><span class=\"line\">      result[arg] = params[p];</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (arg.toLocaleLowerCase() == p.toLocaleLowerCase()) &#123;</span><br><span class=\"line\">      result[arg] = params[p];</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"> <span class=\"comment\">//多个参数将第一个后面的参数覆盖对象传入的参数</span></span><br><span class=\"line\"> <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = index; i &lt; argArray.length &amp;&amp; i &lt; caller.arguments.length; i++)</span><br><span class=\"line\">  result[argArray[i].Trim()] = caller.arguments[i];</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//测试函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Test</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">//获取参数对象</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> args = GetArgs();</span><br><span class=\"line\"> </span><br><span class=\"line\"> alert(<span class=\"string\">\"姓名：\"</span> + args.name + <span class=\"string\">\"，年龄：\"</span> + args.age);</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//调用测试</span></span><br><span class=\"line\">Test(<span class=\"string\">\"张三\"</span>, <span class=\"number\">25</span>);</span><br><span class=\"line\">Test(&#123; <span class=\"attr\">name</span>: <span class=\"string\">\"李四\"</span>, <span class=\"attr\">age</span>: <span class=\"number\">30</span> &#125;);</span><br><span class=\"line\">Test(&#123; <span class=\"attr\">name</span>: <span class=\"string\">\"王五\"</span> &#125;, <span class=\"number\">18</span>);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>arguments 参数在如下情况并不好使</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Test(&#123; name: &quot;李四&quot;, age: 30 &#125;);//obj,undefined</span><br><span class=\"line\">Test(&#123; name: &quot;王五&quot;&#125;, 18);//obj, 18</span><br></pre></td></tr></table></figure>\n<p>所以采用如下组件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"> * 清除字符串两端空格，包含换行符、制表符</span></span><br><span class=\"line\"><span class=\"comment\"> *------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"built_in\">String</span>.prototype.Trim = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.replace(<span class=\"regexp\">/(^[\\s\\n\\t]+|[\\s\\n\\t]+$)/g</span>, <span class=\"string\">\"\"</span>); &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">/*----------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"> * 获取当前函数的参数对象</span></span><br><span class=\"line\"><span class=\"comment\"> *----------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"> * diffCase 是否区分大小写，默认 false</span></span><br><span class=\"line\"><span class=\"comment\"> *----------------------------------------*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">GetArgs</span>(<span class=\"params\">diffCase</span>) </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">//返回参数对象</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> result = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">//获取调用函数</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> caller = <span class=\"built_in\">arguments</span>.callee.caller;</span><br><span class=\"line\"> <span class=\"keyword\">if</span> (caller == <span class=\"literal\">null</span> || caller.arguments.length == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> result;</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">//获取函数的参数集合</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> matchs = caller.toString().match(<span class=\"regexp\">/\\s*function[\\w\\s]*\\(([\\w\\s,]*)\\)/</span>);</span><br><span class=\"line\"> <span class=\"keyword\">if</span> (matchs == <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> result;</span><br><span class=\"line\"> <span class=\"keyword\">var</span> argArray = matchs[<span class=\"number\">1</span>].split(<span class=\"string\">\",\"</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">//获取参数对象</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> params = caller.arguments[<span class=\"number\">0</span>];</span><br><span class=\"line\"> <span class=\"keyword\">var</span> index = <span class=\"keyword\">typeof</span> (params) == <span class=\"string\">\"object\"</span> ? <span class=\"number\">1</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\"> <span class=\"keyword\">if</span> (index == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> p <span class=\"keyword\">in</span> params) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; argArray.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arg = argArray[i].Trim();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (diffCase) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (arg == p) &#123;</span><br><span class=\"line\">      result[arg] = params[p];</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (arg.toLocaleLowerCase() == p.toLocaleLowerCase()) &#123;</span><br><span class=\"line\">      result[arg] = params[p];</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"> <span class=\"comment\">//多个参数将第一个后面的参数覆盖对象传入的参数</span></span><br><span class=\"line\"> <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = index; i &lt; argArray.length &amp;&amp; i &lt; caller.arguments.length; i++)</span><br><span class=\"line\">  result[argArray[i].Trim()] = caller.arguments[i];</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//测试函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Test</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\">//获取参数对象</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> args = GetArgs();</span><br><span class=\"line\"> </span><br><span class=\"line\"> alert(<span class=\"string\">\"姓名：\"</span> + args.name + <span class=\"string\">\"，年龄：\"</span> + args.age);</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">//调用测试</span></span><br><span class=\"line\">Test(<span class=\"string\">\"张三\"</span>, <span class=\"number\">25</span>);</span><br><span class=\"line\">Test(&#123; <span class=\"attr\">name</span>: <span class=\"string\">\"李四\"</span>, <span class=\"attr\">age</span>: <span class=\"number\">30</span> &#125;);</span><br><span class=\"line\">Test(&#123; <span class=\"attr\">name</span>: <span class=\"string\">\"王五\"</span> &#125;, <span class=\"number\">18</span>);</span><br></pre></td></tr></table></figure>"},{"title":"mathjax-solution","date":"2018-11-20T15:47:40.000Z","_content":"\n### 前言\n\n在配置博客的时候，希望能使用mathjax来编译latex风格的数学公式，现找到一种完美解决办法。\n\n#### 一、原理\n\n考虑采用在静态页面内通过引用外部的mathjax.js 对页内数学公式进行解析。\n\n#### 二、创建模板文件\n\n在hexo的主题文件夹内找到js资源文件夹，创建一个名为math.js的文件\n\n并将以下内容粘贴：\n\n```javascript\nMathJax.Hub.Config({ jax: [\"input/TeX\", \"output/HTML-CSS\"],tex2jax: { inlineMath: [ ['$', '$'] ], displayMath: [ ['$$', '$$']], processEscapes: true, skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code'] }, messageStyle: \"none\", \"HTML-CSS\": { preferredFont: \"TeX\", availableFonts: [\"STIX\",\"TeX\"] } });\n```\n\n该段内容的作用是调用Mathjax的api对页内公式进行解析。\n\n\n\n#### 三、引入Mathjax库并调用刚刚创建的math.js\n\n在你的主题中找到整体调用JavaScript资源的模板文件，并添加如下列形式的语句（我的是pug模板所以是这种形式）：\n\n```jade\nscript(src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML')\n```\n\n该语句功能是引入cdn的mathjax库，\n\n\n\n再添加下列语句：\n\n```jade\nscript(src= url_for('js/math.js'))\n```\n\n该语句功能是引入之前创建的math.js\n\n\n\n以上两部分语句作为主题模板文件的一部分会在渲染你的资源静态页面时自动被加入，并完成对页面内的latex数学公式的解析\n\n\n\n#### 四、修改转移规则\n\n在如下文件中：\n\n```\nnodes_modules/marked/lib/marked.js\n```\n\n修改\n\n```\nescape: /^\\\\([\\\\`*{}\\[\\]()# +\\-.!_>])/,\n```\n为：\n\n\n```\nescape: /^\\\\([`*{}\\[\\]()# +\\-.!_>])/,\n```\n再修改\n```\nem: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n```\n为：\n```\nem:/^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n```\n\n\n\n最后，重新渲染即可\n\n```\nhexo clean\nhexo d -g\n```\n\n","source":"_posts/mathjax-solution.md","raw":"---\ntitle: mathjax-solution\ndate: 2018-11-20 23:47:40\ntags: \n- mathjax\n- hexo\n---\n\n### 前言\n\n在配置博客的时候，希望能使用mathjax来编译latex风格的数学公式，现找到一种完美解决办法。\n\n#### 一、原理\n\n考虑采用在静态页面内通过引用外部的mathjax.js 对页内数学公式进行解析。\n\n#### 二、创建模板文件\n\n在hexo的主题文件夹内找到js资源文件夹，创建一个名为math.js的文件\n\n并将以下内容粘贴：\n\n```javascript\nMathJax.Hub.Config({ jax: [\"input/TeX\", \"output/HTML-CSS\"],tex2jax: { inlineMath: [ ['$', '$'] ], displayMath: [ ['$$', '$$']], processEscapes: true, skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code'] }, messageStyle: \"none\", \"HTML-CSS\": { preferredFont: \"TeX\", availableFonts: [\"STIX\",\"TeX\"] } });\n```\n\n该段内容的作用是调用Mathjax的api对页内公式进行解析。\n\n\n\n#### 三、引入Mathjax库并调用刚刚创建的math.js\n\n在你的主题中找到整体调用JavaScript资源的模板文件，并添加如下列形式的语句（我的是pug模板所以是这种形式）：\n\n```jade\nscript(src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML')\n```\n\n该语句功能是引入cdn的mathjax库，\n\n\n\n再添加下列语句：\n\n```jade\nscript(src= url_for('js/math.js'))\n```\n\n该语句功能是引入之前创建的math.js\n\n\n\n以上两部分语句作为主题模板文件的一部分会在渲染你的资源静态页面时自动被加入，并完成对页面内的latex数学公式的解析\n\n\n\n#### 四、修改转移规则\n\n在如下文件中：\n\n```\nnodes_modules/marked/lib/marked.js\n```\n\n修改\n\n```\nescape: /^\\\\([\\\\`*{}\\[\\]()# +\\-.!_>])/,\n```\n为：\n\n\n```\nescape: /^\\\\([`*{}\\[\\]()# +\\-.!_>])/,\n```\n再修改\n```\nem: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n```\n为：\n```\nem:/^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n```\n\n\n\n最后，重新渲染即可\n\n```\nhexo clean\nhexo d -g\n```\n\n","slug":"mathjax-solution","published":1,"updated":"2018-11-20T16:04:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14kc000qo49uh9u1025d","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>在配置博客的时候，希望能使用mathjax来编译latex风格的数学公式，现找到一种完美解决办法。</p>\n<h4 id=\"一、原理\"><a href=\"#一、原理\" class=\"headerlink\" title=\"一、原理\"></a>一、原理</h4><p>考虑采用在静态页面内通过引用外部的mathjax.js 对页内数学公式进行解析。</p>\n<h4 id=\"二、创建模板文件\"><a href=\"#二、创建模板文件\" class=\"headerlink\" title=\"二、创建模板文件\"></a>二、创建模板文件</h4><p>在hexo的主题文件夹内找到js资源文件夹，创建一个名为math.js的文件</p>\n<p>并将以下内容粘贴：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MathJax.Hub.Config(&#123; <span class=\"attr\">jax</span>: [<span class=\"string\">\"input/TeX\"</span>, <span class=\"string\">\"output/HTML-CSS\"</span>],<span class=\"attr\">tex2jax</span>: &#123; <span class=\"attr\">inlineMath</span>: [ [<span class=\"string\">'$'</span>, <span class=\"string\">'$'</span>] ], <span class=\"attr\">displayMath</span>: [ [<span class=\"string\">'$$'</span>, <span class=\"string\">'$$'</span>]], <span class=\"attr\">processEscapes</span>: <span class=\"literal\">true</span>, <span class=\"attr\">skipTags</span>: [<span class=\"string\">'script'</span>, <span class=\"string\">'noscript'</span>, <span class=\"string\">'style'</span>, <span class=\"string\">'textarea'</span>, <span class=\"string\">'pre'</span>, <span class=\"string\">'code'</span>] &#125;, <span class=\"attr\">messageStyle</span>: <span class=\"string\">\"none\"</span>, <span class=\"string\">\"HTML-CSS\"</span>: &#123; <span class=\"attr\">preferredFont</span>: <span class=\"string\">\"TeX\"</span>, <span class=\"attr\">availableFonts</span>: [<span class=\"string\">\"STIX\"</span>,<span class=\"string\">\"TeX\"</span>] &#125; &#125;);</span><br></pre></td></tr></table></figure>\n<p>该段内容的作用是调用Mathjax的api对页内公式进行解析。</p>\n<h4 id=\"三、引入Mathjax库并调用刚刚创建的math-js\"><a href=\"#三、引入Mathjax库并调用刚刚创建的math-js\" class=\"headerlink\" title=\"三、引入Mathjax库并调用刚刚创建的math.js\"></a>三、引入Mathjax库并调用刚刚创建的math.js</h4><p>在你的主题中找到整体调用JavaScript资源的模板文件，并添加如下列形式的语句（我的是pug模板所以是这种形式）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">script(src=&apos;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML&apos;)</span><br></pre></td></tr></table></figure>\n<p>该语句功能是引入cdn的mathjax库，</p>\n<p>再添加下列语句：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">script(src= url_for(&apos;js/math.js&apos;))</span><br></pre></td></tr></table></figure>\n<p>该语句功能是引入之前创建的math.js</p>\n<p>以上两部分语句作为主题模板文件的一部分会在渲染你的资源静态页面时自动被加入，并完成对页面内的latex数学公式的解析</p>\n<h4 id=\"四、修改转移规则\"><a href=\"#四、修改转移规则\" class=\"headerlink\" title=\"四、修改转移规则\"></a>四、修改转移规则</h4><p>在如下文件中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nodes_modules/marked/lib/marked.js</span><br></pre></td></tr></table></figure>\n<p>修改</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">escape: /^\\\\([\\\\`*&#123;&#125;\\[\\]()# +\\-.!_&gt;])/,</span><br></pre></td></tr></table></figure>\n<p>为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">escape: /^\\\\([`*&#123;&#125;\\[\\]()# +\\-.!_&gt;])/,</span><br></pre></td></tr></table></figure>\n<p>再修改<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,</span><br></pre></td></tr></table></figure></p>\n<p>为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">em:/^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,</span><br></pre></td></tr></table></figure></p>\n<p>最后，重新渲染即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>在配置博客的时候，希望能使用mathjax来编译latex风格的数学公式，现找到一种完美解决办法。</p>\n<h4 id=\"一、原理\"><a href=\"#一、原理\" class=\"headerlink\" title=\"一、原理\"></a>一、原理</h4><p>考虑采用在静态页面内通过引用外部的mathjax.js 对页内数学公式进行解析。</p>\n<h4 id=\"二、创建模板文件\"><a href=\"#二、创建模板文件\" class=\"headerlink\" title=\"二、创建模板文件\"></a>二、创建模板文件</h4><p>在hexo的主题文件夹内找到js资源文件夹，创建一个名为math.js的文件</p>\n<p>并将以下内容粘贴：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MathJax.Hub.Config(&#123; <span class=\"attr\">jax</span>: [<span class=\"string\">\"input/TeX\"</span>, <span class=\"string\">\"output/HTML-CSS\"</span>],<span class=\"attr\">tex2jax</span>: &#123; <span class=\"attr\">inlineMath</span>: [ [<span class=\"string\">'$'</span>, <span class=\"string\">'$'</span>] ], <span class=\"attr\">displayMath</span>: [ [<span class=\"string\">'$$'</span>, <span class=\"string\">'$$'</span>]], <span class=\"attr\">processEscapes</span>: <span class=\"literal\">true</span>, <span class=\"attr\">skipTags</span>: [<span class=\"string\">'script'</span>, <span class=\"string\">'noscript'</span>, <span class=\"string\">'style'</span>, <span class=\"string\">'textarea'</span>, <span class=\"string\">'pre'</span>, <span class=\"string\">'code'</span>] &#125;, <span class=\"attr\">messageStyle</span>: <span class=\"string\">\"none\"</span>, <span class=\"string\">\"HTML-CSS\"</span>: &#123; <span class=\"attr\">preferredFont</span>: <span class=\"string\">\"TeX\"</span>, <span class=\"attr\">availableFonts</span>: [<span class=\"string\">\"STIX\"</span>,<span class=\"string\">\"TeX\"</span>] &#125; &#125;);</span><br></pre></td></tr></table></figure>\n<p>该段内容的作用是调用Mathjax的api对页内公式进行解析。</p>\n<h4 id=\"三、引入Mathjax库并调用刚刚创建的math-js\"><a href=\"#三、引入Mathjax库并调用刚刚创建的math-js\" class=\"headerlink\" title=\"三、引入Mathjax库并调用刚刚创建的math.js\"></a>三、引入Mathjax库并调用刚刚创建的math.js</h4><p>在你的主题中找到整体调用JavaScript资源的模板文件，并添加如下列形式的语句（我的是pug模板所以是这种形式）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">script(src=&apos;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML&apos;)</span><br></pre></td></tr></table></figure>\n<p>该语句功能是引入cdn的mathjax库，</p>\n<p>再添加下列语句：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">script(src= url_for(&apos;js/math.js&apos;))</span><br></pre></td></tr></table></figure>\n<p>该语句功能是引入之前创建的math.js</p>\n<p>以上两部分语句作为主题模板文件的一部分会在渲染你的资源静态页面时自动被加入，并完成对页面内的latex数学公式的解析</p>\n<h4 id=\"四、修改转移规则\"><a href=\"#四、修改转移规则\" class=\"headerlink\" title=\"四、修改转移规则\"></a>四、修改转移规则</h4><p>在如下文件中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nodes_modules/marked/lib/marked.js</span><br></pre></td></tr></table></figure>\n<p>修改</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">escape: /^\\\\([\\\\`*&#123;&#125;\\[\\]()# +\\-.!_&gt;])/,</span><br></pre></td></tr></table></figure>\n<p>为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">escape: /^\\\\([`*&#123;&#125;\\[\\]()# +\\-.!_&gt;])/,</span><br></pre></td></tr></table></figure>\n<p>再修改<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,</span><br></pre></td></tr></table></figure></p>\n<p>为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">em:/^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,</span><br></pre></td></tr></table></figure></p>\n<p>最后，重新渲染即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n"},{"title":"shell-1","date":"2018-11-20T08:56:11.000Z","_content":"\n## 前言\n\nshell: 命令解释器  -> os\n\nshell脚本贯穿于linux服务\n\n弱类型语言：直接赋值，不用预定义类型，语法宽松\n\n### 一、建立一个shell\n\n##### 首行：#!/bin/bash 指定命令解释器（sh，bash，awk，tcl，python....)\n\n#! 非第一行 则为注释， shell用#为注释\n\nsh ，bash：sh 为bash 的软链接\n\n#### 注：linux 默认bash， 首行可以不写语言标识语句\n\n./xx.sh 执行 == bash xx.sh 执行\n\n### 二、shell脚本的执行\n\nshell 非交互运行：\n\n1. 查找环境变量：**全局etc/profile.d/**         **bashrc** \n\n2. 非可执行权限：bash xx.sh\n\n3. 可执行权限： ./ （chmod 755）\n\n4. source 或 . 执行：类似include， 即将xx.sh加载到父脚本下使用，父脚本可使用xx.sh 的变量和返回值 \n\n\n控制台窗口是一个shell，运行的脚本也是一个shell\n\n用source 或.  加载，可以把脚本里的变量 共享给 控制台窗口shell！！\n\n##### 注：想在一个脚本里调用另一个脚本里的函数和变量 要用 source或. 来include 其他脚本！！\n\n$user: 用户名\n\n##### 注：\n\n##### n = 3\n\n##### 单引号‘$n' 输出\n\n##### 即为字符串$n\n\n##### 双引号“$n”输出\n\n##### 即为数字3\n\n##### 反引号``是命令替换，命令替换是指Shell可以先执行反引号内的命令，将输出结果暂时保存，在适当的地方输出\n```bash\ncat > 1.sh\n> bin=`dirname \"$0\"`\n\nbash 1.sh\necho $bin   =====>\\ (输出为\\)\n# 此时的bin为全局变量，不是1.sh中那个被赋值的局部变量\n. 1.sh\necho $bin   =====>.（输出为.）\n# 此时1.sh的内容已经被加载到当前控制台下执行，bin变量被共享\n# $0是bash的文件名，在bash中一般使用cd `dirname $0`进入该脚本所在的目录中\n```\n\n\n\n### 三、shell规范\n\n1. #!/bin/bash\n\n2. \\# Date: 2018-11-20\n\n3. \\# Author:\n\n4. \\# Email:\n\n5. \\# Functions:\n\n6. \\# Version:\n\n##### 注：./vimrc 可配置 制动生成头部信息\n\n### 四、变量\n\n常用全局变量：$USER \\$UID \\$HOME \\$SHELL \\$PS1\\$PWD\n\nenv, set .... 都可以看到很多\n\n\n\nexport 设置环境变量\n\n**export PATH=/app/bin:$PATH**\n\n常放于 /etc/profile\n\n**unset 取消 环境变量 注销前临时生效，除非写到文件里！**\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/shell-1.md","raw":"---\ntitle: shell-1\ndate: 2018-11-20 16:56:11\ntags:\n- shell\n- linux\n---\n\n## 前言\n\nshell: 命令解释器  -> os\n\nshell脚本贯穿于linux服务\n\n弱类型语言：直接赋值，不用预定义类型，语法宽松\n\n### 一、建立一个shell\n\n##### 首行：#!/bin/bash 指定命令解释器（sh，bash，awk，tcl，python....)\n\n#! 非第一行 则为注释， shell用#为注释\n\nsh ，bash：sh 为bash 的软链接\n\n#### 注：linux 默认bash， 首行可以不写语言标识语句\n\n./xx.sh 执行 == bash xx.sh 执行\n\n### 二、shell脚本的执行\n\nshell 非交互运行：\n\n1. 查找环境变量：**全局etc/profile.d/**         **bashrc** \n\n2. 非可执行权限：bash xx.sh\n\n3. 可执行权限： ./ （chmod 755）\n\n4. source 或 . 执行：类似include， 即将xx.sh加载到父脚本下使用，父脚本可使用xx.sh 的变量和返回值 \n\n\n控制台窗口是一个shell，运行的脚本也是一个shell\n\n用source 或.  加载，可以把脚本里的变量 共享给 控制台窗口shell！！\n\n##### 注：想在一个脚本里调用另一个脚本里的函数和变量 要用 source或. 来include 其他脚本！！\n\n$user: 用户名\n\n##### 注：\n\n##### n = 3\n\n##### 单引号‘$n' 输出\n\n##### 即为字符串$n\n\n##### 双引号“$n”输出\n\n##### 即为数字3\n\n##### 反引号``是命令替换，命令替换是指Shell可以先执行反引号内的命令，将输出结果暂时保存，在适当的地方输出\n```bash\ncat > 1.sh\n> bin=`dirname \"$0\"`\n\nbash 1.sh\necho $bin   =====>\\ (输出为\\)\n# 此时的bin为全局变量，不是1.sh中那个被赋值的局部变量\n. 1.sh\necho $bin   =====>.（输出为.）\n# 此时1.sh的内容已经被加载到当前控制台下执行，bin变量被共享\n# $0是bash的文件名，在bash中一般使用cd `dirname $0`进入该脚本所在的目录中\n```\n\n\n\n### 三、shell规范\n\n1. #!/bin/bash\n\n2. \\# Date: 2018-11-20\n\n3. \\# Author:\n\n4. \\# Email:\n\n5. \\# Functions:\n\n6. \\# Version:\n\n##### 注：./vimrc 可配置 制动生成头部信息\n\n### 四、变量\n\n常用全局变量：$USER \\$UID \\$HOME \\$SHELL \\$PS1\\$PWD\n\nenv, set .... 都可以看到很多\n\n\n\nexport 设置环境变量\n\n**export PATH=/app/bin:$PATH**\n\n常放于 /etc/profile\n\n**unset 取消 环境变量 注销前临时生效，除非写到文件里！**\n\n\n\n\n\n\n\n\n\n\n\n","slug":"shell-1","published":1,"updated":"2018-11-20T15:04:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14ke000uo49uok77fvx8","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>shell: 命令解释器  -&gt; os</p>\n<p>shell脚本贯穿于linux服务</p>\n<p>弱类型语言：直接赋值，不用预定义类型，语法宽松</p>\n<h3 id=\"一、建立一个shell\"><a href=\"#一、建立一个shell\" class=\"headerlink\" title=\"一、建立一个shell\"></a>一、建立一个shell</h3><h5 id=\"首行：-bin-bash-指定命令解释器（sh，bash，awk，tcl，python…\"><a href=\"#首行：-bin-bash-指定命令解释器（sh，bash，awk，tcl，python…\" class=\"headerlink\" title=\"首行：#!/bin/bash 指定命令解释器（sh，bash，awk，tcl，python….)\"></a>首行：#!/bin/bash 指定命令解释器（sh，bash，awk，tcl，python….)</h5><p>#! 非第一行 则为注释， shell用#为注释</p>\n<p>sh ，bash：sh 为bash 的软链接</p>\n<h4 id=\"注：linux-默认bash，-首行可以不写语言标识语句\"><a href=\"#注：linux-默认bash，-首行可以不写语言标识语句\" class=\"headerlink\" title=\"注：linux 默认bash， 首行可以不写语言标识语句\"></a>注：linux 默认bash， 首行可以不写语言标识语句</h4><p>./xx.sh 执行 == bash xx.sh 执行</p>\n<h3 id=\"二、shell脚本的执行\"><a href=\"#二、shell脚本的执行\" class=\"headerlink\" title=\"二、shell脚本的执行\"></a>二、shell脚本的执行</h3><p>shell 非交互运行：</p>\n<ol>\n<li><p>查找环境变量：<strong>全局etc/profile.d/</strong>         <strong>bashrc</strong> </p>\n</li>\n<li><p>非可执行权限：bash xx.sh</p>\n</li>\n<li><p>可执行权限： ./ （chmod 755）</p>\n</li>\n<li><p>source 或 . 执行：类似include， 即将xx.sh加载到父脚本下使用，父脚本可使用xx.sh 的变量和返回值 </p>\n</li>\n</ol>\n<p>控制台窗口是一个shell，运行的脚本也是一个shell</p>\n<p>用source 或.  加载，可以把脚本里的变量 共享给 控制台窗口shell！！</p>\n<h5 id=\"注：想在一个脚本里调用另一个脚本里的函数和变量-要用-source或-来include-其他脚本！！\"><a href=\"#注：想在一个脚本里调用另一个脚本里的函数和变量-要用-source或-来include-其他脚本！！\" class=\"headerlink\" title=\"注：想在一个脚本里调用另一个脚本里的函数和变量 要用 source或. 来include 其他脚本！！\"></a>注：想在一个脚本里调用另一个脚本里的函数和变量 要用 source或. 来include 其他脚本！！</h5><p>$user: 用户名</p>\n<h5 id=\"注：\"><a href=\"#注：\" class=\"headerlink\" title=\"注：\"></a>注：</h5><h5 id=\"n-3\"><a href=\"#n-3\" class=\"headerlink\" title=\"n = 3\"></a>n = 3</h5><h5 id=\"单引号‘-n’-输出\"><a href=\"#单引号‘-n’-输出\" class=\"headerlink\" title=\"单引号‘$n’ 输出\"></a>单引号‘$n’ 输出</h5><h5 id=\"即为字符串-n\"><a href=\"#即为字符串-n\" class=\"headerlink\" title=\"即为字符串$n\"></a>即为字符串$n</h5><h5 id=\"双引号“-n”输出\"><a href=\"#双引号“-n”输出\" class=\"headerlink\" title=\"双引号“$n”输出\"></a>双引号“$n”输出</h5><h5 id=\"即为数字3\"><a href=\"#即为数字3\" class=\"headerlink\" title=\"即为数字3\"></a>即为数字3</h5><h5 id=\"反引号是命令替换，命令替换是指Shell可以先执行反引号内的命令，将输出结果暂时保存，在适当的地方输出\"><a href=\"#反引号是命令替换，命令替换是指Shell可以先执行反引号内的命令，将输出结果暂时保存，在适当的地方输出\" class=\"headerlink\" title=\"反引号是命令替换，命令替换是指Shell可以先执行反引号内的命令，将输出结果暂时保存，在适当的地方输出\"></a>反引号<code></code>是命令替换，命令替换是指Shell可以先执行反引号内的命令，将输出结果暂时保存，在适当的地方输出</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; 1.sh</span><br><span class=\"line\">&gt; bin=`dirname <span class=\"string\">\"<span class=\"variable\">$0</span>\"</span>`</span><br><span class=\"line\"></span><br><span class=\"line\">bash 1.sh</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$bin</span>   =====&gt;\\ (输出为\\)</span><br><span class=\"line\"><span class=\"comment\"># 此时的bin为全局变量，不是1.sh中那个被赋值的局部变量</span></span><br><span class=\"line\">. 1.sh</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$bin</span>   =====&gt;.（输出为.）</span><br><span class=\"line\"><span class=\"comment\"># 此时1.sh的内容已经被加载到当前控制台下执行，bin变量被共享</span></span><br><span class=\"line\"><span class=\"comment\"># $0是bash的文件名，在bash中一般使用cd `dirname $0`进入该脚本所在的目录中</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"三、shell规范\"><a href=\"#三、shell规范\" class=\"headerlink\" title=\"三、shell规范\"></a>三、shell规范</h3><ol>\n<li><p>#!/bin/bash</p>\n</li>\n<li><p># Date: 2018-11-20</p>\n</li>\n<li><p># Author:</p>\n</li>\n<li><p># Email:</p>\n</li>\n<li><p># Functions:</p>\n</li>\n<li><p># Version:</p>\n</li>\n</ol>\n<h5 id=\"注：-vimrc-可配置-制动生成头部信息\"><a href=\"#注：-vimrc-可配置-制动生成头部信息\" class=\"headerlink\" title=\"注：./vimrc 可配置 制动生成头部信息\"></a>注：./vimrc 可配置 制动生成头部信息</h5><h3 id=\"四、变量\"><a href=\"#四、变量\" class=\"headerlink\" title=\"四、变量\"></a>四、变量</h3><p>常用全局变量：$USER \\$UID \\$HOME \\$SHELL \\$PS1\\$PWD</p>\n<p>env, set …. 都可以看到很多</p>\n<p>export 设置环境变量</p>\n<p><strong>export PATH=/app/bin:$PATH</strong></p>\n<p>常放于 /etc/profile</p>\n<p><strong>unset 取消 环境变量 注销前临时生效，除非写到文件里！</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>shell: 命令解释器  -&gt; os</p>\n<p>shell脚本贯穿于linux服务</p>\n<p>弱类型语言：直接赋值，不用预定义类型，语法宽松</p>\n<h3 id=\"一、建立一个shell\"><a href=\"#一、建立一个shell\" class=\"headerlink\" title=\"一、建立一个shell\"></a>一、建立一个shell</h3><h5 id=\"首行：-bin-bash-指定命令解释器（sh，bash，awk，tcl，python…\"><a href=\"#首行：-bin-bash-指定命令解释器（sh，bash，awk，tcl，python…\" class=\"headerlink\" title=\"首行：#!/bin/bash 指定命令解释器（sh，bash，awk，tcl，python….)\"></a>首行：#!/bin/bash 指定命令解释器（sh，bash，awk，tcl，python….)</h5><p>#! 非第一行 则为注释， shell用#为注释</p>\n<p>sh ，bash：sh 为bash 的软链接</p>\n<h4 id=\"注：linux-默认bash，-首行可以不写语言标识语句\"><a href=\"#注：linux-默认bash，-首行可以不写语言标识语句\" class=\"headerlink\" title=\"注：linux 默认bash， 首行可以不写语言标识语句\"></a>注：linux 默认bash， 首行可以不写语言标识语句</h4><p>./xx.sh 执行 == bash xx.sh 执行</p>\n<h3 id=\"二、shell脚本的执行\"><a href=\"#二、shell脚本的执行\" class=\"headerlink\" title=\"二、shell脚本的执行\"></a>二、shell脚本的执行</h3><p>shell 非交互运行：</p>\n<ol>\n<li><p>查找环境变量：<strong>全局etc/profile.d/</strong>         <strong>bashrc</strong> </p>\n</li>\n<li><p>非可执行权限：bash xx.sh</p>\n</li>\n<li><p>可执行权限： ./ （chmod 755）</p>\n</li>\n<li><p>source 或 . 执行：类似include， 即将xx.sh加载到父脚本下使用，父脚本可使用xx.sh 的变量和返回值 </p>\n</li>\n</ol>\n<p>控制台窗口是一个shell，运行的脚本也是一个shell</p>\n<p>用source 或.  加载，可以把脚本里的变量 共享给 控制台窗口shell！！</p>\n<h5 id=\"注：想在一个脚本里调用另一个脚本里的函数和变量-要用-source或-来include-其他脚本！！\"><a href=\"#注：想在一个脚本里调用另一个脚本里的函数和变量-要用-source或-来include-其他脚本！！\" class=\"headerlink\" title=\"注：想在一个脚本里调用另一个脚本里的函数和变量 要用 source或. 来include 其他脚本！！\"></a>注：想在一个脚本里调用另一个脚本里的函数和变量 要用 source或. 来include 其他脚本！！</h5><p>$user: 用户名</p>\n<h5 id=\"注：\"><a href=\"#注：\" class=\"headerlink\" title=\"注：\"></a>注：</h5><h5 id=\"n-3\"><a href=\"#n-3\" class=\"headerlink\" title=\"n = 3\"></a>n = 3</h5><h5 id=\"单引号‘-n’-输出\"><a href=\"#单引号‘-n’-输出\" class=\"headerlink\" title=\"单引号‘$n’ 输出\"></a>单引号‘$n’ 输出</h5><h5 id=\"即为字符串-n\"><a href=\"#即为字符串-n\" class=\"headerlink\" title=\"即为字符串$n\"></a>即为字符串$n</h5><h5 id=\"双引号“-n”输出\"><a href=\"#双引号“-n”输出\" class=\"headerlink\" title=\"双引号“$n”输出\"></a>双引号“$n”输出</h5><h5 id=\"即为数字3\"><a href=\"#即为数字3\" class=\"headerlink\" title=\"即为数字3\"></a>即为数字3</h5><h5 id=\"反引号是命令替换，命令替换是指Shell可以先执行反引号内的命令，将输出结果暂时保存，在适当的地方输出\"><a href=\"#反引号是命令替换，命令替换是指Shell可以先执行反引号内的命令，将输出结果暂时保存，在适当的地方输出\" class=\"headerlink\" title=\"反引号是命令替换，命令替换是指Shell可以先执行反引号内的命令，将输出结果暂时保存，在适当的地方输出\"></a>反引号<code></code>是命令替换，命令替换是指Shell可以先执行反引号内的命令，将输出结果暂时保存，在适当的地方输出</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; 1.sh</span><br><span class=\"line\">&gt; bin=`dirname <span class=\"string\">\"<span class=\"variable\">$0</span>\"</span>`</span><br><span class=\"line\"></span><br><span class=\"line\">bash 1.sh</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$bin</span>   =====&gt;\\ (输出为\\)</span><br><span class=\"line\"><span class=\"comment\"># 此时的bin为全局变量，不是1.sh中那个被赋值的局部变量</span></span><br><span class=\"line\">. 1.sh</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$bin</span>   =====&gt;.（输出为.）</span><br><span class=\"line\"><span class=\"comment\"># 此时1.sh的内容已经被加载到当前控制台下执行，bin变量被共享</span></span><br><span class=\"line\"><span class=\"comment\"># $0是bash的文件名，在bash中一般使用cd `dirname $0`进入该脚本所在的目录中</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"三、shell规范\"><a href=\"#三、shell规范\" class=\"headerlink\" title=\"三、shell规范\"></a>三、shell规范</h3><ol>\n<li><p>#!/bin/bash</p>\n</li>\n<li><p># Date: 2018-11-20</p>\n</li>\n<li><p># Author:</p>\n</li>\n<li><p># Email:</p>\n</li>\n<li><p># Functions:</p>\n</li>\n<li><p># Version:</p>\n</li>\n</ol>\n<h5 id=\"注：-vimrc-可配置-制动生成头部信息\"><a href=\"#注：-vimrc-可配置-制动生成头部信息\" class=\"headerlink\" title=\"注：./vimrc 可配置 制动生成头部信息\"></a>注：./vimrc 可配置 制动生成头部信息</h5><h3 id=\"四、变量\"><a href=\"#四、变量\" class=\"headerlink\" title=\"四、变量\"></a>四、变量</h3><p>常用全局变量：$USER \\$UID \\$HOME \\$SHELL \\$PS1\\$PWD</p>\n<p>env, set …. 都可以看到很多</p>\n<p>export 设置环境变量</p>\n<p><strong>export PATH=/app/bin:$PATH</strong></p>\n<p>常放于 /etc/profile</p>\n<p><strong>unset 取消 环境变量 注销前临时生效，除非写到文件里！</strong></p>\n"},{"title":"test","date":"2018-11-19T22:19:39.000Z","_content":"","source":"_posts/test.md","raw":"---\ntitle: test\ndate: 2018-11-20 06:19:39\ntags:\n---\n","slug":"test","published":1,"updated":"2018-11-20T15:04:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14kf000wo49uo1box041","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"ETX4-fs error（已解决）","date":"2018-11-20T17:51:09.000Z","_content":"\n### 前言\n\n再将ubuntu系统装到另一块完整的硬盘上时，由于某些原因，在重新开机以后会报大量的windows系统盘（sda1）ETX4-error，导致开机检测无法通过\n\n由此可能会导致以下开机时bug：\n\n先是：\n\nibus 报 fatal \n\n在一堆failed之后\n\n出现大量的\n\nETX4-fs error\n\n结果：无法开机，system login failed\n\n\n\n### 一、解决方法\n\n考虑到ahci会检测全部硬盘文件系统，ide只会检测当前启动分区\n\n将硬盘从AHCI摸式切换至IDE/compatible, 重启即可！\n\n验证成功，可以成功开机。\n\n\n\n但此方法又有一点不足之处：切换了硬盘模式以后，导致windows 无法正确开机。\n\n\n\n所以问题的根源还是出在windows上。\n\n具体细节无法查明，但考虑到windows是在休眠状态挂起中，或者是在快速启动关机挂起中，很有可能因异常关机导致文件系统异常。\n\n\n\n其二、windows之前有一次更新，更新后未经过 ”***正常完全的关机***“ 步骤，也可能导致文件系统异常\n\n### 二、结论\n\n所以，下次遇到该问题，可以考虑如下步骤解决\n\n1. 正常启动windows，并正常且彻底的关机\n2. 尝试启动ubuntu系统\n3. 如未成功，尝试修改硬盘模式为IDE/compatible\n\n","source":"_posts/ubuntu ext4-fs error.md","raw":"---\ntitle: ETX4-fs error（已解决）\ndate: 2018-11-21 01:51:09\ntags: unix OS fs-error\n---\n\n### 前言\n\n再将ubuntu系统装到另一块完整的硬盘上时，由于某些原因，在重新开机以后会报大量的windows系统盘（sda1）ETX4-error，导致开机检测无法通过\n\n由此可能会导致以下开机时bug：\n\n先是：\n\nibus 报 fatal \n\n在一堆failed之后\n\n出现大量的\n\nETX4-fs error\n\n结果：无法开机，system login failed\n\n\n\n### 一、解决方法\n\n考虑到ahci会检测全部硬盘文件系统，ide只会检测当前启动分区\n\n将硬盘从AHCI摸式切换至IDE/compatible, 重启即可！\n\n验证成功，可以成功开机。\n\n\n\n但此方法又有一点不足之处：切换了硬盘模式以后，导致windows 无法正确开机。\n\n\n\n所以问题的根源还是出在windows上。\n\n具体细节无法查明，但考虑到windows是在休眠状态挂起中，或者是在快速启动关机挂起中，很有可能因异常关机导致文件系统异常。\n\n\n\n其二、windows之前有一次更新，更新后未经过 ”***正常完全的关机***“ 步骤，也可能导致文件系统异常\n\n### 二、结论\n\n所以，下次遇到该问题，可以考虑如下步骤解决\n\n1. 正常启动windows，并正常且彻底的关机\n2. 尝试启动ubuntu系统\n3. 如未成功，尝试修改硬盘模式为IDE/compatible\n\n","slug":"ubuntu ext4-fs error","published":1,"updated":"2018-11-21T09:35:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14kh000yo49uwwmf6shh","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>再将ubuntu系统装到另一块完整的硬盘上时，由于某些原因，在重新开机以后会报大量的windows系统盘（sda1）ETX4-error，导致开机检测无法通过</p>\n<p>由此可能会导致以下开机时bug：</p>\n<p>先是：</p>\n<p>ibus 报 fatal </p>\n<p>在一堆failed之后</p>\n<p>出现大量的</p>\n<p>ETX4-fs error</p>\n<p>结果：无法开机，system login failed</p>\n<h3 id=\"一、解决方法\"><a href=\"#一、解决方法\" class=\"headerlink\" title=\"一、解决方法\"></a>一、解决方法</h3><p>考虑到ahci会检测全部硬盘文件系统，ide只会检测当前启动分区</p>\n<p>将硬盘从AHCI摸式切换至IDE/compatible, 重启即可！</p>\n<p>验证成功，可以成功开机。</p>\n<p>但此方法又有一点不足之处：切换了硬盘模式以后，导致windows 无法正确开机。</p>\n<p>所以问题的根源还是出在windows上。</p>\n<p>具体细节无法查明，但考虑到windows是在休眠状态挂起中，或者是在快速启动关机挂起中，很有可能因异常关机导致文件系统异常。</p>\n<p>其二、windows之前有一次更新，更新后未经过 ”<strong><em>正常完全的关机</em></strong>“ 步骤，也可能导致文件系统异常</p>\n<h3 id=\"二、结论\"><a href=\"#二、结论\" class=\"headerlink\" title=\"二、结论\"></a>二、结论</h3><p>所以，下次遇到该问题，可以考虑如下步骤解决</p>\n<ol>\n<li>正常启动windows，并正常且彻底的关机</li>\n<li>尝试启动ubuntu系统</li>\n<li>如未成功，尝试修改硬盘模式为IDE/compatible</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>再将ubuntu系统装到另一块完整的硬盘上时，由于某些原因，在重新开机以后会报大量的windows系统盘（sda1）ETX4-error，导致开机检测无法通过</p>\n<p>由此可能会导致以下开机时bug：</p>\n<p>先是：</p>\n<p>ibus 报 fatal </p>\n<p>在一堆failed之后</p>\n<p>出现大量的</p>\n<p>ETX4-fs error</p>\n<p>结果：无法开机，system login failed</p>\n<h3 id=\"一、解决方法\"><a href=\"#一、解决方法\" class=\"headerlink\" title=\"一、解决方法\"></a>一、解决方法</h3><p>考虑到ahci会检测全部硬盘文件系统，ide只会检测当前启动分区</p>\n<p>将硬盘从AHCI摸式切换至IDE/compatible, 重启即可！</p>\n<p>验证成功，可以成功开机。</p>\n<p>但此方法又有一点不足之处：切换了硬盘模式以后，导致windows 无法正确开机。</p>\n<p>所以问题的根源还是出在windows上。</p>\n<p>具体细节无法查明，但考虑到windows是在休眠状态挂起中，或者是在快速启动关机挂起中，很有可能因异常关机导致文件系统异常。</p>\n<p>其二、windows之前有一次更新，更新后未经过 ”<strong><em>正常完全的关机</em></strong>“ 步骤，也可能导致文件系统异常</p>\n<h3 id=\"二、结论\"><a href=\"#二、结论\" class=\"headerlink\" title=\"二、结论\"></a>二、结论</h3><p>所以，下次遇到该问题，可以考虑如下步骤解决</p>\n<ol>\n<li>正常启动windows，并正常且彻底的关机</li>\n<li>尝试启动ubuntu系统</li>\n<li>如未成功，尝试修改硬盘模式为IDE/compatible</li>\n</ol>\n"},{"title":"unix-1-进程","date":"2018-11-20T17:51:09.000Z","_content":"\n### 1.总线\n\n1. cpu->内存：通过地址总线告诉内存控制器\n2. cpu通过控制总线 发送控制信号（读、写）\n3. cpu 通过数据总线 操作内存\n\n\n\n执行存储在磁盘上的helloworld 可执行文件的过程：\n\n1. 鼠标->信号走usb控制器：从北桥（高速设备）到南桥（低速设备）->cpu\n2. cpu->发控制信号到磁盘控制器（从磁盘读数据）\n3. 读数据过程cpu不参与，磁盘控制器直接读到内存\n\n\n\n**关键词：中断，总线**\n\n\n\n### 2. 操作系统\n\n三大抽象概念：\n\n1.  文件是对I/O设备的抽象，linux中 一切皆文件\n\n                                                      2.  虚拟存储器是对主存和磁盘I/O的抽象\n                                                      3.  ","source":"_posts/unix-1.md","raw":"---\ntitle: unix-1-进程\ndate: 2018-11-21 01:51:09\ntags: unix OS \n---\n\n### 1.总线\n\n1. cpu->内存：通过地址总线告诉内存控制器\n2. cpu通过控制总线 发送控制信号（读、写）\n3. cpu 通过数据总线 操作内存\n\n\n\n执行存储在磁盘上的helloworld 可执行文件的过程：\n\n1. 鼠标->信号走usb控制器：从北桥（高速设备）到南桥（低速设备）->cpu\n2. cpu->发控制信号到磁盘控制器（从磁盘读数据）\n3. 读数据过程cpu不参与，磁盘控制器直接读到内存\n\n\n\n**关键词：中断，总线**\n\n\n\n### 2. 操作系统\n\n三大抽象概念：\n\n1.  文件是对I/O设备的抽象，linux中 一切皆文件\n\n                                                      2.  虚拟存储器是对主存和磁盘I/O的抽象\n                                                      3.  ","slug":"unix-1","published":1,"updated":"2018-11-20T23:09:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14ki0010o49ue6ltxzuf","content":"<h3 id=\"1-总线\"><a href=\"#1-总线\" class=\"headerlink\" title=\"1.总线\"></a>1.总线</h3><ol>\n<li>cpu-&gt;内存：通过地址总线告诉内存控制器</li>\n<li>cpu通过控制总线 发送控制信号（读、写）</li>\n<li>cpu 通过数据总线 操作内存</li>\n</ol>\n<p>执行存储在磁盘上的helloworld 可执行文件的过程：</p>\n<ol>\n<li>鼠标-&gt;信号走usb控制器：从北桥（高速设备）到南桥（低速设备）-&gt;cpu</li>\n<li>cpu-&gt;发控制信号到磁盘控制器（从磁盘读数据）</li>\n<li>读数据过程cpu不参与，磁盘控制器直接读到内存</li>\n</ol>\n<p><strong>关键词：中断，总线</strong></p>\n<h3 id=\"2-操作系统\"><a href=\"#2-操作系统\" class=\"headerlink\" title=\"2. 操作系统\"></a>2. 操作系统</h3><p>三大抽象概念：</p>\n<ol>\n<li><p>文件是对I/O设备的抽象，linux中 一切皆文件</p>\n<pre><code>2.  虚拟存储器是对主存和磁盘I/O的抽象\n3.  \n</code></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-总线\"><a href=\"#1-总线\" class=\"headerlink\" title=\"1.总线\"></a>1.总线</h3><ol>\n<li>cpu-&gt;内存：通过地址总线告诉内存控制器</li>\n<li>cpu通过控制总线 发送控制信号（读、写）</li>\n<li>cpu 通过数据总线 操作内存</li>\n</ol>\n<p>执行存储在磁盘上的helloworld 可执行文件的过程：</p>\n<ol>\n<li>鼠标-&gt;信号走usb控制器：从北桥（高速设备）到南桥（低速设备）-&gt;cpu</li>\n<li>cpu-&gt;发控制信号到磁盘控制器（从磁盘读数据）</li>\n<li>读数据过程cpu不参与，磁盘控制器直接读到内存</li>\n</ol>\n<p><strong>关键词：中断，总线</strong></p>\n<h3 id=\"2-操作系统\"><a href=\"#2-操作系统\" class=\"headerlink\" title=\"2. 操作系统\"></a>2. 操作系统</h3><p>三大抽象概念：</p>\n<ol>\n<li><p>文件是对I/O设备的抽象，linux中 一切皆文件</p>\n<pre><code>2.  虚拟存储器是对主存和磁盘I/O的抽象\n3.  \n</code></pre></li>\n</ol>\n"},{"title":"vue_vs_jquery","date":"2018-11-25T19:20:34.000Z","_content":"\n### 1. 如何在动态生成的标签元素上绑定事件\n\njquery：\n\n```js\n$().appendTo().bind()\n```\n\nVUE:\n\n写成组件，不推荐在已经渲染好的页面上做dom修改\n\n```js\n<component :is=\"item.component\" v-for=\"item in items\" style=\"margin-button: 10px;\" @rainData=\"rainData\"></component>\n```\n\n点击事件生成组件即可！","source":"_posts/vue-vs-jquery.md","raw":"---\ntitle: vue_vs_jquery\ndate: 2018-11-26 03:20:34\ntags: vuejs\n---\n\n### 1. 如何在动态生成的标签元素上绑定事件\n\njquery：\n\n```js\n$().appendTo().bind()\n```\n\nVUE:\n\n写成组件，不推荐在已经渲染好的页面上做dom修改\n\n```js\n<component :is=\"item.component\" v-for=\"item in items\" style=\"margin-button: 10px;\" @rainData=\"rainData\"></component>\n```\n\n点击事件生成组件即可！","slug":"vue-vs-jquery","published":1,"updated":"2018-11-25T21:08:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14kj0011o49ul8emd7un","content":"<h3 id=\"1-如何在动态生成的标签元素上绑定事件\"><a href=\"#1-如何在动态生成的标签元素上绑定事件\" class=\"headerlink\" title=\"1. 如何在动态生成的标签元素上绑定事件\"></a>1. 如何在动态生成的标签元素上绑定事件</h3><p>jquery：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().appendTo().bind()</span><br></pre></td></tr></table></figure>\n<p>VUE:</p>\n<p>写成组件，不推荐在已经渲染好的页面上做dom修改</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;component :is=<span class=\"string\">\"item.component\"</span> v-<span class=\"keyword\">for</span>=<span class=\"string\">\"item in items\"</span> style=<span class=\"string\">\"margin-button: 10px;\"</span> @rainData=<span class=\"string\">\"rainData\"</span>&gt;&lt;/component&gt;</span><br></pre></td></tr></table></figure>\n<p>点击事件生成组件即可！</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-如何在动态生成的标签元素上绑定事件\"><a href=\"#1-如何在动态生成的标签元素上绑定事件\" class=\"headerlink\" title=\"1. 如何在动态生成的标签元素上绑定事件\"></a>1. 如何在动态生成的标签元素上绑定事件</h3><p>jquery：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$().appendTo().bind()</span><br></pre></td></tr></table></figure>\n<p>VUE:</p>\n<p>写成组件，不推荐在已经渲染好的页面上做dom修改</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;component :is=<span class=\"string\">\"item.component\"</span> v-<span class=\"keyword\">for</span>=<span class=\"string\">\"item in items\"</span> style=<span class=\"string\">\"margin-button: 10px;\"</span> @rainData=<span class=\"string\">\"rainData\"</span>&gt;&lt;/component&gt;</span><br></pre></td></tr></table></figure>\n<p>点击事件生成组件即可！</p>\n"},{"title":"vue1-介绍","date":"2018-11-24T20:51:09.000Z","_content":"\n### 简介\n\n\n\nmvvm 框架，容易上手，小巧\n\nhtml + json（属性方法） ，new vue obj \n\n\n\n### 一、概念介绍\n\n模块化：从代码的角度，复用代码\n\n组件化：从UI界面角度，复用ui元素\n\n便利！\n\nvue：.vue模板（结构template，行为script，样式style），component（），extends（）\n\nreact：无模板，组件即js（template.js, scrpt.js ,style.js）：es6+es7 学！！\n\n\n\nMVC：view（页面） ==》controller（业务逻辑，不涉及数据操作） ==》model（数据元操作curd）\n\n\n\nMVVM（仅仅前端VIEW层的开发思想）：M（每个页面的post get数据）<=\\=>VM（调度，双向绑定）<=\\=> V（页面）；\n\n### 二、vue指令\n\nel: 基本上就是选择器, **不同于 Vue 1.x，所有的挂载元素会被 Vue 生成的 DOM 替换。因此不推荐挂载 root 实例到 `<html>`或者 `<body> `上**\n\nv-cloak：解决差值表达式闪烁。网速慢或者差值表达式在**js脚本执行前**被加载时，浏览器端可以查看到差值表达式，涉及用户体验及安全问题，需注意！！\n\nv-text：等于差值表达式，但是作为HTML标签属性可很好的解决如上问题！！但是不具有**差值表达式**易于编辑（前后加内容，如：`年龄：{{age}}`）的优点，以及有会覆盖标签元素内部的内容的缺点！！\n\n**注：差值表达式和v-text都不能输出数据中的标签以及样式，会被转义为正常字符串！！！！**\n\nv-html：可解决如上问题，输出为html。（便于展示一些已排版文章数据）\n\nv-bind: 用于绑定属性的指令（title，display，input...等）`v-bind:title=\"变量名\"`\n\n**注：可简写为`:title` , 且v-bind中可写js运算表达式（字符串+字符串）！！！**\n\nv-on：绑定事件，类似$().on()   。v-on:click=\"变量\" `@click`\n\n```js\nnew vue({\n    el:'#app',\n    data:{\n        \n    },\n    methods:{\n        lang(){\n            \n        }\n        \n    }\n})\n```\n\n\n\n","source":"_posts/vue1-介绍.md","raw":"---\ntitle: vue1-介绍\ndate: 2018-11-25 04:51:09\ntags: vuejs\n---\n\n### 简介\n\n\n\nmvvm 框架，容易上手，小巧\n\nhtml + json（属性方法） ，new vue obj \n\n\n\n### 一、概念介绍\n\n模块化：从代码的角度，复用代码\n\n组件化：从UI界面角度，复用ui元素\n\n便利！\n\nvue：.vue模板（结构template，行为script，样式style），component（），extends（）\n\nreact：无模板，组件即js（template.js, scrpt.js ,style.js）：es6+es7 学！！\n\n\n\nMVC：view（页面） ==》controller（业务逻辑，不涉及数据操作） ==》model（数据元操作curd）\n\n\n\nMVVM（仅仅前端VIEW层的开发思想）：M（每个页面的post get数据）<=\\=>VM（调度，双向绑定）<=\\=> V（页面）；\n\n### 二、vue指令\n\nel: 基本上就是选择器, **不同于 Vue 1.x，所有的挂载元素会被 Vue 生成的 DOM 替换。因此不推荐挂载 root 实例到 `<html>`或者 `<body> `上**\n\nv-cloak：解决差值表达式闪烁。网速慢或者差值表达式在**js脚本执行前**被加载时，浏览器端可以查看到差值表达式，涉及用户体验及安全问题，需注意！！\n\nv-text：等于差值表达式，但是作为HTML标签属性可很好的解决如上问题！！但是不具有**差值表达式**易于编辑（前后加内容，如：`年龄：{{age}}`）的优点，以及有会覆盖标签元素内部的内容的缺点！！\n\n**注：差值表达式和v-text都不能输出数据中的标签以及样式，会被转义为正常字符串！！！！**\n\nv-html：可解决如上问题，输出为html。（便于展示一些已排版文章数据）\n\nv-bind: 用于绑定属性的指令（title，display，input...等）`v-bind:title=\"变量名\"`\n\n**注：可简写为`:title` , 且v-bind中可写js运算表达式（字符串+字符串）！！！**\n\nv-on：绑定事件，类似$().on()   。v-on:click=\"变量\" `@click`\n\n```js\nnew vue({\n    el:'#app',\n    data:{\n        \n    },\n    methods:{\n        lang(){\n            \n        }\n        \n    }\n})\n```\n\n\n\n","slug":"vue1-介绍","published":1,"updated":"2018-11-25T19:20:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14km0014o49u47f0nmji","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>mvvm 框架，容易上手，小巧</p>\n<p>html + json（属性方法） ，new vue obj </p>\n<h3 id=\"一、概念介绍\"><a href=\"#一、概念介绍\" class=\"headerlink\" title=\"一、概念介绍\"></a>一、概念介绍</h3><p>模块化：从代码的角度，复用代码</p>\n<p>组件化：从UI界面角度，复用ui元素</p>\n<p>便利！</p>\n<p>vue：.vue模板（结构template，行为script，样式style），component（），extends（）</p>\n<p>react：无模板，组件即js（template.js, scrpt.js ,style.js）：es6+es7 学！！</p>\n<p>MVC：view（页面） ==》controller（业务逻辑，不涉及数据操作） ==》model（数据元操作curd）</p>\n<p>MVVM（仅仅前端VIEW层的开发思想）：M（每个页面的post get数据）&lt;=\\=&gt;VM（调度，双向绑定）&lt;=\\=&gt; V（页面）；</p>\n<h3 id=\"二、vue指令\"><a href=\"#二、vue指令\" class=\"headerlink\" title=\"二、vue指令\"></a>二、vue指令</h3><p>el: 基本上就是选择器, <strong>不同于 Vue 1.x，所有的挂载元素会被 Vue 生成的 DOM 替换。因此不推荐挂载 root 实例到 <code>&lt;html&gt;</code>或者 <code>&lt;body&gt;</code>上</strong></p>\n<p>v-cloak：解决差值表达式闪烁。网速慢或者差值表达式在<strong>js脚本执行前</strong>被加载时，浏览器端可以查看到差值表达式，涉及用户体验及安全问题，需注意！！</p>\n<p>v-text：等于差值表达式，但是作为HTML标签属性可很好的解决如上问题！！但是不具有<strong>差值表达式</strong>易于编辑（前后加内容，如：<code>年龄：</code>）的优点，以及有会覆盖标签元素内部的内容的缺点！！</p>\n<p><strong>注：差值表达式和v-text都不能输出数据中的标签以及样式，会被转义为正常字符串！！！！</strong></p>\n<p>v-html：可解决如上问题，输出为html。（便于展示一些已排版文章数据）</p>\n<p>v-bind: 用于绑定属性的指令（title，display，input…等）<code>v-bind:title=&quot;变量名&quot;</code></p>\n<p><strong>注：可简写为<code>:title</code> , 且v-bind中可写js运算表达式（字符串+字符串）！！！</strong></p>\n<p>v-on：绑定事件，类似$().on()   。v-on:click=”变量” <code>@click</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">'#app'</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods:&#123;</span><br><span class=\"line\">        lang()&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>mvvm 框架，容易上手，小巧</p>\n<p>html + json（属性方法） ，new vue obj </p>\n<h3 id=\"一、概念介绍\"><a href=\"#一、概念介绍\" class=\"headerlink\" title=\"一、概念介绍\"></a>一、概念介绍</h3><p>模块化：从代码的角度，复用代码</p>\n<p>组件化：从UI界面角度，复用ui元素</p>\n<p>便利！</p>\n<p>vue：.vue模板（结构template，行为script，样式style），component（），extends（）</p>\n<p>react：无模板，组件即js（template.js, scrpt.js ,style.js）：es6+es7 学！！</p>\n<p>MVC：view（页面） ==》controller（业务逻辑，不涉及数据操作） ==》model（数据元操作curd）</p>\n<p>MVVM（仅仅前端VIEW层的开发思想）：M（每个页面的post get数据）&lt;=\\=&gt;VM（调度，双向绑定）&lt;=\\=&gt; V（页面）；</p>\n<h3 id=\"二、vue指令\"><a href=\"#二、vue指令\" class=\"headerlink\" title=\"二、vue指令\"></a>二、vue指令</h3><p>el: 基本上就是选择器, <strong>不同于 Vue 1.x，所有的挂载元素会被 Vue 生成的 DOM 替换。因此不推荐挂载 root 实例到 <code>&lt;html&gt;</code>或者 <code>&lt;body&gt;</code>上</strong></p>\n<p>v-cloak：解决差值表达式闪烁。网速慢或者差值表达式在<strong>js脚本执行前</strong>被加载时，浏览器端可以查看到差值表达式，涉及用户体验及安全问题，需注意！！</p>\n<p>v-text：等于差值表达式，但是作为HTML标签属性可很好的解决如上问题！！但是不具有<strong>差值表达式</strong>易于编辑（前后加内容，如：<code>年龄：</code>）的优点，以及有会覆盖标签元素内部的内容的缺点！！</p>\n<p><strong>注：差值表达式和v-text都不能输出数据中的标签以及样式，会被转义为正常字符串！！！！</strong></p>\n<p>v-html：可解决如上问题，输出为html。（便于展示一些已排版文章数据）</p>\n<p>v-bind: 用于绑定属性的指令（title，display，input…等）<code>v-bind:title=&quot;变量名&quot;</code></p>\n<p><strong>注：可简写为<code>:title</code> , 且v-bind中可写js运算表达式（字符串+字符串）！！！</strong></p>\n<p>v-on：绑定事件，类似$().on()   。v-on:click=”变量” <code>@click</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">'#app'</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods:&#123;</span><br><span class=\"line\">        lang()&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n"},{"title":"如何让nodejs高效","date":"2018-11-22T20:51:09.000Z","_content":"\n### 1. __dirname\n\n__dirname追加了自身的目录路径，一般这样做的好处是，可以避免文件的混乱调用\n\n\n\n### 2. **通配符\n\n```\nsrc/**/*.js\n```\n\n该语句匹配`src`目录及其子目录下的所有`.js`文件\n\n\n\n### 3. exports 和 module.exports\n\n如果要对外暴露属性或方法，就用exports就行，要暴露对象(类似class，包含了很多属性和方法)，就用module.exports\n\n\n\n### 4. redis 用作session 非常便利\n\n","source":"_posts/如何让nodejs高效.md","raw":"---\ntitle: 如何让nodejs高效\ndate: 2018-11-23 04:51:09\ntags: nodejs\n---\n\n### 1. __dirname\n\n__dirname追加了自身的目录路径，一般这样做的好处是，可以避免文件的混乱调用\n\n\n\n### 2. **通配符\n\n```\nsrc/**/*.js\n```\n\n该语句匹配`src`目录及其子目录下的所有`.js`文件\n\n\n\n### 3. exports 和 module.exports\n\n如果要对外暴露属性或方法，就用exports就行，要暴露对象(类似class，包含了很多属性和方法)，就用module.exports\n\n\n\n### 4. redis 用作session 非常便利\n\n","slug":"如何让nodejs高效","published":1,"updated":"2018-11-25T21:12:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14ko0015o49uzn7d170d","content":"<h3 id=\"1-dirname\"><a href=\"#1-dirname\" class=\"headerlink\" title=\"1. __dirname\"></a>1. __dirname</h3><p>__dirname追加了自身的目录路径，一般这样做的好处是，可以避免文件的混乱调用</p>\n<h3 id=\"2-通配符\"><a href=\"#2-通配符\" class=\"headerlink\" title=\"2. **通配符\"></a>2. **通配符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src/**/*.js</span><br></pre></td></tr></table></figure>\n<p>该语句匹配<code>src</code>目录及其子目录下的所有<code>.js</code>文件</p>\n<h3 id=\"3-exports-和-module-exports\"><a href=\"#3-exports-和-module-exports\" class=\"headerlink\" title=\"3. exports 和 module.exports\"></a>3. exports 和 module.exports</h3><p>如果要对外暴露属性或方法，就用exports就行，要暴露对象(类似class，包含了很多属性和方法)，就用module.exports</p>\n<h3 id=\"4-redis-用作session-非常便利\"><a href=\"#4-redis-用作session-非常便利\" class=\"headerlink\" title=\"4. redis 用作session 非常便利\"></a>4. redis 用作session 非常便利</h3>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-dirname\"><a href=\"#1-dirname\" class=\"headerlink\" title=\"1. __dirname\"></a>1. __dirname</h3><p>__dirname追加了自身的目录路径，一般这样做的好处是，可以避免文件的混乱调用</p>\n<h3 id=\"2-通配符\"><a href=\"#2-通配符\" class=\"headerlink\" title=\"2. **通配符\"></a>2. **通配符</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src/**/*.js</span><br></pre></td></tr></table></figure>\n<p>该语句匹配<code>src</code>目录及其子目录下的所有<code>.js</code>文件</p>\n<h3 id=\"3-exports-和-module-exports\"><a href=\"#3-exports-和-module-exports\" class=\"headerlink\" title=\"3. exports 和 module.exports\"></a>3. exports 和 module.exports</h3><p>如果要对外暴露属性或方法，就用exports就行，要暴露对象(类似class，包含了很多属性和方法)，就用module.exports</p>\n<h3 id=\"4-redis-用作session-非常便利\"><a href=\"#4-redis-用作session-非常便利\" class=\"headerlink\" title=\"4. redis 用作session 非常便利\"></a>4. redis 用作session 非常便利</h3>"},{"title":"终端优化1-仓库备份","date":"2018-11-21T17:51:09.000Z","_content":"\n### 前言\n\n频繁的切换操作平台以及频繁的重装系统使得不断重复的配置**shell 编译器 环境变量**成为一件令人厌烦的事情，但拒绝接受默认配置是我最后的倔强。所以按目前来看，把配置文件同步到远程仓库里是一件很有意思的事情！\n\n\n\n*（具体操作步骤参考知乎-韦易笑）*\n\n\n\n### 一、构建你的配置文件夹\n\n在github上新建一个叫config 的仓库，把它clone到你的~/.local/目录下。这个文件夹就是你的配置文件夹！\n\n\n\n### 二、构建你的自动部署文件bootstrap.sh\n\n这个脚本将会建立必要的配置文件，初始化你的设置，最重要的是运行只要一行就可以完成部署！！！\n\n\n\n### 三、构建你的配置通用文件init.sh\n\n考虑到你的新机器上需要独特的配置和新的环境变量，如果**直接覆盖~/.bashrc**是一件很不明智的做法！更好的做法是构建一个通用配置文件init.sh，这样本地化的配置不会被污染，你的配置仓库也不会被污染。\n\n而部署该配置只需要使用**bootstrap.sh**在**~/.bashrc**末尾添加一句source执行语句\n\n```bash\nsource ~/.local/config/init.sh\n```\n\n","source":"_posts/终端优化1-仓库备份.md","raw":"---\ntitle: 终端优化1-仓库备份\ndate: 2018-11-22 01:51:09\ntags: unix OS \n---\n\n### 前言\n\n频繁的切换操作平台以及频繁的重装系统使得不断重复的配置**shell 编译器 环境变量**成为一件令人厌烦的事情，但拒绝接受默认配置是我最后的倔强。所以按目前来看，把配置文件同步到远程仓库里是一件很有意思的事情！\n\n\n\n*（具体操作步骤参考知乎-韦易笑）*\n\n\n\n### 一、构建你的配置文件夹\n\n在github上新建一个叫config 的仓库，把它clone到你的~/.local/目录下。这个文件夹就是你的配置文件夹！\n\n\n\n### 二、构建你的自动部署文件bootstrap.sh\n\n这个脚本将会建立必要的配置文件，初始化你的设置，最重要的是运行只要一行就可以完成部署！！！\n\n\n\n### 三、构建你的配置通用文件init.sh\n\n考虑到你的新机器上需要独特的配置和新的环境变量，如果**直接覆盖~/.bashrc**是一件很不明智的做法！更好的做法是构建一个通用配置文件init.sh，这样本地化的配置不会被污染，你的配置仓库也不会被污染。\n\n而部署该配置只需要使用**bootstrap.sh**在**~/.bashrc**末尾添加一句source执行语句\n\n```bash\nsource ~/.local/config/init.sh\n```\n\n","slug":"终端优化1-仓库备份","published":1,"updated":"2018-11-22T09:15:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14kr0017o49upyz2b6fy","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>频繁的切换操作平台以及频繁的重装系统使得不断重复的配置<strong>shell 编译器 环境变量</strong>成为一件令人厌烦的事情，但拒绝接受默认配置是我最后的倔强。所以按目前来看，把配置文件同步到远程仓库里是一件很有意思的事情！</p>\n<p><em>（具体操作步骤参考知乎-韦易笑）</em></p>\n<h3 id=\"一、构建你的配置文件夹\"><a href=\"#一、构建你的配置文件夹\" class=\"headerlink\" title=\"一、构建你的配置文件夹\"></a>一、构建你的配置文件夹</h3><p>在github上新建一个叫config 的仓库，把它clone到你的~/.local/目录下。这个文件夹就是你的配置文件夹！</p>\n<h3 id=\"二、构建你的自动部署文件bootstrap-sh\"><a href=\"#二、构建你的自动部署文件bootstrap-sh\" class=\"headerlink\" title=\"二、构建你的自动部署文件bootstrap.sh\"></a>二、构建你的自动部署文件bootstrap.sh</h3><p>这个脚本将会建立必要的配置文件，初始化你的设置，最重要的是运行只要一行就可以完成部署！！！</p>\n<h3 id=\"三、构建你的配置通用文件init-sh\"><a href=\"#三、构建你的配置通用文件init-sh\" class=\"headerlink\" title=\"三、构建你的配置通用文件init.sh\"></a>三、构建你的配置通用文件init.sh</h3><p>考虑到你的新机器上需要独特的配置和新的环境变量，如果<strong>直接覆盖~/.bashrc</strong>是一件很不明智的做法！更好的做法是构建一个通用配置文件init.sh，这样本地化的配置不会被污染，你的配置仓库也不会被污染。</p>\n<p>而部署该配置只需要使用<strong>bootstrap.sh</strong>在<strong>~/.bashrc</strong>末尾添加一句source执行语句</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.<span class=\"built_in\">local</span>/config/init.sh</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>频繁的切换操作平台以及频繁的重装系统使得不断重复的配置<strong>shell 编译器 环境变量</strong>成为一件令人厌烦的事情，但拒绝接受默认配置是我最后的倔强。所以按目前来看，把配置文件同步到远程仓库里是一件很有意思的事情！</p>\n<p><em>（具体操作步骤参考知乎-韦易笑）</em></p>\n<h3 id=\"一、构建你的配置文件夹\"><a href=\"#一、构建你的配置文件夹\" class=\"headerlink\" title=\"一、构建你的配置文件夹\"></a>一、构建你的配置文件夹</h3><p>在github上新建一个叫config 的仓库，把它clone到你的~/.local/目录下。这个文件夹就是你的配置文件夹！</p>\n<h3 id=\"二、构建你的自动部署文件bootstrap-sh\"><a href=\"#二、构建你的自动部署文件bootstrap-sh\" class=\"headerlink\" title=\"二、构建你的自动部署文件bootstrap.sh\"></a>二、构建你的自动部署文件bootstrap.sh</h3><p>这个脚本将会建立必要的配置文件，初始化你的设置，最重要的是运行只要一行就可以完成部署！！！</p>\n<h3 id=\"三、构建你的配置通用文件init-sh\"><a href=\"#三、构建你的配置通用文件init-sh\" class=\"headerlink\" title=\"三、构建你的配置通用文件init.sh\"></a>三、构建你的配置通用文件init.sh</h3><p>考虑到你的新机器上需要独特的配置和新的环境变量，如果<strong>直接覆盖~/.bashrc</strong>是一件很不明智的做法！更好的做法是构建一个通用配置文件init.sh，这样本地化的配置不会被污染，你的配置仓库也不会被污染。</p>\n<p>而部署该配置只需要使用<strong>bootstrap.sh</strong>在<strong>~/.bashrc</strong>末尾添加一句source执行语句</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.<span class=\"built_in\">local</span>/config/init.sh</span><br></pre></td></tr></table></figure>\n"},{"title":"终端优化2-自动路径切换","date":"2018-11-21T17:51:09.000Z","_content":"\n### 前言\n\n另一件使人十分反感的一件事就是当我们使用终端时，不免在各种路径中反复切换，明明刚刚才去过的路径，仍需要cd 完整路径，或者tab tab tab...有没有什么办法可以减轻这种烦躁？\n\n\n\n*（具体操作步骤参考知乎-韦易笑）*\n\n\n\n### 一、z.sh\n\n建议把z.sh放到之前我们讲过的config仓库中，随同部署。利用`init.sh`在bashrc中加入：\n\n（下载地址：https://github.com/rupa/z/blob/master/z.sh）\n\n```bash\nsource ~/.local/config/utli/z.sh\n```\n\n\n\n### 二、使用\n\nz命令会列出你去过的所有路径并给出权重（访问频度）\n\nz ccc 会跳转到路劲中含有ccc字符串的路径\n\nz 支持多关键字：z xxx ccc vvv，匹配顺序是从左到右 \\*xxx\\*/\\*ccc\\*/\\*vvv\\*\n\nz -l src 查看所有包含src的路径和权重！！\n\n\n\n一般使用起来 一般是 **z+倒数第二级目录关键字 +空格+ 最后一级目录关键字**\n\n```bash\nz v src 可以跳转到如下路径：\nvim/src\n```\n\n\n\n\n\n\n\n\n\n","source":"_posts/终端优化2-自动路径切换.md","raw":"---\ntitle: 终端优化2-自动路径切换\ndate: 2018-11-22 01:51:09\ntags: unix OS zsh\n---\n\n### 前言\n\n另一件使人十分反感的一件事就是当我们使用终端时，不免在各种路径中反复切换，明明刚刚才去过的路径，仍需要cd 完整路径，或者tab tab tab...有没有什么办法可以减轻这种烦躁？\n\n\n\n*（具体操作步骤参考知乎-韦易笑）*\n\n\n\n### 一、z.sh\n\n建议把z.sh放到之前我们讲过的config仓库中，随同部署。利用`init.sh`在bashrc中加入：\n\n（下载地址：https://github.com/rupa/z/blob/master/z.sh）\n\n```bash\nsource ~/.local/config/utli/z.sh\n```\n\n\n\n### 二、使用\n\nz命令会列出你去过的所有路径并给出权重（访问频度）\n\nz ccc 会跳转到路劲中含有ccc字符串的路径\n\nz 支持多关键字：z xxx ccc vvv，匹配顺序是从左到右 \\*xxx\\*/\\*ccc\\*/\\*vvv\\*\n\nz -l src 查看所有包含src的路径和权重！！\n\n\n\n一般使用起来 一般是 **z+倒数第二级目录关键字 +空格+ 最后一级目录关键字**\n\n```bash\nz v src 可以跳转到如下路径：\nvim/src\n```\n\n\n\n\n\n\n\n\n\n","slug":"终端优化2-自动路径切换","published":1,"updated":"2018-11-25T21:15:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14ks0019o49uppze5rh7","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>另一件使人十分反感的一件事就是当我们使用终端时，不免在各种路径中反复切换，明明刚刚才去过的路径，仍需要cd 完整路径，或者tab tab tab…有没有什么办法可以减轻这种烦躁？</p>\n<p><em>（具体操作步骤参考知乎-韦易笑）</em></p>\n<h3 id=\"一、z-sh\"><a href=\"#一、z-sh\" class=\"headerlink\" title=\"一、z.sh\"></a>一、z.sh</h3><p>建议把z.sh放到之前我们讲过的config仓库中，随同部署。利用<code>init.sh</code>在bashrc中加入：</p>\n<p>（下载地址：<a href=\"https://github.com/rupa/z/blob/master/z.sh）\" target=\"_blank\" rel=\"noopener\">https://github.com/rupa/z/blob/master/z.sh）</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.<span class=\"built_in\">local</span>/config/utli/z.sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"二、使用\"><a href=\"#二、使用\" class=\"headerlink\" title=\"二、使用\"></a>二、使用</h3><p>z命令会列出你去过的所有路径并给出权重（访问频度）</p>\n<p>z ccc 会跳转到路劲中含有ccc字符串的路径</p>\n<p>z 支持多关键字：z xxx ccc vvv，匹配顺序是从左到右 *xxx*/*ccc*/*vvv*</p>\n<p>z -l src 查看所有包含src的路径和权重！！</p>\n<p>一般使用起来 一般是 <strong>z+倒数第二级目录关键字 +空格+ 最后一级目录关键字</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">z v src 可以跳转到如下路径：</span><br><span class=\"line\">vim/src</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>另一件使人十分反感的一件事就是当我们使用终端时，不免在各种路径中反复切换，明明刚刚才去过的路径，仍需要cd 完整路径，或者tab tab tab…有没有什么办法可以减轻这种烦躁？</p>\n<p><em>（具体操作步骤参考知乎-韦易笑）</em></p>\n<h3 id=\"一、z-sh\"><a href=\"#一、z-sh\" class=\"headerlink\" title=\"一、z.sh\"></a>一、z.sh</h3><p>建议把z.sh放到之前我们讲过的config仓库中，随同部署。利用<code>init.sh</code>在bashrc中加入：</p>\n<p>（下载地址：<a href=\"https://github.com/rupa/z/blob/master/z.sh）\" target=\"_blank\" rel=\"noopener\">https://github.com/rupa/z/blob/master/z.sh）</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.<span class=\"built_in\">local</span>/config/utli/z.sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"二、使用\"><a href=\"#二、使用\" class=\"headerlink\" title=\"二、使用\"></a>二、使用</h3><p>z命令会列出你去过的所有路径并给出权重（访问频度）</p>\n<p>z ccc 会跳转到路劲中含有ccc字符串的路径</p>\n<p>z 支持多关键字：z xxx ccc vvv，匹配顺序是从左到右 *xxx*/*ccc*/*vvv*</p>\n<p>z -l src 查看所有包含src的路径和权重！！</p>\n<p>一般使用起来 一般是 <strong>z+倒数第二级目录关键字 +空格+ 最后一级目录关键字</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">z v src 可以跳转到如下路径：</span><br><span class=\"line\">vim/src</span><br></pre></td></tr></table></figure>\n"},{"title":"记web开发二三事-18年11月23日","date":"2018-11-22T20:51:09.000Z","_content":"\n### 前言\n\n今天的web开发已非昨日可比，从工程角度来说，相较之前更加的系统规范，但从体验上来说，也更让人挠破头皮。从某种方面来说这是非常令人激动的一件事，但对于新人来说却成为了一件无比复杂的事情。\n\n\n\n早在15年初我就开始接触web开发，简洁的mvc框架加上不算太多的html，css，js，个人可以轻松上手开发出一整套的网页。更是多亏了bootstrap的便利，使得网站前端的开发要轻松上不少。唯一的问题是，特殊的功能呢难以实现，而工程师们大多挣扎在大量重复且令人疲劳的基本代码上。\n\n网站的性能呢更是不比如今，大量冗余的代码，难以更迭的版本，缺少系统的测试以及由于过于直接而间接带来的安全问题。这些都成为了催促着网站工程发生变革的重大因素。\n\n\n\n#### 1. 留言版\n\n在早些年，留言板项目是一个非常好的入门项目。不算复杂的逻辑，简单的sql查询，前端更是没有一个关于美的需求。最大的好处不是简单，而是通过开发一套留言板，初学者们可以清楚的认识到整个web工程的架构体系，对cms系统，mvc框架都能有一个很具体的了解。\n\n\n\n虽然PHP早已走在前列，便利的控制器架构让人们体会到了开发的快感，很不幸的是，前端依旧只是资源的堆砌。node的兴起，三大框架一经出现便迅速占领了市场，在很多工程开发者眼里，前端也不再是那个苦逼的码农，全栈工程师也成了一句调侃。\n\n\n\n前端开发方兴未艾，朝气蓬勃，可随之而来的便是难度和门槛的提升。\n\n旧标准的迅速淘汰催促着开发者去不断学习前沿技术，留言板更是成为了模块和demo的象征。当我再一次尝试通过留言板来更新我那过时的技术，我发现真正难的早已不是留言板本身，从自动化项目的构建，数据的绑定，模板文件的渲染以及各种工程性质的测试，使得这个项目本身已经庞大无比，再也不是那个小巧的精致的典型案例。\n\n而留言板本身，已经被压缩成工程化的模块组装，资源文件的压缩，以及打包部署. 流水线般精美的作业，让我不得不再次感叹技术变化的竟如此迅速。\n\n\n\n#### 2. 职业化\n\n组件研发已成为大公司It部门必不可少的工作，对开发者的需求量也大大增多，对人才的要求更是节节高升。如今需要的不再是踏实肯干的程序员，而是能高效完成开发的工程师。开发者们有更多的时间可以用来展望以及探索，不再被局限在小小的浏览器的开发者工具里。\n\n市场需要的是能带领团队前进的人，他们基础扎实，认真负责，善于团队分工与合作。个人项目已不再有代表性，对工程的理解才是提高自身价值的核心。走进这个行业将成为一件困难的事，但对于程序员来说，对技术的新鲜感与好奇，可能依旧会是他们成长的无限动力。\n\n\n\n### 尾声\n\n机遇带来挑战，未来有无限可能。错过了真正走进这个行业最好的年代，错过了人生最黄金的年纪，可能确实是一场无法弥补的遗憾。但是种一棵树最好的时间仍然是现在，我们需要去做的，不过是走上浪潮，去拥抱技术，浇灌热情，剩下的就交给命运就好。","source":"_posts/记web开发二三事.md","raw":"---\ntitle: 记web开发二三事-18年11月23日\ndate: 2018-11-23 04:51:09\ntags: 杂谈 web开发\n---\n\n### 前言\n\n今天的web开发已非昨日可比，从工程角度来说，相较之前更加的系统规范，但从体验上来说，也更让人挠破头皮。从某种方面来说这是非常令人激动的一件事，但对于新人来说却成为了一件无比复杂的事情。\n\n\n\n早在15年初我就开始接触web开发，简洁的mvc框架加上不算太多的html，css，js，个人可以轻松上手开发出一整套的网页。更是多亏了bootstrap的便利，使得网站前端的开发要轻松上不少。唯一的问题是，特殊的功能呢难以实现，而工程师们大多挣扎在大量重复且令人疲劳的基本代码上。\n\n网站的性能呢更是不比如今，大量冗余的代码，难以更迭的版本，缺少系统的测试以及由于过于直接而间接带来的安全问题。这些都成为了催促着网站工程发生变革的重大因素。\n\n\n\n#### 1. 留言版\n\n在早些年，留言板项目是一个非常好的入门项目。不算复杂的逻辑，简单的sql查询，前端更是没有一个关于美的需求。最大的好处不是简单，而是通过开发一套留言板，初学者们可以清楚的认识到整个web工程的架构体系，对cms系统，mvc框架都能有一个很具体的了解。\n\n\n\n虽然PHP早已走在前列，便利的控制器架构让人们体会到了开发的快感，很不幸的是，前端依旧只是资源的堆砌。node的兴起，三大框架一经出现便迅速占领了市场，在很多工程开发者眼里，前端也不再是那个苦逼的码农，全栈工程师也成了一句调侃。\n\n\n\n前端开发方兴未艾，朝气蓬勃，可随之而来的便是难度和门槛的提升。\n\n旧标准的迅速淘汰催促着开发者去不断学习前沿技术，留言板更是成为了模块和demo的象征。当我再一次尝试通过留言板来更新我那过时的技术，我发现真正难的早已不是留言板本身，从自动化项目的构建，数据的绑定，模板文件的渲染以及各种工程性质的测试，使得这个项目本身已经庞大无比，再也不是那个小巧的精致的典型案例。\n\n而留言板本身，已经被压缩成工程化的模块组装，资源文件的压缩，以及打包部署. 流水线般精美的作业，让我不得不再次感叹技术变化的竟如此迅速。\n\n\n\n#### 2. 职业化\n\n组件研发已成为大公司It部门必不可少的工作，对开发者的需求量也大大增多，对人才的要求更是节节高升。如今需要的不再是踏实肯干的程序员，而是能高效完成开发的工程师。开发者们有更多的时间可以用来展望以及探索，不再被局限在小小的浏览器的开发者工具里。\n\n市场需要的是能带领团队前进的人，他们基础扎实，认真负责，善于团队分工与合作。个人项目已不再有代表性，对工程的理解才是提高自身价值的核心。走进这个行业将成为一件困难的事，但对于程序员来说，对技术的新鲜感与好奇，可能依旧会是他们成长的无限动力。\n\n\n\n### 尾声\n\n机遇带来挑战，未来有无限可能。错过了真正走进这个行业最好的年代，错过了人生最黄金的年纪，可能确实是一场无法弥补的遗憾。但是种一棵树最好的时间仍然是现在，我们需要去做的，不过是走上浪潮，去拥抱技术，浇灌热情，剩下的就交给命运就好。","slug":"记web开发二三事","published":1,"updated":"2018-11-23T15:10:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14kt001bo49u9isuo7gt","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>今天的web开发已非昨日可比，从工程角度来说，相较之前更加的系统规范，但从体验上来说，也更让人挠破头皮。从某种方面来说这是非常令人激动的一件事，但对于新人来说却成为了一件无比复杂的事情。</p>\n<p>早在15年初我就开始接触web开发，简洁的mvc框架加上不算太多的html，css，js，个人可以轻松上手开发出一整套的网页。更是多亏了bootstrap的便利，使得网站前端的开发要轻松上不少。唯一的问题是，特殊的功能呢难以实现，而工程师们大多挣扎在大量重复且令人疲劳的基本代码上。</p>\n<p>网站的性能呢更是不比如今，大量冗余的代码，难以更迭的版本，缺少系统的测试以及由于过于直接而间接带来的安全问题。这些都成为了催促着网站工程发生变革的重大因素。</p>\n<h4 id=\"1-留言版\"><a href=\"#1-留言版\" class=\"headerlink\" title=\"1. 留言版\"></a>1. 留言版</h4><p>在早些年，留言板项目是一个非常好的入门项目。不算复杂的逻辑，简单的sql查询，前端更是没有一个关于美的需求。最大的好处不是简单，而是通过开发一套留言板，初学者们可以清楚的认识到整个web工程的架构体系，对cms系统，mvc框架都能有一个很具体的了解。</p>\n<p>虽然PHP早已走在前列，便利的控制器架构让人们体会到了开发的快感，很不幸的是，前端依旧只是资源的堆砌。node的兴起，三大框架一经出现便迅速占领了市场，在很多工程开发者眼里，前端也不再是那个苦逼的码农，全栈工程师也成了一句调侃。</p>\n<p>前端开发方兴未艾，朝气蓬勃，可随之而来的便是难度和门槛的提升。</p>\n<p>旧标准的迅速淘汰催促着开发者去不断学习前沿技术，留言板更是成为了模块和demo的象征。当我再一次尝试通过留言板来更新我那过时的技术，我发现真正难的早已不是留言板本身，从自动化项目的构建，数据的绑定，模板文件的渲染以及各种工程性质的测试，使得这个项目本身已经庞大无比，再也不是那个小巧的精致的典型案例。</p>\n<p>而留言板本身，已经被压缩成工程化的模块组装，资源文件的压缩，以及打包部署. 流水线般精美的作业，让我不得不再次感叹技术变化的竟如此迅速。</p>\n<h4 id=\"2-职业化\"><a href=\"#2-职业化\" class=\"headerlink\" title=\"2. 职业化\"></a>2. 职业化</h4><p>组件研发已成为大公司It部门必不可少的工作，对开发者的需求量也大大增多，对人才的要求更是节节高升。如今需要的不再是踏实肯干的程序员，而是能高效完成开发的工程师。开发者们有更多的时间可以用来展望以及探索，不再被局限在小小的浏览器的开发者工具里。</p>\n<p>市场需要的是能带领团队前进的人，他们基础扎实，认真负责，善于团队分工与合作。个人项目已不再有代表性，对工程的理解才是提高自身价值的核心。走进这个行业将成为一件困难的事，但对于程序员来说，对技术的新鲜感与好奇，可能依旧会是他们成长的无限动力。</p>\n<h3 id=\"尾声\"><a href=\"#尾声\" class=\"headerlink\" title=\"尾声\"></a>尾声</h3><p>机遇带来挑战，未来有无限可能。错过了真正走进这个行业最好的年代，错过了人生最黄金的年纪，可能确实是一场无法弥补的遗憾。但是种一棵树最好的时间仍然是现在，我们需要去做的，不过是走上浪潮，去拥抱技术，浇灌热情，剩下的就交给命运就好。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>今天的web开发已非昨日可比，从工程角度来说，相较之前更加的系统规范，但从体验上来说，也更让人挠破头皮。从某种方面来说这是非常令人激动的一件事，但对于新人来说却成为了一件无比复杂的事情。</p>\n<p>早在15年初我就开始接触web开发，简洁的mvc框架加上不算太多的html，css，js，个人可以轻松上手开发出一整套的网页。更是多亏了bootstrap的便利，使得网站前端的开发要轻松上不少。唯一的问题是，特殊的功能呢难以实现，而工程师们大多挣扎在大量重复且令人疲劳的基本代码上。</p>\n<p>网站的性能呢更是不比如今，大量冗余的代码，难以更迭的版本，缺少系统的测试以及由于过于直接而间接带来的安全问题。这些都成为了催促着网站工程发生变革的重大因素。</p>\n<h4 id=\"1-留言版\"><a href=\"#1-留言版\" class=\"headerlink\" title=\"1. 留言版\"></a>1. 留言版</h4><p>在早些年，留言板项目是一个非常好的入门项目。不算复杂的逻辑，简单的sql查询，前端更是没有一个关于美的需求。最大的好处不是简单，而是通过开发一套留言板，初学者们可以清楚的认识到整个web工程的架构体系，对cms系统，mvc框架都能有一个很具体的了解。</p>\n<p>虽然PHP早已走在前列，便利的控制器架构让人们体会到了开发的快感，很不幸的是，前端依旧只是资源的堆砌。node的兴起，三大框架一经出现便迅速占领了市场，在很多工程开发者眼里，前端也不再是那个苦逼的码农，全栈工程师也成了一句调侃。</p>\n<p>前端开发方兴未艾，朝气蓬勃，可随之而来的便是难度和门槛的提升。</p>\n<p>旧标准的迅速淘汰催促着开发者去不断学习前沿技术，留言板更是成为了模块和demo的象征。当我再一次尝试通过留言板来更新我那过时的技术，我发现真正难的早已不是留言板本身，从自动化项目的构建，数据的绑定，模板文件的渲染以及各种工程性质的测试，使得这个项目本身已经庞大无比，再也不是那个小巧的精致的典型案例。</p>\n<p>而留言板本身，已经被压缩成工程化的模块组装，资源文件的压缩，以及打包部署. 流水线般精美的作业，让我不得不再次感叹技术变化的竟如此迅速。</p>\n<h4 id=\"2-职业化\"><a href=\"#2-职业化\" class=\"headerlink\" title=\"2. 职业化\"></a>2. 职业化</h4><p>组件研发已成为大公司It部门必不可少的工作，对开发者的需求量也大大增多，对人才的要求更是节节高升。如今需要的不再是踏实肯干的程序员，而是能高效完成开发的工程师。开发者们有更多的时间可以用来展望以及探索，不再被局限在小小的浏览器的开发者工具里。</p>\n<p>市场需要的是能带领团队前进的人，他们基础扎实，认真负责，善于团队分工与合作。个人项目已不再有代表性，对工程的理解才是提高自身价值的核心。走进这个行业将成为一件困难的事，但对于程序员来说，对技术的新鲜感与好奇，可能依旧会是他们成长的无限动力。</p>\n<h3 id=\"尾声\"><a href=\"#尾声\" class=\"headerlink\" title=\"尾声\"></a>尾声</h3><p>机遇带来挑战，未来有无限可能。错过了真正走进这个行业最好的年代，错过了人生最黄金的年纪，可能确实是一场无法弥补的遗憾。但是种一棵树最好的时间仍然是现在，我们需要去做的，不过是走上浪潮，去拥抱技术，浇灌热情，剩下的就交给命运就好。</p>\n"},{"title":"记web开发二三事(二)-web开发2.0-2018年11月25日","date":"2018-11-24T23:51:09.000Z","_content":"\n### 前言\n\n作为一名后端时代的web开发遗老，模板引擎，模板标签，服务端渲染，mvc，jquery这些概念简直深入人心，我很难去理解如今真正意义上的前后端分离，很难去真正意义上工程化前端开发，就在昨天我还在不断埋怨现今复杂而繁琐的开发流程。\n\n\n\n然而事实上，如今的web2.0正是工程界所期望的。彻底脱离数据的前端开发，前端页面渲染，前端已经是一个在浏览器内自成一体的应用，一个完整的app。从由服务器来整合的零碎的资源，到静态的模板页面，再到如今动态的js，连浏览器都开始提供对es6及以上的支持，一切都说明着变革。\n\n\n\n### 一、说说渲染那些事\n\n我所熟悉的是资源文件在服务端，通过对模板标签的解析，整合数据，最终由服务端渲染出一个完整的静态页面，再作为response。采用php模板引擎在后端渲染好页面发送到浏览器，再在页面内使用ajax请求数据在前端再渲染，实现异步刷新，这是曾经的做法。\n\n这种做法虽然成功的实现了前后端分离，但是随着用户交互性需求的增加，前端页面越来越复杂，后端渲染好的数据往往需要反复在前端进行修改，大量的ajax请求带来的dom操作是无比繁琐的，而且很不利于用户体验。\n\n所以，MVVM的前端架构被提了出来。不同与jquery 中由ajax请求回来的数据必须要经由**人工操作DOM元素来实现异步刷新**（因为数据早已被服务器端渲染为静态页面），mvvm希望前端页面是由动态的js所组成的，数据在其中是js对象，所以只要修改js数据对象，dom操作就会**自动完成数据同步**，这样省去了开发者大量用来关心数据的流通的时间。所谓双向绑定，就是解放了开发者对数据的执著，能更专注于复杂的页面逻辑。\n\n\n\n综上，新的框架使得复杂的数据交流代码得以封装和复用，着实提供了很大的便利。\n\n\n\n### 二、前端渲染VS后端渲染\n\n前后端渲染各有好处，但总的来看，前端渲染依旧是要优异不少。\n\n**前端渲染**\n\n优点：减少服务端压力，提高页面性能，可跨平台（可以兼容不同后端技术），比较灵活改变页面数据（无刷新页面）。\n\n缺点：不利于seo（动态js）。\n\n**后端渲染**\n\n优点：利于seo（一方面可以页面静态化，另一方面页面的数据已经渲染了），数据安全性高，无须担心js被用户禁用，比较灵活产生多个页面（创建新页面）。\n\n缺点：服务器负载压力大。\n\n\n\n更何况对于前端的动态js只需要利用浏览器内核生成**静态页面快照**，依旧能被搜索引擎所捕获。\n\n### 三、jquery VS mvvm\n\n这个问题上我觉得，二者并非完全对立。\n\njQuery的选择器（\\$）依赖DOM元素，以操作DOM作为核心功能，为前端开发提供了便利。 \n\nmvvm则是将数据和View完全分离开来了。将DOM操作自动化，实现相互的绑定，可以看做是对之前的前端开发，以及在jquery上的再进一步。\n\n\n\n我个人来看，jQuery的选择器（\\$）依旧在某些方面具有无可比拟的优点，比如对样式的操作。只能说在html5 以及es6 等新标准的作用下，原来的优点如今已经有了更好更方便的选择。在现阶段jquery仍旧是一把锋利的武器，并未完全被淘汰。哪怕再怎么精妙的框架和理念，也离不开最根本的js，我正好觉得，jquery便于理解和操作的选择器封装的恰到好处，**如果现在以及将来我有机会去操作dom来实现原生的一些页面操作（目前来看不太可能了，标准在革新，对dom的操作只会封装起来，越来越少），我依旧会选择jquery。**\n\n\n\n### 尾声\n\n技术的确在进步，但也不应该将其神化。网上一边倒的抛弃浏览器端渲染，抛弃php，抛弃jquery，抛弃DOM，抛弃MVC，鼓吹mvvm，神化双向绑定，这些言论在我这个几天的学习过程中起到了很大的**反作用**。\n\n**为什么没人指出来如今前端的分层机制比起类似Java的oop编程依旧有不小的差距，为什么都在一味地炒作mvvm，就像当年jquery也是，鼓吹隐式迭代，链式编程？这些复杂的概念和特性真的是技术的核心吗？现在的node像是打了无数补丁的visual studio，除了复杂还是复杂，为什么就不能统一一下标准？引入这么多根本搞不清楚的依赖，真的能方便开发吗？遇到问题怎么办谁来解决？谁来维护？我现在学的东西要是又突然变革了然后被废弃了怎么办？为什么没人谈谈轻量化开发？**\n\n一个思想一个概念就能让追随者狂热的发疯，真的不可理喻。","source":"_posts/记web开发二三事(二)-web开发2.0.md","raw":"---\ntitle: 记web开发二三事(二)-web开发2.0-2018年11月25日\ndate: 2018-11-25 07:51:09\ntags: 杂谈 web开发\n---\n\n### 前言\n\n作为一名后端时代的web开发遗老，模板引擎，模板标签，服务端渲染，mvc，jquery这些概念简直深入人心，我很难去理解如今真正意义上的前后端分离，很难去真正意义上工程化前端开发，就在昨天我还在不断埋怨现今复杂而繁琐的开发流程。\n\n\n\n然而事实上，如今的web2.0正是工程界所期望的。彻底脱离数据的前端开发，前端页面渲染，前端已经是一个在浏览器内自成一体的应用，一个完整的app。从由服务器来整合的零碎的资源，到静态的模板页面，再到如今动态的js，连浏览器都开始提供对es6及以上的支持，一切都说明着变革。\n\n\n\n### 一、说说渲染那些事\n\n我所熟悉的是资源文件在服务端，通过对模板标签的解析，整合数据，最终由服务端渲染出一个完整的静态页面，再作为response。采用php模板引擎在后端渲染好页面发送到浏览器，再在页面内使用ajax请求数据在前端再渲染，实现异步刷新，这是曾经的做法。\n\n这种做法虽然成功的实现了前后端分离，但是随着用户交互性需求的增加，前端页面越来越复杂，后端渲染好的数据往往需要反复在前端进行修改，大量的ajax请求带来的dom操作是无比繁琐的，而且很不利于用户体验。\n\n所以，MVVM的前端架构被提了出来。不同与jquery 中由ajax请求回来的数据必须要经由**人工操作DOM元素来实现异步刷新**（因为数据早已被服务器端渲染为静态页面），mvvm希望前端页面是由动态的js所组成的，数据在其中是js对象，所以只要修改js数据对象，dom操作就会**自动完成数据同步**，这样省去了开发者大量用来关心数据的流通的时间。所谓双向绑定，就是解放了开发者对数据的执著，能更专注于复杂的页面逻辑。\n\n\n\n综上，新的框架使得复杂的数据交流代码得以封装和复用，着实提供了很大的便利。\n\n\n\n### 二、前端渲染VS后端渲染\n\n前后端渲染各有好处，但总的来看，前端渲染依旧是要优异不少。\n\n**前端渲染**\n\n优点：减少服务端压力，提高页面性能，可跨平台（可以兼容不同后端技术），比较灵活改变页面数据（无刷新页面）。\n\n缺点：不利于seo（动态js）。\n\n**后端渲染**\n\n优点：利于seo（一方面可以页面静态化，另一方面页面的数据已经渲染了），数据安全性高，无须担心js被用户禁用，比较灵活产生多个页面（创建新页面）。\n\n缺点：服务器负载压力大。\n\n\n\n更何况对于前端的动态js只需要利用浏览器内核生成**静态页面快照**，依旧能被搜索引擎所捕获。\n\n### 三、jquery VS mvvm\n\n这个问题上我觉得，二者并非完全对立。\n\njQuery的选择器（\\$）依赖DOM元素，以操作DOM作为核心功能，为前端开发提供了便利。 \n\nmvvm则是将数据和View完全分离开来了。将DOM操作自动化，实现相互的绑定，可以看做是对之前的前端开发，以及在jquery上的再进一步。\n\n\n\n我个人来看，jQuery的选择器（\\$）依旧在某些方面具有无可比拟的优点，比如对样式的操作。只能说在html5 以及es6 等新标准的作用下，原来的优点如今已经有了更好更方便的选择。在现阶段jquery仍旧是一把锋利的武器，并未完全被淘汰。哪怕再怎么精妙的框架和理念，也离不开最根本的js，我正好觉得，jquery便于理解和操作的选择器封装的恰到好处，**如果现在以及将来我有机会去操作dom来实现原生的一些页面操作（目前来看不太可能了，标准在革新，对dom的操作只会封装起来，越来越少），我依旧会选择jquery。**\n\n\n\n### 尾声\n\n技术的确在进步，但也不应该将其神化。网上一边倒的抛弃浏览器端渲染，抛弃php，抛弃jquery，抛弃DOM，抛弃MVC，鼓吹mvvm，神化双向绑定，这些言论在我这个几天的学习过程中起到了很大的**反作用**。\n\n**为什么没人指出来如今前端的分层机制比起类似Java的oop编程依旧有不小的差距，为什么都在一味地炒作mvvm，就像当年jquery也是，鼓吹隐式迭代，链式编程？这些复杂的概念和特性真的是技术的核心吗？现在的node像是打了无数补丁的visual studio，除了复杂还是复杂，为什么就不能统一一下标准？引入这么多根本搞不清楚的依赖，真的能方便开发吗？遇到问题怎么办谁来解决？谁来维护？我现在学的东西要是又突然变革了然后被废弃了怎么办？为什么没人谈谈轻量化开发？**\n\n一个思想一个概念就能让追随者狂热的发疯，真的不可理喻。","slug":"记web开发二三事(二)-web开发2.0","published":1,"updated":"2018-11-25T01:04:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14ku001do49u7j8b6fub","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>作为一名后端时代的web开发遗老，模板引擎，模板标签，服务端渲染，mvc，jquery这些概念简直深入人心，我很难去理解如今真正意义上的前后端分离，很难去真正意义上工程化前端开发，就在昨天我还在不断埋怨现今复杂而繁琐的开发流程。</p>\n<p>然而事实上，如今的web2.0正是工程界所期望的。彻底脱离数据的前端开发，前端页面渲染，前端已经是一个在浏览器内自成一体的应用，一个完整的app。从由服务器来整合的零碎的资源，到静态的模板页面，再到如今动态的js，连浏览器都开始提供对es6及以上的支持，一切都说明着变革。</p>\n<h3 id=\"一、说说渲染那些事\"><a href=\"#一、说说渲染那些事\" class=\"headerlink\" title=\"一、说说渲染那些事\"></a>一、说说渲染那些事</h3><p>我所熟悉的是资源文件在服务端，通过对模板标签的解析，整合数据，最终由服务端渲染出一个完整的静态页面，再作为response。采用php模板引擎在后端渲染好页面发送到浏览器，再在页面内使用ajax请求数据在前端再渲染，实现异步刷新，这是曾经的做法。</p>\n<p>这种做法虽然成功的实现了前后端分离，但是随着用户交互性需求的增加，前端页面越来越复杂，后端渲染好的数据往往需要反复在前端进行修改，大量的ajax请求带来的dom操作是无比繁琐的，而且很不利于用户体验。</p>\n<p>所以，MVVM的前端架构被提了出来。不同与jquery 中由ajax请求回来的数据必须要经由<strong>人工操作DOM元素来实现异步刷新</strong>（因为数据早已被服务器端渲染为静态页面），mvvm希望前端页面是由动态的js所组成的，数据在其中是js对象，所以只要修改js数据对象，dom操作就会<strong>自动完成数据同步</strong>，这样省去了开发者大量用来关心数据的流通的时间。所谓双向绑定，就是解放了开发者对数据的执著，能更专注于复杂的页面逻辑。</p>\n<p>综上，新的框架使得复杂的数据交流代码得以封装和复用，着实提供了很大的便利。</p>\n<h3 id=\"二、前端渲染VS后端渲染\"><a href=\"#二、前端渲染VS后端渲染\" class=\"headerlink\" title=\"二、前端渲染VS后端渲染\"></a>二、前端渲染VS后端渲染</h3><p>前后端渲染各有好处，但总的来看，前端渲染依旧是要优异不少。</p>\n<p><strong>前端渲染</strong></p>\n<p>优点：减少服务端压力，提高页面性能，可跨平台（可以兼容不同后端技术），比较灵活改变页面数据（无刷新页面）。</p>\n<p>缺点：不利于seo（动态js）。</p>\n<p><strong>后端渲染</strong></p>\n<p>优点：利于seo（一方面可以页面静态化，另一方面页面的数据已经渲染了），数据安全性高，无须担心js被用户禁用，比较灵活产生多个页面（创建新页面）。</p>\n<p>缺点：服务器负载压力大。</p>\n<p>更何况对于前端的动态js只需要利用浏览器内核生成<strong>静态页面快照</strong>，依旧能被搜索引擎所捕获。</p>\n<h3 id=\"三、jquery-VS-mvvm\"><a href=\"#三、jquery-VS-mvvm\" class=\"headerlink\" title=\"三、jquery VS mvvm\"></a>三、jquery VS mvvm</h3><p>这个问题上我觉得，二者并非完全对立。</p>\n<p>jQuery的选择器（\\$）依赖DOM元素，以操作DOM作为核心功能，为前端开发提供了便利。 </p>\n<p>mvvm则是将数据和View完全分离开来了。将DOM操作自动化，实现相互的绑定，可以看做是对之前的前端开发，以及在jquery上的再进一步。</p>\n<p>我个人来看，jQuery的选择器（\\$）依旧在某些方面具有无可比拟的优点，比如对样式的操作。只能说在html5 以及es6 等新标准的作用下，原来的优点如今已经有了更好更方便的选择。在现阶段jquery仍旧是一把锋利的武器，并未完全被淘汰。哪怕再怎么精妙的框架和理念，也离不开最根本的js，我正好觉得，jquery便于理解和操作的选择器封装的恰到好处，<strong>如果现在以及将来我有机会去操作dom来实现原生的一些页面操作（目前来看不太可能了，标准在革新，对dom的操作只会封装起来，越来越少），我依旧会选择jquery。</strong></p>\n<h3 id=\"尾声\"><a href=\"#尾声\" class=\"headerlink\" title=\"尾声\"></a>尾声</h3><p>技术的确在进步，但也不应该将其神化。网上一边倒的抛弃浏览器端渲染，抛弃php，抛弃jquery，抛弃DOM，抛弃MVC，鼓吹mvvm，神化双向绑定，这些言论在我这个几天的学习过程中起到了很大的<strong>反作用</strong>。</p>\n<p><strong>为什么没人指出来如今前端的分层机制比起类似Java的oop编程依旧有不小的差距，为什么都在一味地炒作mvvm，就像当年jquery也是，鼓吹隐式迭代，链式编程？这些复杂的概念和特性真的是技术的核心吗？现在的node像是打了无数补丁的visual studio，除了复杂还是复杂，为什么就不能统一一下标准？引入这么多根本搞不清楚的依赖，真的能方便开发吗？遇到问题怎么办谁来解决？谁来维护？我现在学的东西要是又突然变革了然后被废弃了怎么办？为什么没人谈谈轻量化开发？</strong></p>\n<p>一个思想一个概念就能让追随者狂热的发疯，真的不可理喻。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>作为一名后端时代的web开发遗老，模板引擎，模板标签，服务端渲染，mvc，jquery这些概念简直深入人心，我很难去理解如今真正意义上的前后端分离，很难去真正意义上工程化前端开发，就在昨天我还在不断埋怨现今复杂而繁琐的开发流程。</p>\n<p>然而事实上，如今的web2.0正是工程界所期望的。彻底脱离数据的前端开发，前端页面渲染，前端已经是一个在浏览器内自成一体的应用，一个完整的app。从由服务器来整合的零碎的资源，到静态的模板页面，再到如今动态的js，连浏览器都开始提供对es6及以上的支持，一切都说明着变革。</p>\n<h3 id=\"一、说说渲染那些事\"><a href=\"#一、说说渲染那些事\" class=\"headerlink\" title=\"一、说说渲染那些事\"></a>一、说说渲染那些事</h3><p>我所熟悉的是资源文件在服务端，通过对模板标签的解析，整合数据，最终由服务端渲染出一个完整的静态页面，再作为response。采用php模板引擎在后端渲染好页面发送到浏览器，再在页面内使用ajax请求数据在前端再渲染，实现异步刷新，这是曾经的做法。</p>\n<p>这种做法虽然成功的实现了前后端分离，但是随着用户交互性需求的增加，前端页面越来越复杂，后端渲染好的数据往往需要反复在前端进行修改，大量的ajax请求带来的dom操作是无比繁琐的，而且很不利于用户体验。</p>\n<p>所以，MVVM的前端架构被提了出来。不同与jquery 中由ajax请求回来的数据必须要经由<strong>人工操作DOM元素来实现异步刷新</strong>（因为数据早已被服务器端渲染为静态页面），mvvm希望前端页面是由动态的js所组成的，数据在其中是js对象，所以只要修改js数据对象，dom操作就会<strong>自动完成数据同步</strong>，这样省去了开发者大量用来关心数据的流通的时间。所谓双向绑定，就是解放了开发者对数据的执著，能更专注于复杂的页面逻辑。</p>\n<p>综上，新的框架使得复杂的数据交流代码得以封装和复用，着实提供了很大的便利。</p>\n<h3 id=\"二、前端渲染VS后端渲染\"><a href=\"#二、前端渲染VS后端渲染\" class=\"headerlink\" title=\"二、前端渲染VS后端渲染\"></a>二、前端渲染VS后端渲染</h3><p>前后端渲染各有好处，但总的来看，前端渲染依旧是要优异不少。</p>\n<p><strong>前端渲染</strong></p>\n<p>优点：减少服务端压力，提高页面性能，可跨平台（可以兼容不同后端技术），比较灵活改变页面数据（无刷新页面）。</p>\n<p>缺点：不利于seo（动态js）。</p>\n<p><strong>后端渲染</strong></p>\n<p>优点：利于seo（一方面可以页面静态化，另一方面页面的数据已经渲染了），数据安全性高，无须担心js被用户禁用，比较灵活产生多个页面（创建新页面）。</p>\n<p>缺点：服务器负载压力大。</p>\n<p>更何况对于前端的动态js只需要利用浏览器内核生成<strong>静态页面快照</strong>，依旧能被搜索引擎所捕获。</p>\n<h3 id=\"三、jquery-VS-mvvm\"><a href=\"#三、jquery-VS-mvvm\" class=\"headerlink\" title=\"三、jquery VS mvvm\"></a>三、jquery VS mvvm</h3><p>这个问题上我觉得，二者并非完全对立。</p>\n<p>jQuery的选择器（\\$）依赖DOM元素，以操作DOM作为核心功能，为前端开发提供了便利。 </p>\n<p>mvvm则是将数据和View完全分离开来了。将DOM操作自动化，实现相互的绑定，可以看做是对之前的前端开发，以及在jquery上的再进一步。</p>\n<p>我个人来看，jQuery的选择器（\\$）依旧在某些方面具有无可比拟的优点，比如对样式的操作。只能说在html5 以及es6 等新标准的作用下，原来的优点如今已经有了更好更方便的选择。在现阶段jquery仍旧是一把锋利的武器，并未完全被淘汰。哪怕再怎么精妙的框架和理念，也离不开最根本的js，我正好觉得，jquery便于理解和操作的选择器封装的恰到好处，<strong>如果现在以及将来我有机会去操作dom来实现原生的一些页面操作（目前来看不太可能了，标准在革新，对dom的操作只会封装起来，越来越少），我依旧会选择jquery。</strong></p>\n<h3 id=\"尾声\"><a href=\"#尾声\" class=\"headerlink\" title=\"尾声\"></a>尾声</h3><p>技术的确在进步，但也不应该将其神化。网上一边倒的抛弃浏览器端渲染，抛弃php，抛弃jquery，抛弃DOM，抛弃MVC，鼓吹mvvm，神化双向绑定，这些言论在我这个几天的学习过程中起到了很大的<strong>反作用</strong>。</p>\n<p><strong>为什么没人指出来如今前端的分层机制比起类似Java的oop编程依旧有不小的差距，为什么都在一味地炒作mvvm，就像当年jquery也是，鼓吹隐式迭代，链式编程？这些复杂的概念和特性真的是技术的核心吗？现在的node像是打了无数补丁的visual studio，除了复杂还是复杂，为什么就不能统一一下标准？引入这么多根本搞不清楚的依赖，真的能方便开发吗？遇到问题怎么办谁来解决？谁来维护？我现在学的东西要是又突然变革了然后被废弃了怎么办？为什么没人谈谈轻量化开发？</strong></p>\n<p>一个思想一个概念就能让追随者狂热的发疯，真的不可理喻。</p>\n"},{"title":"js规范-1.变量的声明与定义","date":"2018-11-21T12:31:18.000Z","_content":"\n#### 1 变量提升\n\nJavaScript 中，函数及变量的声明都将被提升到函数的最顶部。 \n\nJavaScript 中，变量可以在使用后声明，也就是变量可以先使用再声明。\n\n**注: JavaScript 只有声明的变量会提升，初始化的不会。**\n\n```js\nvar x = 5; // 初始化 x\nelem = document.getElementById(\"demo\"); // 查找元素 \nelem.innerHTML = x + \" \" + y;           // 显示 x 和 y\nvar y = 7; // 初始化 y\n```\n\n等价于\n\n```js\nvar x = 5; // 初始化 x\nvar y;     // 声明 y\n\nelem = document.getElementById(\"demo\"); // 查找元素\nelem.innerHTML = x + \" \" + y;           // 显示 x 和 y\n\ny = 7;    // 设置 y 为 7\n```\n\n故y值在调用时是未定义变量，undefined\n\n**js中的严格模式strict mode不允许使用未声明变量，故建议在每个作用域开始前声明这些变量，这也是正常的 JavaScript 解析步骤。**\n\n\n\n\n\n**注：js中虽然函数声明和变量声明都会被提升，但是函数会首先被提升，然后才是变量。**\n\n\n\n```js\nvar getName=function(){\n  console.log(2);\n}\n\nfunction getName(){\n  console.log(1);\n}\n\ngetName();\n//结果为2\n```\n\n等价于\n\n```js\n//函数、变量声明提升后\nfunction getName(){    //函数声明提升到顶部\n  console.log(1);\n}\n\nvar getName;    //变量声明提升\ngetName = function(){    //变量赋值依然保留在原来的位置\n  console.log(2);\n}\n\ngetName();    // 最终输出：2\n```\n\n \n\n#### 2 js的解析机制\n\n遇到 script 标签的话 js 就进行**预解析**，将变量 var 和 function 声明提升，但不会执行 function，然后就进入上下文执行，上下文执行还是执行预解析同样操作，直到没有 var  和 function，就开始执行上下文。\n\n\n\n####  3 变量声明的方式及作用域\n\n1. **使用var（最常见）** \n\n 　 var声明的变量可以是全局的（函数外面），也可以是局部的（函数内部）**\n\n​     **注：在函数外面使用var声明一个变量后，再在函数内部使用var再次声明一次并改变其值，函数外面的该变量的值不会发生改变。 **\n\n\n\n2. **使用let**\n\n​       let声明的变量在{}中使用，变量的作用域限制在块级域中（**并不等价于 **函数内的局部变量）\n\n```js\nvar children = buttons.children //用var声明了一个全局变量children，储存buttons的所有子元素 \nfor(var i=0; i<children.length; i++)\n{ \n    children[i].onclick = function(){ //执行点击事件的时候输出对应的第几个按钮 \n        console.log(i)\n    } \n}\n//无论你点击什么，输出结果都是4，因为内存里只存了一个i，这个i的最终运算结果是4\n```\n\n但是如果你把`var i = 0`改成`let i = 0`就可以得到你想要的结果。因为如果你使用let的话，每次循环都是引用的都是不同的i（引用了i变量的不同实例）。\n\n#### 4 一条语句多个变量\n\n```js\nvar name=\"Gates\", age=56, job=\"CEO\";\n```\n\n```js\nvar name=\"Gates\",\n    age=56,\n    job=\"CEO\";\n```\n\n以上两种都可行\n\n#### 5. 语句的解析顺序\n\n第一种：var a = b = 3;\n\n```js\nvar a = b = 3; //实际是以下声明的简写：\n\nvar a; //变量提升 \nb = 3; //文法树\na = b;\n\n//不等于如下声明\nvar b = 3;\nvar a = b;\n\n----------------\n----------------\n(function(){\n    var a = b = 3;\n})(); \n\nconsole.log(\"a defined? \" + (typeof a !== 'undefined')); //false, var a 在立即执行函数的内部，成为了局部变量\nconsole.log(\"b defined? \" + (typeof b !== 'undefined')); //true, b=3 使得b成为了全局变量（js 弱类型语言，变量不声明直接使用，则默认作为全局变量）\n```\n\n第二种：var a,b = 3;\n\n\n```js\nvar a,b = 3 //实际是以下声明的简写：\n\nvar a; //a = undefined 局部变量\nvar b = 3; //b = 3 局部变量， 注意，初始化不会变量提升\n```\n\n\n\n#### 6. 逗号运算符\n\n**逗号运算符**：逗号之前所有的运算表达式都会执行,但整个语句的值是最后一个表达式的值\n\n```js\na = (b=2, c=3, 4==4); // a=true，b=2，c=3\n```\n\n#### 7. js 函数参数\n\njavascript中的函数定义**并未指定**函数形参的类型，函数调用也**未**对传入的实参值做**任何类型检查**。实际上，javascript函数调用甚至**不检查**传入形参的个数\n\n##### 7.1. 同名形参\n\n在非严格模式下，函数中可以出现同名形参，且只能访问**最后出现**的该名称的形参\n\n```js\nfunction add(x,x,x){\n    return x;\n}\n\nconsole.log(add(1,2,3));//3\n```\n\n而在严格模式下，出现同名形参会抛出语法错误\n\n```js\nfunction add(x,x,x){\n    return x;\n}\nconsole.log(add(1,2,3));//SyntaxError: Duplicate parameter name not allowed in `\n```\n\n##### 7.2. 参数个数\n\n1. 当实参比函数声明指定的形参个数要少，剩下的形参都将设置为undefined值\n\n```js\nfunction add(x,y){\n    console.log(x,y);//1 undefined\n}\nadd(1);\n```\n\n2. 当实参比形参个数要多时，剩下的实参没有办法直接获得，需要使用即将提到的**arguments对象**\n\n   javascript中的参数在内部是用一个数组来表示的。函数接收到的始终都是这个数组，而不关心数组中包含哪些参数。在函数体内可以通过arguments对象来访问这个参数数组，从而获取传递给函数的每一个参数。arguments对象并不是Array的实例，它是一个类数组对象，可以使用方括号语法访问它的每一个元素\n\n```js\nfunction add(x,y){\n    console.log(arguments.length)  //3\n    return x+1;\n}\nadd(1,2,3);//2，只传入x，y，return x+1;\nconsole.log(add.length);  //2\n//arguments对象的length属性显示实参的个数，函数的length属性显示形参的个数\n```\n\n```js\nalert(3,4)  // 3, 只传入了3\nalert((3,4)) // 4,（3，4）的结果是4，传入alert的参数值也是4\n```\n\n**注:   形参只是提供便利，但不是必需的**\n\n```js\nfunction add(){\n    return arguments[0] + arguments[1];\n}\nconsole.log(add(1,2));//3\n```\n\n**注：在普通模式下，arguments对象的值和形参的值是同步的，当且仅当形参与实参的个数相同时。但！！在严格模式下，arguments对象的值和形参的值是！！独立的！！**\n\n虽然命名参数和对应arguments对象的值相同，但并不是相同的命名空间，它们的命名空间是独立的。\n\n```js\nfunction test(num1,num2){\n'use strict';\nconsole.log(num1,arguments[0]);//1 1\narguments[0] = 2;\nconsole.log(num1,arguments[0]);//1 2\nnum1 = 10;\nconsole.log(num1,arguments[0]);//10 2\n}\ntest(1);\n```\n\n**注：当形参并没有对应的实参时，arguments对象的值与形参的值并不对应**\n```js\nfunction test(num1,num2){\nconsole.log(num1,arguments[0]);//undefined,undefined\nnum1 = 10;\narguments[0] = 5;\nconsole.log(num1,arguments[0]);//10,5\n}\ntest();\n```\n\n\n\n##### 7.3. 对象参数\n\n可以通过名/值对的形式来传入参数，这样参数的顺序就无关紧要了。定义函数的时候，传入的实参都写入一个单独的对象之中，在调用的时候传入一个对象，对象中的名/值对是真正需要的实参数据\n\n```js\nfunction easycopy(args){\narraycopy(args.from,args.form_start || 0,args.to,args.to_start || 0, args.length);\n}\nvar a = [1,2,3,4],b =[];\neasycopy({form:a,to:b,length:4});\n```\n\n\n\n#### 8. 函数的内部属性\n\n**一、callee**\n\narguments的作用是保存传入函数中的所有参数，而且这个arguments有一个名叫callee的属性，这个属性是一个指针，指向拥有arguments对象的函数。\n\n举个递归算法---阶乘函数的例子：\n\n```js\nfunction factorial(num){\n    if(num<=1){\n        return 1;\n    }else{\n        return num*factorial(num-1)\n    }  \n}    \n```\n\n上面的代码，在函数有名字，而且名字以后也不会变的情况下，这样定义没有啥问题。不过，这样这个函数的执行与函数名紧紧耦合在一起了。所以为了消除这种紧密耦合，我们可以使用arguments.callee。\n\n```js\nfunction factorial(num){\n    if(num<=1){\n        return 1;\n    }else{\n        return num*arguments.callee(num-1)\n    }  \n} \n```\n这样，无论引用函数时使用什么名字，都可以保证正常完成递归调用。举个例子：\n```js\nvar trueFactorial = factorial;\nfactorial = function(){\n  return 0;  \n}\nconsole.log(trueFactorial(5));      //120\nconsole.log(factorial(5));          //0\n```\n\n变量trueFactorial获得了factorial的值，实际上是在另一个位置上保存了一个函数的指针。然后我们又把一个返回0的函数赋值给factorial变量。如果像原来的factorial()不使用arguments.callee，那么调用trueFactorial()就会返回0。但是，在解除了耦合之后，trueFactorial()依然能够正常的计算阶乘。而再次被赋值的factorial()，只能按照重新赋给的值进行计算。\n\n严格模式下，不能通过脚本访问arguments.callee，可以使用命名函数表达式来达成相同的结果，栗如：\n\n```js\nvar factorial = (function f(num){\n    if (num <= 1){\n        return 1;\n    } else {\n        return num * f(num-1);\n    }\n});    \n```\n\n以上代码创建了一个名为f()的命名函数表达式，然后将它赋值给变量factorial。即便把函数赋值给了另一个变量，函数的名字f依然有效。这种方式在严格模式和非严格模式下都行得通。\n\n\n\n**二、this**\n\nthis引用的是函数执行的环境对象，当在网页的全局作用域中调用函数时，this对象引用的就是window。\n\n```js\nwindow.color = \"red\";\nvar o = { color: \"blue\"};\nfunction sayColor(){\n  console.log(this.color);  \n}\n\nsayColor();      // \"red\"\n\no.sayColor = sayColor;\no.sayColor();    // \"blue\"\n```\n\n函数sayColor()在全局作用域中定义，并且引用了this对象。在这个函数调用之前，this的值并不确定，**所以this可能在代码执行过程中引用不同的对象**。\n\n当在全局作用域调用sayColor()，那么this引用的是全局对象window，换句话说就是，对this.color求值会转换成对window.color求值，所以结果就是“red”。\n\n当把这个函数赋值给对象o并调用o.sayColor()时，this引用的是对象o，因此对this.color求值会转换成对o.color求值，所以结果就是“blue”。\n\n**注：函数的名字仅仅是一个包含指针的变量，所以在不同的环境下执行，全局的sayColor()函数与o.sayColor()指向的仍然是同一个函数。**\n\n**三、caller**\n\n函数的caller属性保存着调用当前函数的函数的引用，**如果是在全局作用域中调用当前函数，它的值是null**\n```js\nfunction outer(){\ninner();\n}\nfunction inner(){\nconsole.log(inner.caller);//outer(){inner();}\n}\nouter(); \nfunction inner(){\nconsole.log(inner.caller);//null\n}\ninner();\n```\n**注： 在严格模式下，访问这个属性会抛出TypeError错误**\n\n#### 9. 函数重载\n\njs 没有函数重载，**同名即会覆盖，即便参数不同**！！\n\n\n\n#### 10. 参数类型\n\n javascript中所有函数的参数都是按值传递的。也就是说，把函数外部的值复制到函数内部的参数，就和把值从一个变量复制到另一个变量一样。**但是，对于基本类型和引用类型是有区别的**\n\n##### 10.1. 基本类型\n\n在向参数传递基本类型的值时，被传递的值会被复制给一个局部变量(命名参数或arguments对象的一个元素)，参数值的改变  **不会 ** 反映在函数外部。\n\n##### 10.1. 引用类型\n\n在向参数传递引用类型的值时，会把这个值在内存中的地址复制给一个局部变量，因此这个局部变量的变化 **会 ** 反映在函数的外部\n```js\nfunction setName(obj){\nobj.name = 'test';\n}\nvar person = new Object();\nsetName(person);\nconsole.log(person.name);//'test'\n```\n\n**注：当在函数内部重写引用类型的形参时，这个变量引用的就是一个局部对象了。而这个局部对象会在函数执行完毕后立即被销毁（*如果按照类似c++的按引用传递参数&obj，当在函数中这个地址被指向另一个对象后，函数外的原参数也会改变*）**\n\n```js\nfunction setName(obj){\nobj.name = 'test';\nconsole.log(person.name);//'test'\nobj = new Object();\nobj.name = 'white';\nconsole.log(person.name);//'test'\n}\nvar person = new Object();\nsetName(person);\n```\n\n#### 11. 与或赋值小技巧\n\n```js\nvar  a =  obj || \" \"  ;   //如果 obj 为空，a就赋值为 \" \" ；\nvar  a = check() &&  do(); //如果check()返回为真，就执行do()并将结果赋值给 a;\n```","source":"_posts/js规范-1.变量的声明与定义.md","raw":"---\ntitle: js规范-1.变量的声明与定义\ndate: 2018-11-21 20:31:18\ntags: js\n---\n\n#### 1 变量提升\n\nJavaScript 中，函数及变量的声明都将被提升到函数的最顶部。 \n\nJavaScript 中，变量可以在使用后声明，也就是变量可以先使用再声明。\n\n**注: JavaScript 只有声明的变量会提升，初始化的不会。**\n\n```js\nvar x = 5; // 初始化 x\nelem = document.getElementById(\"demo\"); // 查找元素 \nelem.innerHTML = x + \" \" + y;           // 显示 x 和 y\nvar y = 7; // 初始化 y\n```\n\n等价于\n\n```js\nvar x = 5; // 初始化 x\nvar y;     // 声明 y\n\nelem = document.getElementById(\"demo\"); // 查找元素\nelem.innerHTML = x + \" \" + y;           // 显示 x 和 y\n\ny = 7;    // 设置 y 为 7\n```\n\n故y值在调用时是未定义变量，undefined\n\n**js中的严格模式strict mode不允许使用未声明变量，故建议在每个作用域开始前声明这些变量，这也是正常的 JavaScript 解析步骤。**\n\n\n\n\n\n**注：js中虽然函数声明和变量声明都会被提升，但是函数会首先被提升，然后才是变量。**\n\n\n\n```js\nvar getName=function(){\n  console.log(2);\n}\n\nfunction getName(){\n  console.log(1);\n}\n\ngetName();\n//结果为2\n```\n\n等价于\n\n```js\n//函数、变量声明提升后\nfunction getName(){    //函数声明提升到顶部\n  console.log(1);\n}\n\nvar getName;    //变量声明提升\ngetName = function(){    //变量赋值依然保留在原来的位置\n  console.log(2);\n}\n\ngetName();    // 最终输出：2\n```\n\n \n\n#### 2 js的解析机制\n\n遇到 script 标签的话 js 就进行**预解析**，将变量 var 和 function 声明提升，但不会执行 function，然后就进入上下文执行，上下文执行还是执行预解析同样操作，直到没有 var  和 function，就开始执行上下文。\n\n\n\n####  3 变量声明的方式及作用域\n\n1. **使用var（最常见）** \n\n 　 var声明的变量可以是全局的（函数外面），也可以是局部的（函数内部）**\n\n​     **注：在函数外面使用var声明一个变量后，再在函数内部使用var再次声明一次并改变其值，函数外面的该变量的值不会发生改变。 **\n\n\n\n2. **使用let**\n\n​       let声明的变量在{}中使用，变量的作用域限制在块级域中（**并不等价于 **函数内的局部变量）\n\n```js\nvar children = buttons.children //用var声明了一个全局变量children，储存buttons的所有子元素 \nfor(var i=0; i<children.length; i++)\n{ \n    children[i].onclick = function(){ //执行点击事件的时候输出对应的第几个按钮 \n        console.log(i)\n    } \n}\n//无论你点击什么，输出结果都是4，因为内存里只存了一个i，这个i的最终运算结果是4\n```\n\n但是如果你把`var i = 0`改成`let i = 0`就可以得到你想要的结果。因为如果你使用let的话，每次循环都是引用的都是不同的i（引用了i变量的不同实例）。\n\n#### 4 一条语句多个变量\n\n```js\nvar name=\"Gates\", age=56, job=\"CEO\";\n```\n\n```js\nvar name=\"Gates\",\n    age=56,\n    job=\"CEO\";\n```\n\n以上两种都可行\n\n#### 5. 语句的解析顺序\n\n第一种：var a = b = 3;\n\n```js\nvar a = b = 3; //实际是以下声明的简写：\n\nvar a; //变量提升 \nb = 3; //文法树\na = b;\n\n//不等于如下声明\nvar b = 3;\nvar a = b;\n\n----------------\n----------------\n(function(){\n    var a = b = 3;\n})(); \n\nconsole.log(\"a defined? \" + (typeof a !== 'undefined')); //false, var a 在立即执行函数的内部，成为了局部变量\nconsole.log(\"b defined? \" + (typeof b !== 'undefined')); //true, b=3 使得b成为了全局变量（js 弱类型语言，变量不声明直接使用，则默认作为全局变量）\n```\n\n第二种：var a,b = 3;\n\n\n```js\nvar a,b = 3 //实际是以下声明的简写：\n\nvar a; //a = undefined 局部变量\nvar b = 3; //b = 3 局部变量， 注意，初始化不会变量提升\n```\n\n\n\n#### 6. 逗号运算符\n\n**逗号运算符**：逗号之前所有的运算表达式都会执行,但整个语句的值是最后一个表达式的值\n\n```js\na = (b=2, c=3, 4==4); // a=true，b=2，c=3\n```\n\n#### 7. js 函数参数\n\njavascript中的函数定义**并未指定**函数形参的类型，函数调用也**未**对传入的实参值做**任何类型检查**。实际上，javascript函数调用甚至**不检查**传入形参的个数\n\n##### 7.1. 同名形参\n\n在非严格模式下，函数中可以出现同名形参，且只能访问**最后出现**的该名称的形参\n\n```js\nfunction add(x,x,x){\n    return x;\n}\n\nconsole.log(add(1,2,3));//3\n```\n\n而在严格模式下，出现同名形参会抛出语法错误\n\n```js\nfunction add(x,x,x){\n    return x;\n}\nconsole.log(add(1,2,3));//SyntaxError: Duplicate parameter name not allowed in `\n```\n\n##### 7.2. 参数个数\n\n1. 当实参比函数声明指定的形参个数要少，剩下的形参都将设置为undefined值\n\n```js\nfunction add(x,y){\n    console.log(x,y);//1 undefined\n}\nadd(1);\n```\n\n2. 当实参比形参个数要多时，剩下的实参没有办法直接获得，需要使用即将提到的**arguments对象**\n\n   javascript中的参数在内部是用一个数组来表示的。函数接收到的始终都是这个数组，而不关心数组中包含哪些参数。在函数体内可以通过arguments对象来访问这个参数数组，从而获取传递给函数的每一个参数。arguments对象并不是Array的实例，它是一个类数组对象，可以使用方括号语法访问它的每一个元素\n\n```js\nfunction add(x,y){\n    console.log(arguments.length)  //3\n    return x+1;\n}\nadd(1,2,3);//2，只传入x，y，return x+1;\nconsole.log(add.length);  //2\n//arguments对象的length属性显示实参的个数，函数的length属性显示形参的个数\n```\n\n```js\nalert(3,4)  // 3, 只传入了3\nalert((3,4)) // 4,（3，4）的结果是4，传入alert的参数值也是4\n```\n\n**注:   形参只是提供便利，但不是必需的**\n\n```js\nfunction add(){\n    return arguments[0] + arguments[1];\n}\nconsole.log(add(1,2));//3\n```\n\n**注：在普通模式下，arguments对象的值和形参的值是同步的，当且仅当形参与实参的个数相同时。但！！在严格模式下，arguments对象的值和形参的值是！！独立的！！**\n\n虽然命名参数和对应arguments对象的值相同，但并不是相同的命名空间，它们的命名空间是独立的。\n\n```js\nfunction test(num1,num2){\n'use strict';\nconsole.log(num1,arguments[0]);//1 1\narguments[0] = 2;\nconsole.log(num1,arguments[0]);//1 2\nnum1 = 10;\nconsole.log(num1,arguments[0]);//10 2\n}\ntest(1);\n```\n\n**注：当形参并没有对应的实参时，arguments对象的值与形参的值并不对应**\n```js\nfunction test(num1,num2){\nconsole.log(num1,arguments[0]);//undefined,undefined\nnum1 = 10;\narguments[0] = 5;\nconsole.log(num1,arguments[0]);//10,5\n}\ntest();\n```\n\n\n\n##### 7.3. 对象参数\n\n可以通过名/值对的形式来传入参数，这样参数的顺序就无关紧要了。定义函数的时候，传入的实参都写入一个单独的对象之中，在调用的时候传入一个对象，对象中的名/值对是真正需要的实参数据\n\n```js\nfunction easycopy(args){\narraycopy(args.from,args.form_start || 0,args.to,args.to_start || 0, args.length);\n}\nvar a = [1,2,3,4],b =[];\neasycopy({form:a,to:b,length:4});\n```\n\n\n\n#### 8. 函数的内部属性\n\n**一、callee**\n\narguments的作用是保存传入函数中的所有参数，而且这个arguments有一个名叫callee的属性，这个属性是一个指针，指向拥有arguments对象的函数。\n\n举个递归算法---阶乘函数的例子：\n\n```js\nfunction factorial(num){\n    if(num<=1){\n        return 1;\n    }else{\n        return num*factorial(num-1)\n    }  \n}    \n```\n\n上面的代码，在函数有名字，而且名字以后也不会变的情况下，这样定义没有啥问题。不过，这样这个函数的执行与函数名紧紧耦合在一起了。所以为了消除这种紧密耦合，我们可以使用arguments.callee。\n\n```js\nfunction factorial(num){\n    if(num<=1){\n        return 1;\n    }else{\n        return num*arguments.callee(num-1)\n    }  \n} \n```\n这样，无论引用函数时使用什么名字，都可以保证正常完成递归调用。举个例子：\n```js\nvar trueFactorial = factorial;\nfactorial = function(){\n  return 0;  \n}\nconsole.log(trueFactorial(5));      //120\nconsole.log(factorial(5));          //0\n```\n\n变量trueFactorial获得了factorial的值，实际上是在另一个位置上保存了一个函数的指针。然后我们又把一个返回0的函数赋值给factorial变量。如果像原来的factorial()不使用arguments.callee，那么调用trueFactorial()就会返回0。但是，在解除了耦合之后，trueFactorial()依然能够正常的计算阶乘。而再次被赋值的factorial()，只能按照重新赋给的值进行计算。\n\n严格模式下，不能通过脚本访问arguments.callee，可以使用命名函数表达式来达成相同的结果，栗如：\n\n```js\nvar factorial = (function f(num){\n    if (num <= 1){\n        return 1;\n    } else {\n        return num * f(num-1);\n    }\n});    \n```\n\n以上代码创建了一个名为f()的命名函数表达式，然后将它赋值给变量factorial。即便把函数赋值给了另一个变量，函数的名字f依然有效。这种方式在严格模式和非严格模式下都行得通。\n\n\n\n**二、this**\n\nthis引用的是函数执行的环境对象，当在网页的全局作用域中调用函数时，this对象引用的就是window。\n\n```js\nwindow.color = \"red\";\nvar o = { color: \"blue\"};\nfunction sayColor(){\n  console.log(this.color);  \n}\n\nsayColor();      // \"red\"\n\no.sayColor = sayColor;\no.sayColor();    // \"blue\"\n```\n\n函数sayColor()在全局作用域中定义，并且引用了this对象。在这个函数调用之前，this的值并不确定，**所以this可能在代码执行过程中引用不同的对象**。\n\n当在全局作用域调用sayColor()，那么this引用的是全局对象window，换句话说就是，对this.color求值会转换成对window.color求值，所以结果就是“red”。\n\n当把这个函数赋值给对象o并调用o.sayColor()时，this引用的是对象o，因此对this.color求值会转换成对o.color求值，所以结果就是“blue”。\n\n**注：函数的名字仅仅是一个包含指针的变量，所以在不同的环境下执行，全局的sayColor()函数与o.sayColor()指向的仍然是同一个函数。**\n\n**三、caller**\n\n函数的caller属性保存着调用当前函数的函数的引用，**如果是在全局作用域中调用当前函数，它的值是null**\n```js\nfunction outer(){\ninner();\n}\nfunction inner(){\nconsole.log(inner.caller);//outer(){inner();}\n}\nouter(); \nfunction inner(){\nconsole.log(inner.caller);//null\n}\ninner();\n```\n**注： 在严格模式下，访问这个属性会抛出TypeError错误**\n\n#### 9. 函数重载\n\njs 没有函数重载，**同名即会覆盖，即便参数不同**！！\n\n\n\n#### 10. 参数类型\n\n javascript中所有函数的参数都是按值传递的。也就是说，把函数外部的值复制到函数内部的参数，就和把值从一个变量复制到另一个变量一样。**但是，对于基本类型和引用类型是有区别的**\n\n##### 10.1. 基本类型\n\n在向参数传递基本类型的值时，被传递的值会被复制给一个局部变量(命名参数或arguments对象的一个元素)，参数值的改变  **不会 ** 反映在函数外部。\n\n##### 10.1. 引用类型\n\n在向参数传递引用类型的值时，会把这个值在内存中的地址复制给一个局部变量，因此这个局部变量的变化 **会 ** 反映在函数的外部\n```js\nfunction setName(obj){\nobj.name = 'test';\n}\nvar person = new Object();\nsetName(person);\nconsole.log(person.name);//'test'\n```\n\n**注：当在函数内部重写引用类型的形参时，这个变量引用的就是一个局部对象了。而这个局部对象会在函数执行完毕后立即被销毁（*如果按照类似c++的按引用传递参数&obj，当在函数中这个地址被指向另一个对象后，函数外的原参数也会改变*）**\n\n```js\nfunction setName(obj){\nobj.name = 'test';\nconsole.log(person.name);//'test'\nobj = new Object();\nobj.name = 'white';\nconsole.log(person.name);//'test'\n}\nvar person = new Object();\nsetName(person);\n```\n\n#### 11. 与或赋值小技巧\n\n```js\nvar  a =  obj || \" \"  ;   //如果 obj 为空，a就赋值为 \" \" ；\nvar  a = check() &&  do(); //如果check()返回为真，就执行do()并将结果赋值给 a;\n```","slug":"js规范-1.变量的声明与定义","published":1,"updated":"2018-11-21T18:37:16.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14l70023o49uwhmf4oh5","content":"<h4 id=\"1-变量提升\"><a href=\"#1-变量提升\" class=\"headerlink\" title=\"1 变量提升\"></a>1 变量提升</h4><p>JavaScript 中，函数及变量的声明都将被提升到函数的最顶部。 </p>\n<p>JavaScript 中，变量可以在使用后声明，也就是变量可以先使用再声明。</p>\n<p><strong>注: JavaScript 只有声明的变量会提升，初始化的不会。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"number\">5</span>; <span class=\"comment\">// 初始化 x</span></span><br><span class=\"line\">elem = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"demo\"</span>); <span class=\"comment\">// 查找元素 </span></span><br><span class=\"line\">elem.innerHTML = x + <span class=\"string\">\" \"</span> + y;           <span class=\"comment\">// 显示 x 和 y</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> y = <span class=\"number\">7</span>; <span class=\"comment\">// 初始化 y</span></span><br></pre></td></tr></table></figure>\n<p>等价于</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"number\">5</span>; <span class=\"comment\">// 初始化 x</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> y;     <span class=\"comment\">// 声明 y</span></span><br><span class=\"line\"></span><br><span class=\"line\">elem = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"demo\"</span>); <span class=\"comment\">// 查找元素</span></span><br><span class=\"line\">elem.innerHTML = x + <span class=\"string\">\" \"</span> + y;           <span class=\"comment\">// 显示 x 和 y</span></span><br><span class=\"line\"></span><br><span class=\"line\">y = <span class=\"number\">7</span>;    <span class=\"comment\">// 设置 y 为 7</span></span><br></pre></td></tr></table></figure>\n<p>故y值在调用时是未定义变量，undefined</p>\n<p><strong>js中的严格模式strict mode不允许使用未声明变量，故建议在每个作用域开始前声明这些变量，这也是正常的 JavaScript 解析步骤。</strong></p>\n<p><strong>注：js中虽然函数声明和变量声明都会被提升，但是函数会首先被提升，然后才是变量。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> getName=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">getName();</span><br><span class=\"line\"><span class=\"comment\">//结果为2</span></span><br></pre></td></tr></table></figure>\n<p>等价于</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//函数、变量声明提升后</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>)</span>&#123;    <span class=\"comment\">//函数声明提升到顶部</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> getName;    <span class=\"comment\">//变量声明提升</span></span><br><span class=\"line\">getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;    <span class=\"comment\">//变量赋值依然保留在原来的位置</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">getName();    <span class=\"comment\">// 最终输出：2</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-js的解析机制\"><a href=\"#2-js的解析机制\" class=\"headerlink\" title=\"2 js的解析机制\"></a>2 js的解析机制</h4><p>遇到 script 标签的话 js 就进行<strong>预解析</strong>，将变量 var 和 function 声明提升，但不会执行 function，然后就进入上下文执行，上下文执行还是执行预解析同样操作，直到没有 var  和 function，就开始执行上下文。</p>\n<h4 id=\"3-变量声明的方式及作用域\"><a href=\"#3-变量声明的方式及作用域\" class=\"headerlink\" title=\"3 变量声明的方式及作用域\"></a>3 变量声明的方式及作用域</h4><ol>\n<li><p><strong>使用var（最常见）</strong> </p>\n<p>　 var声明的变量可以是全局的（函数外面），也可以是局部的（函数内部）**</p>\n</li>\n</ol>\n<p>​     <strong>注：在函数外面使用var声明一个变量后，再在函数内部使用var再次声明一次并改变其值，函数外面的该变量的值不会发生改变。 </strong></p>\n<ol start=\"2\">\n<li><strong>使用let</strong></li>\n</ol>\n<p>​       let声明的变量在{}中使用，变量的作用域限制在块级域中（<strong>并不等价于 </strong>函数内的局部变量）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> children = buttons.children <span class=\"comment\">//用var声明了一个全局变量children，储存buttons的所有子元素 </span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;children.length; i++)</span><br><span class=\"line\">&#123; </span><br><span class=\"line\">    children[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; <span class=\"comment\">//执行点击事件的时候输出对应的第几个按钮 </span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//无论你点击什么，输出结果都是4，因为内存里只存了一个i，这个i的最终运算结果是4</span></span><br></pre></td></tr></table></figure>\n<p>但是如果你把<code>var i = 0</code>改成<code>let i = 0</code>就可以得到你想要的结果。因为如果你使用let的话，每次循环都是引用的都是不同的i（引用了i变量的不同实例）。</p>\n<h4 id=\"4-一条语句多个变量\"><a href=\"#4-一条语句多个变量\" class=\"headerlink\" title=\"4 一条语句多个变量\"></a>4 一条语句多个变量</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name=<span class=\"string\">\"Gates\"</span>, age=<span class=\"number\">56</span>, job=<span class=\"string\">\"CEO\"</span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name=<span class=\"string\">\"Gates\"</span>,</span><br><span class=\"line\">    age=<span class=\"number\">56</span>,</span><br><span class=\"line\">    job=<span class=\"string\">\"CEO\"</span>;</span><br></pre></td></tr></table></figure>\n<p>以上两种都可行</p>\n<h4 id=\"5-语句的解析顺序\"><a href=\"#5-语句的解析顺序\" class=\"headerlink\" title=\"5. 语句的解析顺序\"></a>5. 语句的解析顺序</h4><p>第一种：var a = b = 3;</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = b = <span class=\"number\">3</span>; <span class=\"comment\">//实际是以下声明的简写：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a; <span class=\"comment\">//变量提升 </span></span><br><span class=\"line\">b = <span class=\"number\">3</span>; <span class=\"comment\">//文法树</span></span><br><span class=\"line\">a = b;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//不等于如下声明</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = b;</span><br><span class=\"line\"></span><br><span class=\"line\">----------------</span><br><span class=\"line\">----------------</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = b = <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;)(); </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"a defined? \"</span> + (<span class=\"keyword\">typeof</span> a !== <span class=\"string\">'undefined'</span>)); <span class=\"comment\">//false, var a 在立即执行函数的内部，成为了局部变量</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"b defined? \"</span> + (<span class=\"keyword\">typeof</span> b !== <span class=\"string\">'undefined'</span>)); <span class=\"comment\">//true, b=3 使得b成为了全局变量（js 弱类型语言，变量不声明直接使用，则默认作为全局变量）</span></span><br></pre></td></tr></table></figure>\n<p>第二种：var a,b = 3;</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a,b = <span class=\"number\">3</span> <span class=\"comment\">//实际是以下声明的简写：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a; <span class=\"comment\">//a = undefined 局部变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">3</span>; <span class=\"comment\">//b = 3 局部变量， 注意，初始化不会变量提升</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"6-逗号运算符\"><a href=\"#6-逗号运算符\" class=\"headerlink\" title=\"6. 逗号运算符\"></a>6. 逗号运算符</h4><p><strong>逗号运算符</strong>：逗号之前所有的运算表达式都会执行,但整个语句的值是最后一个表达式的值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = (b=<span class=\"number\">2</span>, c=<span class=\"number\">3</span>, <span class=\"number\">4</span>==<span class=\"number\">4</span>); <span class=\"comment\">// a=true，b=2，c=3</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"7-js-函数参数\"><a href=\"#7-js-函数参数\" class=\"headerlink\" title=\"7. js 函数参数\"></a>7. js 函数参数</h4><p>javascript中的函数定义<strong>并未指定</strong>函数形参的类型，函数调用也<strong>未</strong>对传入的实参值做<strong>任何类型检查</strong>。实际上，javascript函数调用甚至<strong>不检查</strong>传入形参的个数</p>\n<h5 id=\"7-1-同名形参\"><a href=\"#7-1-同名形参\" class=\"headerlink\" title=\"7.1. 同名形参\"></a>7.1. 同名形参</h5><p>在非严格模式下，函数中可以出现同名形参，且只能访问<strong>最后出现</strong>的该名称的形参</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x,x,x</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(add(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>));<span class=\"comment\">//3</span></span><br></pre></td></tr></table></figure>\n<p>而在严格模式下，出现同名形参会抛出语法错误</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x,x,x</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(add(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>));<span class=\"comment\">//SyntaxError: Duplicate parameter name not allowed in `</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"7-2-参数个数\"><a href=\"#7-2-参数个数\" class=\"headerlink\" title=\"7.2. 参数个数\"></a>7.2. 参数个数</h5><ol>\n<li>当实参比函数声明指定的形参个数要少，剩下的形参都将设置为undefined值</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x,y</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(x,y);<span class=\"comment\">//1 undefined</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">add(<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><p>当实参比形参个数要多时，剩下的实参没有办法直接获得，需要使用即将提到的<strong>arguments对象</strong></p>\n<p>javascript中的参数在内部是用一个数组来表示的。函数接收到的始终都是这个数组，而不关心数组中包含哪些参数。在函数体内可以通过arguments对象来访问这个参数数组，从而获取传递给函数的每一个参数。arguments对象并不是Array的实例，它是一个类数组对象，可以使用方括号语法访问它的每一个元素</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x,y</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">arguments</span>.length)  <span class=\"comment\">//3</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> x+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">add(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>);<span class=\"comment\">//2，只传入x，y，return x+1;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(add.length);  <span class=\"comment\">//2</span></span><br><span class=\"line\"><span class=\"comment\">//arguments对象的length属性显示实参的个数，函数的length属性显示形参的个数</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(<span class=\"number\">3</span>,<span class=\"number\">4</span>)  <span class=\"comment\">// 3, 只传入了3</span></span><br><span class=\"line\">alert((<span class=\"number\">3</span>,<span class=\"number\">4</span>)) <span class=\"comment\">// 4,（3，4）的结果是4，传入alert的参数值也是4</span></span><br></pre></td></tr></table></figure>\n<p><strong>注:   形参只是提供便利，但不是必需的</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>] + <span class=\"built_in\">arguments</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(add(<span class=\"number\">1</span>,<span class=\"number\">2</span>));<span class=\"comment\">//3</span></span><br></pre></td></tr></table></figure>\n<p><strong>注：在普通模式下，arguments对象的值和形参的值是同步的，当且仅当形参与实参的个数相同时。但！！在严格模式下，arguments对象的值和形参的值是！！独立的！！</strong></p>\n<p>虽然命名参数和对应arguments对象的值相同，但并不是相同的命名空间，它们的命名空间是独立的。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\">num1,num2</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(num1,<span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>]);<span class=\"comment\">//1 1</span></span><br><span class=\"line\"><span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(num1,<span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>]);<span class=\"comment\">//1 2</span></span><br><span class=\"line\">num1 = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(num1,<span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>]);<span class=\"comment\">//10 2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test(<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<p><strong>注：当形参并没有对应的实参时，arguments对象的值与形参的值并不对应</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\">num1,num2</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(num1,<span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>]);<span class=\"comment\">//undefined,undefined</span></span><br><span class=\"line\">num1 = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>] = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(num1,<span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>]);<span class=\"comment\">//10,5</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test();</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"7-3-对象参数\"><a href=\"#7-3-对象参数\" class=\"headerlink\" title=\"7.3. 对象参数\"></a>7.3. 对象参数</h5><p>可以通过名/值对的形式来传入参数，这样参数的顺序就无关紧要了。定义函数的时候，传入的实参都写入一个单独的对象之中，在调用的时候传入一个对象，对象中的名/值对是真正需要的实参数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">easycopy</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">arraycopy(args.from,args.form_start || <span class=\"number\">0</span>,args.to,args.to_start || <span class=\"number\">0</span>, args.length);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>],b =[];</span><br><span class=\"line\">easycopy(&#123;<span class=\"attr\">form</span>:a,<span class=\"attr\">to</span>:b,<span class=\"attr\">length</span>:<span class=\"number\">4</span>&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"8-函数的内部属性\"><a href=\"#8-函数的内部属性\" class=\"headerlink\" title=\"8. 函数的内部属性\"></a>8. 函数的内部属性</h4><p><strong>一、callee</strong></p>\n<p>arguments的作用是保存传入函数中的所有参数，而且这个arguments有一个名叫callee的属性，这个属性是一个指针，指向拥有arguments对象的函数。</p>\n<p>举个递归算法—阶乘函数的例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">factorial</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(num&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num*factorial(num<span class=\"number\">-1</span>)</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面的代码，在函数有名字，而且名字以后也不会变的情况下，这样定义没有啥问题。不过，这样这个函数的执行与函数名紧紧耦合在一起了。所以为了消除这种紧密耦合，我们可以使用arguments.callee。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">factorial</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(num&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num*<span class=\"built_in\">arguments</span>.callee(num<span class=\"number\">-1</span>)</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样，无论引用函数时使用什么名字，都可以保证正常完成递归调用。举个例子：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> trueFactorial = factorial;</span><br><span class=\"line\">factorial = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(trueFactorial(<span class=\"number\">5</span>));      <span class=\"comment\">//120</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(factorial(<span class=\"number\">5</span>));          <span class=\"comment\">//0</span></span><br></pre></td></tr></table></figure></p>\n<p>变量trueFactorial获得了factorial的值，实际上是在另一个位置上保存了一个函数的指针。然后我们又把一个返回0的函数赋值给factorial变量。如果像原来的factorial()不使用arguments.callee，那么调用trueFactorial()就会返回0。但是，在解除了耦合之后，trueFactorial()依然能够正常的计算阶乘。而再次被赋值的factorial()，只能按照重新赋给的值进行计算。</p>\n<p>严格模式下，不能通过脚本访问arguments.callee，可以使用命名函数表达式来达成相同的结果，栗如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> factorial = (<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num * f(num<span class=\"number\">-1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>以上代码创建了一个名为f()的命名函数表达式，然后将它赋值给变量factorial。即便把函数赋值给了另一个变量，函数的名字f依然有效。这种方式在严格模式和非严格模式下都行得通。</p>\n<p><strong>二、this</strong></p>\n<p>this引用的是函数执行的环境对象，当在网页的全局作用域中调用函数时，this对象引用的就是window。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.color = <span class=\"string\">\"red\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o = &#123; <span class=\"attr\">color</span>: <span class=\"string\">\"blue\"</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayColor</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.color);  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">sayColor();      <span class=\"comment\">// \"red\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">o.sayColor = sayColor;</span><br><span class=\"line\">o.sayColor();    <span class=\"comment\">// \"blue\"</span></span><br></pre></td></tr></table></figure>\n<p>函数sayColor()在全局作用域中定义，并且引用了this对象。在这个函数调用之前，this的值并不确定，<strong>所以this可能在代码执行过程中引用不同的对象</strong>。</p>\n<p>当在全局作用域调用sayColor()，那么this引用的是全局对象window，换句话说就是，对this.color求值会转换成对window.color求值，所以结果就是“red”。</p>\n<p>当把这个函数赋值给对象o并调用o.sayColor()时，this引用的是对象o，因此对this.color求值会转换成对o.color求值，所以结果就是“blue”。</p>\n<p><strong>注：函数的名字仅仅是一个包含指针的变量，所以在不同的环境下执行，全局的sayColor()函数与o.sayColor()指向的仍然是同一个函数。</strong></p>\n<p><strong>三、caller</strong></p>\n<p>函数的caller属性保存着调用当前函数的函数的引用，<strong>如果是在全局作用域中调用当前函数，它的值是null</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">outer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">inner();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inner</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(inner.caller);<span class=\"comment\">//outer()&#123;inner();&#125;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">outer(); </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inner</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(inner.caller);<span class=\"comment\">//null</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">inner();</span><br></pre></td></tr></table></figure></p>\n<p><strong>注： 在严格模式下，访问这个属性会抛出TypeError错误</strong></p>\n<h4 id=\"9-函数重载\"><a href=\"#9-函数重载\" class=\"headerlink\" title=\"9. 函数重载\"></a>9. 函数重载</h4><p>js 没有函数重载，<strong>同名即会覆盖，即便参数不同</strong>！！</p>\n<h4 id=\"10-参数类型\"><a href=\"#10-参数类型\" class=\"headerlink\" title=\"10. 参数类型\"></a>10. 参数类型</h4><p> javascript中所有函数的参数都是按值传递的。也就是说，把函数外部的值复制到函数内部的参数，就和把值从一个变量复制到另一个变量一样。<strong>但是，对于基本类型和引用类型是有区别的</strong></p>\n<h5 id=\"10-1-基本类型\"><a href=\"#10-1-基本类型\" class=\"headerlink\" title=\"10.1. 基本类型\"></a>10.1. 基本类型</h5><p>在向参数传递基本类型的值时，被传递的值会被复制给一个局部变量(命名参数或arguments对象的一个元素)，参数值的改变  <strong>不会 </strong> 反映在函数外部。</p>\n<h5 id=\"10-1-引用类型\"><a href=\"#10-1-引用类型\" class=\"headerlink\" title=\"10.1. 引用类型\"></a>10.1. 引用类型</h5><p>在向参数传递引用类型的值时，会把这个值在内存中的地址复制给一个局部变量，因此这个局部变量的变化 <strong>会 </strong> 反映在函数的外部<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setName</span>(<span class=\"params\">obj</span>)</span>&#123;</span><br><span class=\"line\">obj.name = <span class=\"string\">'test'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">setName(person);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name);<span class=\"comment\">//'test'</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>注：当在函数内部重写引用类型的形参时，这个变量引用的就是一个局部对象了。而这个局部对象会在函数执行完毕后立即被销毁（<em>如果按照类似c++的按引用传递参数&amp;obj，当在函数中这个地址被指向另一个对象后，函数外的原参数也会改变</em>）</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setName</span>(<span class=\"params\">obj</span>)</span>&#123;</span><br><span class=\"line\">obj.name = <span class=\"string\">'test'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name);<span class=\"comment\">//'test'</span></span><br><span class=\"line\">obj = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">obj.name = <span class=\"string\">'white'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name);<span class=\"comment\">//'test'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">setName(person);</span><br></pre></td></tr></table></figure>\n<h4 id=\"11-与或赋值小技巧\"><a href=\"#11-与或赋值小技巧\" class=\"headerlink\" title=\"11. 与或赋值小技巧\"></a>11. 与或赋值小技巧</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span>  a =  obj || <span class=\"string\">\" \"</span>  ;   <span class=\"comment\">//如果 obj 为空，a就赋值为 \" \" ；</span></span><br><span class=\"line\"><span class=\"keyword\">var</span>  a = check() &amp;&amp;  <span class=\"keyword\">do</span>(); <span class=\"comment\">//如果check()返回为真，就执行do()并将结果赋值给 a;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-变量提升\"><a href=\"#1-变量提升\" class=\"headerlink\" title=\"1 变量提升\"></a>1 变量提升</h4><p>JavaScript 中，函数及变量的声明都将被提升到函数的最顶部。 </p>\n<p>JavaScript 中，变量可以在使用后声明，也就是变量可以先使用再声明。</p>\n<p><strong>注: JavaScript 只有声明的变量会提升，初始化的不会。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"number\">5</span>; <span class=\"comment\">// 初始化 x</span></span><br><span class=\"line\">elem = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"demo\"</span>); <span class=\"comment\">// 查找元素 </span></span><br><span class=\"line\">elem.innerHTML = x + <span class=\"string\">\" \"</span> + y;           <span class=\"comment\">// 显示 x 和 y</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> y = <span class=\"number\">7</span>; <span class=\"comment\">// 初始化 y</span></span><br></pre></td></tr></table></figure>\n<p>等价于</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"number\">5</span>; <span class=\"comment\">// 初始化 x</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> y;     <span class=\"comment\">// 声明 y</span></span><br><span class=\"line\"></span><br><span class=\"line\">elem = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"demo\"</span>); <span class=\"comment\">// 查找元素</span></span><br><span class=\"line\">elem.innerHTML = x + <span class=\"string\">\" \"</span> + y;           <span class=\"comment\">// 显示 x 和 y</span></span><br><span class=\"line\"></span><br><span class=\"line\">y = <span class=\"number\">7</span>;    <span class=\"comment\">// 设置 y 为 7</span></span><br></pre></td></tr></table></figure>\n<p>故y值在调用时是未定义变量，undefined</p>\n<p><strong>js中的严格模式strict mode不允许使用未声明变量，故建议在每个作用域开始前声明这些变量，这也是正常的 JavaScript 解析步骤。</strong></p>\n<p><strong>注：js中虽然函数声明和变量声明都会被提升，但是函数会首先被提升，然后才是变量。</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> getName=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">getName();</span><br><span class=\"line\"><span class=\"comment\">//结果为2</span></span><br></pre></td></tr></table></figure>\n<p>等价于</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//函数、变量声明提升后</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getName</span>(<span class=\"params\"></span>)</span>&#123;    <span class=\"comment\">//函数声明提升到顶部</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> getName;    <span class=\"comment\">//变量声明提升</span></span><br><span class=\"line\">getName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;    <span class=\"comment\">//变量赋值依然保留在原来的位置</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">getName();    <span class=\"comment\">// 最终输出：2</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-js的解析机制\"><a href=\"#2-js的解析机制\" class=\"headerlink\" title=\"2 js的解析机制\"></a>2 js的解析机制</h4><p>遇到 script 标签的话 js 就进行<strong>预解析</strong>，将变量 var 和 function 声明提升，但不会执行 function，然后就进入上下文执行，上下文执行还是执行预解析同样操作，直到没有 var  和 function，就开始执行上下文。</p>\n<h4 id=\"3-变量声明的方式及作用域\"><a href=\"#3-变量声明的方式及作用域\" class=\"headerlink\" title=\"3 变量声明的方式及作用域\"></a>3 变量声明的方式及作用域</h4><ol>\n<li><p><strong>使用var（最常见）</strong> </p>\n<p>　 var声明的变量可以是全局的（函数外面），也可以是局部的（函数内部）**</p>\n</li>\n</ol>\n<p>​     <strong>注：在函数外面使用var声明一个变量后，再在函数内部使用var再次声明一次并改变其值，函数外面的该变量的值不会发生改变。 </strong></p>\n<ol start=\"2\">\n<li><strong>使用let</strong></li>\n</ol>\n<p>​       let声明的变量在{}中使用，变量的作用域限制在块级域中（<strong>并不等价于 </strong>函数内的局部变量）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> children = buttons.children <span class=\"comment\">//用var声明了一个全局变量children，储存buttons的所有子元素 </span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;children.length; i++)</span><br><span class=\"line\">&#123; </span><br><span class=\"line\">    children[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123; <span class=\"comment\">//执行点击事件的时候输出对应的第几个按钮 </span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//无论你点击什么，输出结果都是4，因为内存里只存了一个i，这个i的最终运算结果是4</span></span><br></pre></td></tr></table></figure>\n<p>但是如果你把<code>var i = 0</code>改成<code>let i = 0</code>就可以得到你想要的结果。因为如果你使用let的话，每次循环都是引用的都是不同的i（引用了i变量的不同实例）。</p>\n<h4 id=\"4-一条语句多个变量\"><a href=\"#4-一条语句多个变量\" class=\"headerlink\" title=\"4 一条语句多个变量\"></a>4 一条语句多个变量</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name=<span class=\"string\">\"Gates\"</span>, age=<span class=\"number\">56</span>, job=<span class=\"string\">\"CEO\"</span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name=<span class=\"string\">\"Gates\"</span>,</span><br><span class=\"line\">    age=<span class=\"number\">56</span>,</span><br><span class=\"line\">    job=<span class=\"string\">\"CEO\"</span>;</span><br></pre></td></tr></table></figure>\n<p>以上两种都可行</p>\n<h4 id=\"5-语句的解析顺序\"><a href=\"#5-语句的解析顺序\" class=\"headerlink\" title=\"5. 语句的解析顺序\"></a>5. 语句的解析顺序</h4><p>第一种：var a = b = 3;</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = b = <span class=\"number\">3</span>; <span class=\"comment\">//实际是以下声明的简写：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a; <span class=\"comment\">//变量提升 </span></span><br><span class=\"line\">b = <span class=\"number\">3</span>; <span class=\"comment\">//文法树</span></span><br><span class=\"line\">a = b;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//不等于如下声明</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = b;</span><br><span class=\"line\"></span><br><span class=\"line\">----------------</span><br><span class=\"line\">----------------</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = b = <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;)(); </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"a defined? \"</span> + (<span class=\"keyword\">typeof</span> a !== <span class=\"string\">'undefined'</span>)); <span class=\"comment\">//false, var a 在立即执行函数的内部，成为了局部变量</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"b defined? \"</span> + (<span class=\"keyword\">typeof</span> b !== <span class=\"string\">'undefined'</span>)); <span class=\"comment\">//true, b=3 使得b成为了全局变量（js 弱类型语言，变量不声明直接使用，则默认作为全局变量）</span></span><br></pre></td></tr></table></figure>\n<p>第二种：var a,b = 3;</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a,b = <span class=\"number\">3</span> <span class=\"comment\">//实际是以下声明的简写：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a; <span class=\"comment\">//a = undefined 局部变量</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">3</span>; <span class=\"comment\">//b = 3 局部变量， 注意，初始化不会变量提升</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"6-逗号运算符\"><a href=\"#6-逗号运算符\" class=\"headerlink\" title=\"6. 逗号运算符\"></a>6. 逗号运算符</h4><p><strong>逗号运算符</strong>：逗号之前所有的运算表达式都会执行,但整个语句的值是最后一个表达式的值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = (b=<span class=\"number\">2</span>, c=<span class=\"number\">3</span>, <span class=\"number\">4</span>==<span class=\"number\">4</span>); <span class=\"comment\">// a=true，b=2，c=3</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"7-js-函数参数\"><a href=\"#7-js-函数参数\" class=\"headerlink\" title=\"7. js 函数参数\"></a>7. js 函数参数</h4><p>javascript中的函数定义<strong>并未指定</strong>函数形参的类型，函数调用也<strong>未</strong>对传入的实参值做<strong>任何类型检查</strong>。实际上，javascript函数调用甚至<strong>不检查</strong>传入形参的个数</p>\n<h5 id=\"7-1-同名形参\"><a href=\"#7-1-同名形参\" class=\"headerlink\" title=\"7.1. 同名形参\"></a>7.1. 同名形参</h5><p>在非严格模式下，函数中可以出现同名形参，且只能访问<strong>最后出现</strong>的该名称的形参</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x,x,x</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(add(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>));<span class=\"comment\">//3</span></span><br></pre></td></tr></table></figure>\n<p>而在严格模式下，出现同名形参会抛出语法错误</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x,x,x</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(add(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>));<span class=\"comment\">//SyntaxError: Duplicate parameter name not allowed in `</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"7-2-参数个数\"><a href=\"#7-2-参数个数\" class=\"headerlink\" title=\"7.2. 参数个数\"></a>7.2. 参数个数</h5><ol>\n<li>当实参比函数声明指定的形参个数要少，剩下的形参都将设置为undefined值</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x,y</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(x,y);<span class=\"comment\">//1 undefined</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">add(<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><p>当实参比形参个数要多时，剩下的实参没有办法直接获得，需要使用即将提到的<strong>arguments对象</strong></p>\n<p>javascript中的参数在内部是用一个数组来表示的。函数接收到的始终都是这个数组，而不关心数组中包含哪些参数。在函数体内可以通过arguments对象来访问这个参数数组，从而获取传递给函数的每一个参数。arguments对象并不是Array的实例，它是一个类数组对象，可以使用方括号语法访问它的每一个元素</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">x,y</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">arguments</span>.length)  <span class=\"comment\">//3</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> x+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">add(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>);<span class=\"comment\">//2，只传入x，y，return x+1;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(add.length);  <span class=\"comment\">//2</span></span><br><span class=\"line\"><span class=\"comment\">//arguments对象的length属性显示实参的个数，函数的length属性显示形参的个数</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(<span class=\"number\">3</span>,<span class=\"number\">4</span>)  <span class=\"comment\">// 3, 只传入了3</span></span><br><span class=\"line\">alert((<span class=\"number\">3</span>,<span class=\"number\">4</span>)) <span class=\"comment\">// 4,（3，4）的结果是4，传入alert的参数值也是4</span></span><br></pre></td></tr></table></figure>\n<p><strong>注:   形参只是提供便利，但不是必需的</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>] + <span class=\"built_in\">arguments</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(add(<span class=\"number\">1</span>,<span class=\"number\">2</span>));<span class=\"comment\">//3</span></span><br></pre></td></tr></table></figure>\n<p><strong>注：在普通模式下，arguments对象的值和形参的值是同步的，当且仅当形参与实参的个数相同时。但！！在严格模式下，arguments对象的值和形参的值是！！独立的！！</strong></p>\n<p>虽然命名参数和对应arguments对象的值相同，但并不是相同的命名空间，它们的命名空间是独立的。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\">num1,num2</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(num1,<span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>]);<span class=\"comment\">//1 1</span></span><br><span class=\"line\"><span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(num1,<span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>]);<span class=\"comment\">//1 2</span></span><br><span class=\"line\">num1 = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(num1,<span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>]);<span class=\"comment\">//10 2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test(<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<p><strong>注：当形参并没有对应的实参时，arguments对象的值与形参的值并不对应</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\">num1,num2</span>)</span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(num1,<span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>]);<span class=\"comment\">//undefined,undefined</span></span><br><span class=\"line\">num1 = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>] = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(num1,<span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>]);<span class=\"comment\">//10,5</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test();</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"7-3-对象参数\"><a href=\"#7-3-对象参数\" class=\"headerlink\" title=\"7.3. 对象参数\"></a>7.3. 对象参数</h5><p>可以通过名/值对的形式来传入参数，这样参数的顺序就无关紧要了。定义函数的时候，传入的实参都写入一个单独的对象之中，在调用的时候传入一个对象，对象中的名/值对是真正需要的实参数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">easycopy</span>(<span class=\"params\">args</span>)</span>&#123;</span><br><span class=\"line\">arraycopy(args.from,args.form_start || <span class=\"number\">0</span>,args.to,args.to_start || <span class=\"number\">0</span>, args.length);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>],b =[];</span><br><span class=\"line\">easycopy(&#123;<span class=\"attr\">form</span>:a,<span class=\"attr\">to</span>:b,<span class=\"attr\">length</span>:<span class=\"number\">4</span>&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"8-函数的内部属性\"><a href=\"#8-函数的内部属性\" class=\"headerlink\" title=\"8. 函数的内部属性\"></a>8. 函数的内部属性</h4><p><strong>一、callee</strong></p>\n<p>arguments的作用是保存传入函数中的所有参数，而且这个arguments有一个名叫callee的属性，这个属性是一个指针，指向拥有arguments对象的函数。</p>\n<p>举个递归算法—阶乘函数的例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">factorial</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(num&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num*factorial(num<span class=\"number\">-1</span>)</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面的代码，在函数有名字，而且名字以后也不会变的情况下，这样定义没有啥问题。不过，这样这个函数的执行与函数名紧紧耦合在一起了。所以为了消除这种紧密耦合，我们可以使用arguments.callee。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">factorial</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(num&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num*<span class=\"built_in\">arguments</span>.callee(num<span class=\"number\">-1</span>)</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样，无论引用函数时使用什么名字，都可以保证正常完成递归调用。举个例子：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> trueFactorial = factorial;</span><br><span class=\"line\">factorial = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(trueFactorial(<span class=\"number\">5</span>));      <span class=\"comment\">//120</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(factorial(<span class=\"number\">5</span>));          <span class=\"comment\">//0</span></span><br></pre></td></tr></table></figure></p>\n<p>变量trueFactorial获得了factorial的值，实际上是在另一个位置上保存了一个函数的指针。然后我们又把一个返回0的函数赋值给factorial变量。如果像原来的factorial()不使用arguments.callee，那么调用trueFactorial()就会返回0。但是，在解除了耦合之后，trueFactorial()依然能够正常的计算阶乘。而再次被赋值的factorial()，只能按照重新赋给的值进行计算。</p>\n<p>严格模式下，不能通过脚本访问arguments.callee，可以使用命名函数表达式来达成相同的结果，栗如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> factorial = (<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\">num</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num &lt;= <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num * f(num<span class=\"number\">-1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>以上代码创建了一个名为f()的命名函数表达式，然后将它赋值给变量factorial。即便把函数赋值给了另一个变量，函数的名字f依然有效。这种方式在严格模式和非严格模式下都行得通。</p>\n<p><strong>二、this</strong></p>\n<p>this引用的是函数执行的环境对象，当在网页的全局作用域中调用函数时，this对象引用的就是window。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.color = <span class=\"string\">\"red\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o = &#123; <span class=\"attr\">color</span>: <span class=\"string\">\"blue\"</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayColor</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.color);  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">sayColor();      <span class=\"comment\">// \"red\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">o.sayColor = sayColor;</span><br><span class=\"line\">o.sayColor();    <span class=\"comment\">// \"blue\"</span></span><br></pre></td></tr></table></figure>\n<p>函数sayColor()在全局作用域中定义，并且引用了this对象。在这个函数调用之前，this的值并不确定，<strong>所以this可能在代码执行过程中引用不同的对象</strong>。</p>\n<p>当在全局作用域调用sayColor()，那么this引用的是全局对象window，换句话说就是，对this.color求值会转换成对window.color求值，所以结果就是“red”。</p>\n<p>当把这个函数赋值给对象o并调用o.sayColor()时，this引用的是对象o，因此对this.color求值会转换成对o.color求值，所以结果就是“blue”。</p>\n<p><strong>注：函数的名字仅仅是一个包含指针的变量，所以在不同的环境下执行，全局的sayColor()函数与o.sayColor()指向的仍然是同一个函数。</strong></p>\n<p><strong>三、caller</strong></p>\n<p>函数的caller属性保存着调用当前函数的函数的引用，<strong>如果是在全局作用域中调用当前函数，它的值是null</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">outer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">inner();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inner</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(inner.caller);<span class=\"comment\">//outer()&#123;inner();&#125;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">outer(); </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">inner</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(inner.caller);<span class=\"comment\">//null</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">inner();</span><br></pre></td></tr></table></figure></p>\n<p><strong>注： 在严格模式下，访问这个属性会抛出TypeError错误</strong></p>\n<h4 id=\"9-函数重载\"><a href=\"#9-函数重载\" class=\"headerlink\" title=\"9. 函数重载\"></a>9. 函数重载</h4><p>js 没有函数重载，<strong>同名即会覆盖，即便参数不同</strong>！！</p>\n<h4 id=\"10-参数类型\"><a href=\"#10-参数类型\" class=\"headerlink\" title=\"10. 参数类型\"></a>10. 参数类型</h4><p> javascript中所有函数的参数都是按值传递的。也就是说，把函数外部的值复制到函数内部的参数，就和把值从一个变量复制到另一个变量一样。<strong>但是，对于基本类型和引用类型是有区别的</strong></p>\n<h5 id=\"10-1-基本类型\"><a href=\"#10-1-基本类型\" class=\"headerlink\" title=\"10.1. 基本类型\"></a>10.1. 基本类型</h5><p>在向参数传递基本类型的值时，被传递的值会被复制给一个局部变量(命名参数或arguments对象的一个元素)，参数值的改变  <strong>不会 </strong> 反映在函数外部。</p>\n<h5 id=\"10-1-引用类型\"><a href=\"#10-1-引用类型\" class=\"headerlink\" title=\"10.1. 引用类型\"></a>10.1. 引用类型</h5><p>在向参数传递引用类型的值时，会把这个值在内存中的地址复制给一个局部变量，因此这个局部变量的变化 <strong>会 </strong> 反映在函数的外部<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setName</span>(<span class=\"params\">obj</span>)</span>&#123;</span><br><span class=\"line\">obj.name = <span class=\"string\">'test'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">setName(person);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name);<span class=\"comment\">//'test'</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>注：当在函数内部重写引用类型的形参时，这个变量引用的就是一个局部对象了。而这个局部对象会在函数执行完毕后立即被销毁（<em>如果按照类似c++的按引用传递参数&amp;obj，当在函数中这个地址被指向另一个对象后，函数外的原参数也会改变</em>）</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setName</span>(<span class=\"params\">obj</span>)</span>&#123;</span><br><span class=\"line\">obj.name = <span class=\"string\">'test'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name);<span class=\"comment\">//'test'</span></span><br><span class=\"line\">obj = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">obj.name = <span class=\"string\">'white'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name);<span class=\"comment\">//'test'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">setName(person);</span><br></pre></td></tr></table></figure>\n<h4 id=\"11-与或赋值小技巧\"><a href=\"#11-与或赋值小技巧\" class=\"headerlink\" title=\"11. 与或赋值小技巧\"></a>11. 与或赋值小技巧</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span>  a =  obj || <span class=\"string\">\" \"</span>  ;   <span class=\"comment\">//如果 obj 为空，a就赋值为 \" \" ；</span></span><br><span class=\"line\"><span class=\"keyword\">var</span>  a = check() &amp;&amp;  <span class=\"keyword\">do</span>(); <span class=\"comment\">//如果check()返回为真，就执行do()并将结果赋值给 a;</span></span><br></pre></td></tr></table></figure>"},{"title":"TOEFL-writing-01","date":"2018-11-19T22:19:39.000Z","_content":"<!doctype html>\n\n\n\n  \n\n\n<html class=\"theme-next muse use-motion\" lang=\"en\">\n<head>\n  <!-- hexo-inject:begin --><!-- hexo-inject:end --><meta charset=\"UTF-8\"/>\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"/>\n\n\n\n<meta http-equiv=\"Cache-Control\" content=\"no-transform\" />\n<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n  <link href=\"/lib/fancybox/source/jquery.fancybox.css?v=2.1.5\" rel=\"stylesheet\" type=\"text/css\" />\n\n\n\n\n  \n  \n  \n  \n\n  \n    \n    \n  \n\n  \n\n  \n\n  \n\n  \n\n  \n    \n    \n    <link href=\"//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic&subset=latin,latin-ext\" rel=\"stylesheet\" type=\"text/css\">\n  \n\n\n\n\n\n\n<link href=\"/lib/font-awesome/css/font-awesome.min.css?v=4.6.2\" rel=\"stylesheet\" type=\"text/css\" />\n\n<link href=\"/css/main.css?v=5.1.0\" rel=\"stylesheet\" type=\"text/css\" />\n\n\n  <meta name=\"keywords\" content=\"TOELF, writing,\" />\n\n\n\n\n\n\n\n\n  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico?v=5.1.0\" />\n\n\n\n\n\n\n<meta name=\"description\" content=\"Educatiuon011.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.Agree\n foster one’s rational thinking\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:title\" content=\"TOEFL-writing-01-independent-Educatiuon01\">\n<meta property=\"og:url\" content=\"http://yoursite.com/2017/03/06/TOEFL-writing-01/index.html\">\n<meta property=\"og:site_name\" content=\"Nocis' workshop\">\n<meta property=\"og:description\" content=\"Educatiuon011.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.Agree\n foster one’s rational thinking\">\n<meta property=\"og:updated_time\" content=\"2017-03-30T16:37:13.694Z\">\n<meta name=\"twitter:card\" content=\"summary\">\n<meta name=\"twitter:title\" content=\"TOEFL-writing-01-independent-Educatiuon01\">\n<meta name=\"twitter:description\" content=\"Educatiuon011.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.Agree\n foster one’s rational thinking\">\n\n\n\n<script type=\"text/javascript\" id=\"hexo.configurations\">\n  var NexT = window.NexT || {};\n  var CONFIG = {\n    root: '/',\n    scheme: 'Muse',\n    sidebar: {\"position\":\"left\",\"display\":\"post\"},\n    fancybox: true,\n    motion: true,\n    duoshuo: {\n      userId: '0',\n      author: 'Author'\n    },\n    algolia: {\n      applicationID: '',\n      apiKey: '',\n      indexName: '',\n      hits: {\"per_page\":10},\n      labels: {\"input_placeholder\":\"Search for Posts\",\"hits_empty\":\"We didn't find any results for the search: ${query}\",\"hits_stats\":\"${hits} results found in ${time} ms\"}\n    }\n  };\n</script>\n\n\n\n  <link rel=\"canonical\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01/\"/>\n\n\n\n\n\n  <title> TOEFL-writing-01-independent-Educatiuon01 | Nocis' workshop </title><!-- hexo-inject:begin --><!-- hexo-inject:end -->\n</head>\n\n<body itemscope itemtype=\"http://schema.org/WebPage\" lang=\"en\">\n\n  \n\n\n\n\n\n\n\n\n\n\n  \n  \n    \n  \n\n  <!-- hexo-inject:begin --><!-- hexo-inject:end --><div class=\"container one-collumn sidebar-position-left page-post-detail \">\n    <div class=\"headband\"></div>\n\n    <header id=\"header\" class=\"header\" itemscope itemtype=\"http://schema.org/WPHeader\">\n      <div class=\"header-inner\"><div class=\"site-meta \">\n  \n\n  <div class=\"custom-logo-site-title\">\n    <a href=\"/\"  class=\"brand\" rel=\"start\">\n      <span class=\"logo-line-before\"><i></i></span>\n      <span class=\"site-title\">Nocis' workshop</span>\n      <span class=\"logo-line-after\"><i></i></span>\n    </a>\n  </div>\n    \n      <p class=\"site-subtitle\"></p>\n    \n</div>\n\n<div class=\"site-nav-toggle\">\n  <button>\n    <span class=\"btn-bar\"></span>\n    <span class=\"btn-bar\"></span>\n    <span class=\"btn-bar\"></span>\n  </button>\n</div>\n\n<nav class=\"site-nav\">\n  \n\n  \n    <ul id=\"menu\" class=\"menu\">\n      \n        \n        <li class=\"menu-item menu-item-home\">\n          <a href=\"/\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-home\"></i> <br />\n            \n            Home\n          </a>\n        </li>\n      \n        \n        <li class=\"menu-item menu-item-categories\">\n          <a href=\"/categories\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-th\"></i> <br />\n            \n            Categories\n          </a>\n        </li>\n      \n        \n        <li class=\"menu-item menu-item-archives\">\n          <a href=\"/archives\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-archive\"></i> <br />\n            \n            Archives\n          </a>\n        </li>\n      \n        \n        <li class=\"menu-item menu-item-tags\">\n          <a href=\"/tags\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-tags\"></i> <br />\n            \n            Tags\n          </a>\n        </li>\n      \n\n      \n    </ul>\n  \n\n  \n</nav>\n\n\n\n </div>\n    </header>\n\n    <main id=\"main\" class=\"main\">\n      <div class=\"main-inner\">\n        <div class=\"content-wrap\">\n          <div id=\"content\" class=\"content\">\n            \n\n  <div id=\"posts\" class=\"posts-expand\">\n    \n\n  \n\n  \n  \n  \n\n  <article class=\"post post-type-normal \" itemscope itemtype=\"http://schema.org/Article\">\n  <link itemprop=\"mainEntityOfPage\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01/\">\n\n  <span style=\"display:none\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n    <meta itemprop=\"name\" content=\"Nocis\">\n    <meta itemprop=\"description\" content=\"\">\n    <meta itemprop=\"image\" content=\"/images/avatar.gif\">\n  </span>\n\n  <span style=\"display:none\" itemprop=\"publisher\" itemscope itemtype=\"http://schema.org/Organization\">\n    <meta itemprop=\"name\" content=\"Nocis' workshop\">\n    <span style=\"display:none\" itemprop=\"logo\" itemscope itemtype=\"http://schema.org/ImageObject\">\n      <img style=\"display:none;\" itemprop=\"url image\" alt=\"Nocis' workshop\" src=\"\">\n    </span>\n  </span>\n\n    \n      <header class=\"post-header\">\n\n        \n        \n          <h1 class=\"post-title\" itemprop=\"name headline\">\n            \n            \n              \n                TOEFL-writing-01-independent-Educatiuon01\n              \n            \n          </h1>\n        \n\n        <div class=\"post-meta\">\n          <span class=\"post-time\">\n            \n              <span class=\"post-meta-item-icon\">\n                <i class=\"fa fa-calendar-o\"></i>\n              </span>\n              \n                <span class=\"post-meta-item-text\">Posted on</span>\n              \n              <time title=\"Post created\" itemprop=\"dateCreated datePublished\" datetime=\"2017-03-06T11:45:41+08:00\">\n                2017-03-06\n              </time>\n            \n\n            \n\n            \n          </span>\n\n          \n            <span class=\"post-category\" >\n            \n              <span class=\"post-meta-divider\">|</span>\n            \n              <span class=\"post-meta-item-icon\">\n                <i class=\"fa fa-folder-o\"></i>\n              </span>\n              \n                <span class=\"post-meta-item-text\">In</span>\n              \n              \n                <span itemprop=\"about\" itemscope itemtype=\"http://schema.org/Thing\">\n                  <a href=\"/categories/TOELF-writing/\" itemprop=\"url\" rel=\"index\">\n                    <span itemprop=\"name\">TOELF, writing</span>\n                  </a>\n                </span>\n\n                \n                \n              \n            </span>\n          \n\n          \n            \n          \n\n          \n\n          \n          \n\n          \n\n          \n\n        </div>\n      </header>\n    \n\n\n    <div class=\"post-body\" itemprop=\"articleBody\">\n\n      \n      \n\n      \n        <h1 id=\"Educatiuon01\"><a href=\"#Educatiuon01\" class=\"headerlink\" title=\"Educatiuon01\"></a>Educatiuon01</h1><h4 id=\"1-1-Do-you-agree-or-disagree-with-the-following-statement-All-the-university-students-should-take-history-courses-no-matter-what-field-they-major-in\"><a href=\"#1-1-Do-you-agree-or-disagree-with-the-following-statement-All-the-university-students-should-take-history-courses-no-matter-what-field-they-major-in\" class=\"headerlink\" title=\"1.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.\"></a>1.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.</h4><h4 id=\"Agree\"><a href=\"#Agree\" class=\"headerlink\" title=\"Agree\"></a>Agree</h4><ol>\n<li><font color=\"blue\"> foster one’s rational thinking and critical thought</font> 培养理性思维和批判思维 </li>\n<li><font color=\"blue\"> get a clear perspective of oneself   </font> 了解自己 </li>\n<li><font color=\"blue\"> make sound judgment on</font> 对于……做出理性的判断 </li>\n<li><font color=\"blue\"> enhance one’s literacy</font> 增强一个人的读写能力  </li>\n<li><font color=\"blue\"> avoid making similar mistakes</font> 避免犯相似的错误 </li>\n<li><font color=\"blue\"> enlarge one’s scope of knowledge</font> 增加知识面 </li>\n<li><font color=\"blue\">broaden one’s mental horizons </font>拓宽视野 </li>\n<li>expand one’s mind 开拓视野(口语推荐) </li>\n<li><font color=\"blue\">learn the relevant experiences from the historical events</font> 从历史事件中学习相关经验 </li>\n<li><font color=\"blue\">take history as a mirror</font> 以史为鉴 </li>\n<li><font color=\"blue\">mature one’s thought </font> 成熟思想 </li>\n<li><font color=\"blue\"> successful figures </font> 成功的人</li>\n<li><font color=\"blue\"> mirroring the experiences of failure </font>学习失败教训</li>\n<li><font color=\"blue\">The difficulty is the best helper for steeling will </font> 困难是磨练意志最好的帮手</li>\n</ol>\n<h4 id=\"Disagree\"><a href=\"#Disagree\" class=\"headerlink\" title=\"Disagree\"></a>Disagree</h4><ol>\n<li><font color=\"blue\">if one’s major is totally irrelevant to history</font> 如果一个人的专业和历史完全无关<font color=\"red\"><p>解析：such as botany or zoology 例如动物学和动物性 </p></font><p></p></li>\n<li><font color=\"blue\"> to learn history will distract one’s energy and waster one’s time</font>学习历史会分散精力，浪费时间 </li>\n<li><font color=\"blue\"> have nothing to do with our current life </font>和我们当前的生活联系不大 </li>\n</ol>\n<h4 id=\"Opening-Paragraph\"><a href=\"#Opening-Paragraph\" class=\"headerlink\" title=\"Opening Paragraph\"></a>Opening Paragraph</h4><ol>\n<li>There is no denying that …</li>\n</ol>\n<h4 id=\"state-point\"><a href=\"#state-point\" class=\"headerlink\" title=\"state point\"></a>state point</h4><ol>\n<li>this view doesn’t hold water 这一观点是站不住脚的 </li>\n<li>Reasonable as it may sound, I do not think this view can hold the water 听起来很合理，但我认为这种观点不可能成立 </li>\n<li>I agree with this idea for a few reasons.</li>\n<li>It is because of these that you will be better at English</li>\n<li>This virtually to the student’s quality put forward higher requirements</li>\n<li>strengthens 加强</li>\n<li>cultural deposits 文化底蕴</li>\n<li>committing blunders 犯错误</li>\n<li>sound judgment 正确的判断</li>\n<li>absorb experience</li>\n<li>by means of 依靠</li>\n<li>take a keen interest in 对…有浓厚的兴趣 </li>\n<li>reading extensively 广泛阅读</li>\n<li>conduces to 有助于</li>\n<li>everyone has an obligation to </li>\n<li>put more academic pressures</li>\n</ol>\n<h4 id=\"Model-Essay\"><a href=\"#Model-Essay\" class=\"headerlink\" title=\"Model Essay\"></a>Model Essay</h4><p>University courses lay a very solid foundation for the future development of college students. Facing the great selections of these courses, some people say that history classes should be made compulsory for college students, for the reason that they could be more familiar with the advancement and evolution of human society. I disagree. I believe, despite minor merits, asking student of all major to attend history classes would cause problems.</p>\n<h4 id=\"My-imitation\"><a href=\"#My-imitation\" class=\"headerlink\" title=\" My imitation \"></a><font color=\"red\"> My imitation </font></h4><p>There is no denying that selecting courses is very important to college students, which affect students’ future development a lot. Some people say that history courses should be taken by all college students, I agree with this idea for a few reasons.</p>\n<p>The main reason that I approve of this view is that learning history could enlarge students’ scope of knowledge, which help students foster their rational and critical thought. For example, an engineering student may never know about the birth of his major if he doesn’t learn history. It is because of this irrelevant history knowledge that we mature our thought. Moreover, students have put forward higher requirements in today’s world. They are supposed to be more well-rounded, therefore, learning curricula, such as history, is essential.</p>\n<p>In general, having a good knowledge of history not only strengthens students’ cultural deposits, but also helps them learn to take history as a mirror, which could help students absorb the relevant experiences from the historical events to avoid committing similar blunders and make sound judgment. Many successful people attribute their success to the habit of reading history, they take a keen interest in studying history and reading extensively, which contribute to their later achievements in personal career. In other words, they benefit from the past histories rely on learning successful figures and mirroring the experiences of failure. According to them, we could find that studying history indeed facilitate our adolescent no matter what field we major in.</p>\n<p>In addition, traditional culture has become a gene of our nation, learning history is an important way to help our national cultural heritage. As a citizen, everyone has an obligation to passing on our culture. The long history finally breeds our glorious culture over thousands of years, which subtly influenced our thinking and behavior, and root in our inside deeply. History witness all the progress and evolutions, nothing could be better than learning history to inherit our culture.</p>\n<p>Admittedly, learning history does have some drawbacks. On one side, students must spend more time in history courses, which means they have less time on their major, it would put more academic pressures on students. On the other hand, for some students who doesn’t like history, the compulsory history class is a torture, which may influence the score seriously. </p>\n<p>In conclusion, although there are some drawbacks of compulsion of history class, making every college student take history course would bring them more possibilities in the future. Besides, those difficulties would be the best helper for steeling will.</p>\n\n      \n    </div>\n\n    <div>\n      \n        \n\n      \n    </div>\n\n    <div>\n      \n        \n\n      \n    </div>\n\n\n    <footer class=\"post-footer\">\n      \n        <div class=\"post-tags\">\n          \n            <a href=\"/tags/TOELF-writing/\" rel=\"tag\"># TOELF, writing</a>\n          \n        </div>\n      \n\n      \n        <div class=\"post-nav\">\n          <div class=\"post-nav-next post-nav-item\">\n            \n              <a href=\"/2017/03/06/Data Mining/\" rel=\"next\" title=\"What is data?\">\n                <i class=\"fa fa-chevron-left\"></i> What is data?\n              </a>\n            \n          </div>\n\n          <span class=\"post-nav-divider\"></span>\n\n          <div class=\"post-nav-prev post-nav-item\">\n            \n              <a href=\"/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/\" rel=\"prev\" title=\"TOEFL-writing-01-independent-grammar01-subject\">\n                TOEFL-writing-01-independent-grammar01-subject <i class=\"fa fa-chevron-right\"></i>\n              </a>\n            \n          </div>\n        </div>\n      \n\n      \n      \n    </footer>\n  </article>\n\n\n\n    <div class=\"post-spread\">\n      \n    </div>\n  </div>\n\n          \n          </div>\n          \n\n\n          \n  <div class=\"comments\" id=\"comments\">\n    \n  </div>\n\n\n        </div>\n        \n          \n  \n  <div class=\"sidebar-toggle\">\n    <div class=\"sidebar-toggle-line-wrap\">\n      <span class=\"sidebar-toggle-line sidebar-toggle-line-first\"></span>\n      <span class=\"sidebar-toggle-line sidebar-toggle-line-middle\"></span>\n      <span class=\"sidebar-toggle-line sidebar-toggle-line-last\"></span>\n    </div>\n  </div>\n\n  <aside id=\"sidebar\" class=\"sidebar\">\n    <div class=\"sidebar-inner\">\n\n      \n\n      \n        <ul class=\"sidebar-nav motion-element\">\n          <li class=\"sidebar-nav-toc sidebar-nav-active\" data-target=\"post-toc-wrap\" >\n            Table of Contents\n          </li>\n          <li class=\"sidebar-nav-overview\" data-target=\"site-overview\">\n            Overview\n          </li>\n        </ul>\n      \n\n      <section class=\"site-overview sidebar-panel\">\n        <div class=\"site-author motion-element\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n          <img class=\"site-author-image\" itemprop=\"image\"\n               src=\"/images/avatar.gif\"\n               alt=\"Nocis\" />\n          <p class=\"site-author-name\" itemprop=\"name\">Nocis</p>\n          <p class=\"site-description motion-element\" itemprop=\"description\"></p>\n        </div>\n        <nav class=\"site-state motion-element\">\n        \n          \n            <div class=\"site-state-item site-state-posts\">\n              <a href=\"/archives\">\n                <span class=\"site-state-item-count\">5</span>\n                <span class=\"site-state-item-name\">posts</span>\n              </a>\n            </div>\n          \n\n          \n            <div class=\"site-state-item site-state-categories\">\n              <a href=\"/categories\">\n                <span class=\"site-state-item-count\">3</span>\n                <span class=\"site-state-item-name\">categories</span>\n              </a>\n            </div>\n          \n\n          \n            <div class=\"site-state-item site-state-tags\">\n              <a href=\"/tags\">\n                <span class=\"site-state-item-count\">3</span>\n                <span class=\"site-state-item-name\">tags</span>\n              </a>\n            </div>\n          \n\n        </nav>\n\n        \n\n        <div class=\"links-of-author motion-element\">\n          \n        </div>\n\n        \n        \n\n        \n        \n\n        \n\n\n      </section>\n\n      \n      <!--noindex-->\n        <section class=\"post-toc-wrap motion-element sidebar-panel sidebar-panel-active\">\n          <div class=\"post-toc\">\n\n            \n              \n            \n\n            \n              <div class=\"post-toc-content\"><ol class=\"nav\"><li class=\"nav-item nav-level-1\"><a class=\"nav-link\" href=\"#Educatiuon01\"><span class=\"nav-number\">1.</span> <span class=\"nav-text\">Educatiuon01</span></a><ol class=\"nav-child\"><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#1-1-Do-you-agree-or-disagree-with-the-following-statement-All-the-university-students-should-take-history-courses-no-matter-what-field-they-major-in\"><span class=\"nav-number\">1.0.0.1.</span> <span class=\"nav-text\">1.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Agree\"><span class=\"nav-number\">1.0.0.2.</span> <span class=\"nav-text\">Agree</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Disagree\"><span class=\"nav-number\">1.0.0.3.</span> <span class=\"nav-text\">Disagree</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Opening-Paragraph\"><span class=\"nav-number\">1.0.0.4.</span> <span class=\"nav-text\">Opening Paragraph</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#state-point\"><span class=\"nav-number\">1.0.0.5.</span> <span class=\"nav-text\">state point</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Model-Essay\"><span class=\"nav-number\">1.0.0.6.</span> <span class=\"nav-text\">Model Essay</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#My-imitation\"><span class=\"nav-number\">1.0.0.7.</span> <span class=\"nav-text\"> My imitation </span></a></li></ol></li></ol></li></ol></li></ol></div>\n            \n\n          </div>\n        </section>\n      <!--/noindex-->\n      \n\n    </div>\n  </aside>\n\n\n        \n      </div>\n    </main>\n\n    <footer id=\"footer\" class=\"footer\">\n      <div class=\"footer-inner\">\n        <div class=\"copyright\" >\n  \n  &copy; \n  <span itemprop=\"copyrightYear\">2017</span>\n  <span class=\"with-love\">\n    <i class=\"fa fa-heart\"></i>\n  </span>\n  <span class=\"author\" itemprop=\"copyrightHolder\">Nocis</span>\n</div>\n\n\n<div class=\"powered-by\">\n  Powered by <a class=\"theme-link\" href=\"https://hexo.io\">Hexo</a>\n</div>\n\n<div class=\"theme-info\">\n  Theme -\n  <a class=\"theme-link\" href=\"https://github.com/iissnan/hexo-theme-next\">\n    NexT.Muse\n  </a>\n</div>\n\n\n        \n\n        \n      </div>\n    </footer>\n\n    <div class=\"back-to-top\">\n      <i class=\"fa fa-arrow-up\"></i>\n    </div>\n  </div>\n\n  \n\n<script type=\"text/javascript\">\n  if (Object.prototype.toString.call(window.Promise) !== '[object Function]') {\n    window.Promise = null;\n  }\n</script>\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n  \n  <script type=\"text/javascript\" src=\"/lib/jquery/index.js?v=2.1.3\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/fastclick/lib/fastclick.min.js?v=1.0.6\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/jquery_lazyload/jquery.lazyload.js?v=1.9.7\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.min.js?v=1.2.1\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.ui.min.js?v=1.2.1\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/fancybox/source/jquery.fancybox.pack.js?v=2.1.5\"></script>\n\n\n  \n\n\n  <script type=\"text/javascript\" src=\"/js/src/utils.js?v=5.1.0\"></script>\n\n  <script type=\"text/javascript\" src=\"/js/src/motion.js?v=5.1.0\"></script>\n\n\n\n  \n  \n\n  \n  <script type=\"text/javascript\" src=\"/js/src/scrollspy.js?v=5.1.0\"></script>\n<script type=\"text/javascript\" src=\"/js/src/post-details.js?v=5.1.0\"></script>\n\n\n\n  \n\n\n  <script type=\"text/javascript\" src=\"/js/src/bootstrap.js?v=5.1.0\"></script>\n\n\n\n  \n\n\n\n  \n\n\n\n\n\t\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n      <!-- UY BEGIN -->\n      <script type=\"text/javascript\" src=\"http://v2.uyan.cc/code/uyan.js?uid=\"></script>\n      <!-- UY END --><!-- hexo-inject:begin --><!-- Begin: Injected MathJax -->\n<script type=\"text/x-mathjax-config\">\n  MathJax.Hub.Config({\"tex2jax\":{\"inlineMath\":[[\"$\",\"$\"],[\"\\\\(\",\"\\\\)\"]],\"skipTags\":[\"script\",\"noscript\",\"style\",\"textarea\",\"pre\",\"code\"],\"processEscapes\":true},\"TeX\":{\"equationNumbers\":{\"autoNumber\":\"AMS\"}}});\n</script>\n\n<script type=\"text/x-mathjax-config\">\n  MathJax.Hub.Queue(function() {\n    var all = MathJax.Hub.getAllJax(), i;\n    for(i=0; i < all.length; i += 1) {\n      all[i].SourceElement().parentNode.className += ' has-jax';\n    }\n  });\n</script>\n\n<script type=\"text/javascript\" src=\"//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<!-- End: Injected MathJax -->\n<!-- hexo-inject:end -->\n  \n\n\n\n\n  \n  \n\n  \n\n  \n\n  \n\n  \n\n\n</body>\n</html>\n","source":"_posts/TOEFL-writing-01.md","raw":"---\ntitle: TOEFL-writing-01\ndate: 2018-11-20 06:19:39\ntags:\n---\n<!doctype html>\n\n\n\n  \n\n\n<html class=\"theme-next muse use-motion\" lang=\"en\">\n<head>\n  <!-- hexo-inject:begin --><!-- hexo-inject:end --><meta charset=\"UTF-8\"/>\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"/>\n\n\n\n<meta http-equiv=\"Cache-Control\" content=\"no-transform\" />\n<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n  <link href=\"/lib/fancybox/source/jquery.fancybox.css?v=2.1.5\" rel=\"stylesheet\" type=\"text/css\" />\n\n\n\n\n  \n  \n  \n  \n\n  \n    \n    \n  \n\n  \n\n  \n\n  \n\n  \n\n  \n    \n    \n    <link href=\"//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic&subset=latin,latin-ext\" rel=\"stylesheet\" type=\"text/css\">\n  \n\n\n\n\n\n\n<link href=\"/lib/font-awesome/css/font-awesome.min.css?v=4.6.2\" rel=\"stylesheet\" type=\"text/css\" />\n\n<link href=\"/css/main.css?v=5.1.0\" rel=\"stylesheet\" type=\"text/css\" />\n\n\n  <meta name=\"keywords\" content=\"TOELF, writing,\" />\n\n\n\n\n\n\n\n\n  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico?v=5.1.0\" />\n\n\n\n\n\n\n<meta name=\"description\" content=\"Educatiuon011.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.Agree\n foster one’s rational thinking\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:title\" content=\"TOEFL-writing-01-independent-Educatiuon01\">\n<meta property=\"og:url\" content=\"http://yoursite.com/2017/03/06/TOEFL-writing-01/index.html\">\n<meta property=\"og:site_name\" content=\"Nocis' workshop\">\n<meta property=\"og:description\" content=\"Educatiuon011.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.Agree\n foster one’s rational thinking\">\n<meta property=\"og:updated_time\" content=\"2017-03-30T16:37:13.694Z\">\n<meta name=\"twitter:card\" content=\"summary\">\n<meta name=\"twitter:title\" content=\"TOEFL-writing-01-independent-Educatiuon01\">\n<meta name=\"twitter:description\" content=\"Educatiuon011.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.Agree\n foster one’s rational thinking\">\n\n\n\n<script type=\"text/javascript\" id=\"hexo.configurations\">\n  var NexT = window.NexT || {};\n  var CONFIG = {\n    root: '/',\n    scheme: 'Muse',\n    sidebar: {\"position\":\"left\",\"display\":\"post\"},\n    fancybox: true,\n    motion: true,\n    duoshuo: {\n      userId: '0',\n      author: 'Author'\n    },\n    algolia: {\n      applicationID: '',\n      apiKey: '',\n      indexName: '',\n      hits: {\"per_page\":10},\n      labels: {\"input_placeholder\":\"Search for Posts\",\"hits_empty\":\"We didn't find any results for the search: ${query}\",\"hits_stats\":\"${hits} results found in ${time} ms\"}\n    }\n  };\n</script>\n\n\n\n  <link rel=\"canonical\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01/\"/>\n\n\n\n\n\n  <title> TOEFL-writing-01-independent-Educatiuon01 | Nocis' workshop </title><!-- hexo-inject:begin --><!-- hexo-inject:end -->\n</head>\n\n<body itemscope itemtype=\"http://schema.org/WebPage\" lang=\"en\">\n\n  \n\n\n\n\n\n\n\n\n\n\n  \n  \n    \n  \n\n  <!-- hexo-inject:begin --><!-- hexo-inject:end --><div class=\"container one-collumn sidebar-position-left page-post-detail \">\n    <div class=\"headband\"></div>\n\n    <header id=\"header\" class=\"header\" itemscope itemtype=\"http://schema.org/WPHeader\">\n      <div class=\"header-inner\"><div class=\"site-meta \">\n  \n\n  <div class=\"custom-logo-site-title\">\n    <a href=\"/\"  class=\"brand\" rel=\"start\">\n      <span class=\"logo-line-before\"><i></i></span>\n      <span class=\"site-title\">Nocis' workshop</span>\n      <span class=\"logo-line-after\"><i></i></span>\n    </a>\n  </div>\n    \n      <p class=\"site-subtitle\"></p>\n    \n</div>\n\n<div class=\"site-nav-toggle\">\n  <button>\n    <span class=\"btn-bar\"></span>\n    <span class=\"btn-bar\"></span>\n    <span class=\"btn-bar\"></span>\n  </button>\n</div>\n\n<nav class=\"site-nav\">\n  \n\n  \n    <ul id=\"menu\" class=\"menu\">\n      \n        \n        <li class=\"menu-item menu-item-home\">\n          <a href=\"/\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-home\"></i> <br />\n            \n            Home\n          </a>\n        </li>\n      \n        \n        <li class=\"menu-item menu-item-categories\">\n          <a href=\"/categories\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-th\"></i> <br />\n            \n            Categories\n          </a>\n        </li>\n      \n        \n        <li class=\"menu-item menu-item-archives\">\n          <a href=\"/archives\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-archive\"></i> <br />\n            \n            Archives\n          </a>\n        </li>\n      \n        \n        <li class=\"menu-item menu-item-tags\">\n          <a href=\"/tags\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-tags\"></i> <br />\n            \n            Tags\n          </a>\n        </li>\n      \n\n      \n    </ul>\n  \n\n  \n</nav>\n\n\n\n </div>\n    </header>\n\n    <main id=\"main\" class=\"main\">\n      <div class=\"main-inner\">\n        <div class=\"content-wrap\">\n          <div id=\"content\" class=\"content\">\n            \n\n  <div id=\"posts\" class=\"posts-expand\">\n    \n\n  \n\n  \n  \n  \n\n  <article class=\"post post-type-normal \" itemscope itemtype=\"http://schema.org/Article\">\n  <link itemprop=\"mainEntityOfPage\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01/\">\n\n  <span style=\"display:none\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n    <meta itemprop=\"name\" content=\"Nocis\">\n    <meta itemprop=\"description\" content=\"\">\n    <meta itemprop=\"image\" content=\"/images/avatar.gif\">\n  </span>\n\n  <span style=\"display:none\" itemprop=\"publisher\" itemscope itemtype=\"http://schema.org/Organization\">\n    <meta itemprop=\"name\" content=\"Nocis' workshop\">\n    <span style=\"display:none\" itemprop=\"logo\" itemscope itemtype=\"http://schema.org/ImageObject\">\n      <img style=\"display:none;\" itemprop=\"url image\" alt=\"Nocis' workshop\" src=\"\">\n    </span>\n  </span>\n\n    \n      <header class=\"post-header\">\n\n        \n        \n          <h1 class=\"post-title\" itemprop=\"name headline\">\n            \n            \n              \n                TOEFL-writing-01-independent-Educatiuon01\n              \n            \n          </h1>\n        \n\n        <div class=\"post-meta\">\n          <span class=\"post-time\">\n            \n              <span class=\"post-meta-item-icon\">\n                <i class=\"fa fa-calendar-o\"></i>\n              </span>\n              \n                <span class=\"post-meta-item-text\">Posted on</span>\n              \n              <time title=\"Post created\" itemprop=\"dateCreated datePublished\" datetime=\"2017-03-06T11:45:41+08:00\">\n                2017-03-06\n              </time>\n            \n\n            \n\n            \n          </span>\n\n          \n            <span class=\"post-category\" >\n            \n              <span class=\"post-meta-divider\">|</span>\n            \n              <span class=\"post-meta-item-icon\">\n                <i class=\"fa fa-folder-o\"></i>\n              </span>\n              \n                <span class=\"post-meta-item-text\">In</span>\n              \n              \n                <span itemprop=\"about\" itemscope itemtype=\"http://schema.org/Thing\">\n                  <a href=\"/categories/TOELF-writing/\" itemprop=\"url\" rel=\"index\">\n                    <span itemprop=\"name\">TOELF, writing</span>\n                  </a>\n                </span>\n\n                \n                \n              \n            </span>\n          \n\n          \n            \n          \n\n          \n\n          \n          \n\n          \n\n          \n\n        </div>\n      </header>\n    \n\n\n    <div class=\"post-body\" itemprop=\"articleBody\">\n\n      \n      \n\n      \n        <h1 id=\"Educatiuon01\"><a href=\"#Educatiuon01\" class=\"headerlink\" title=\"Educatiuon01\"></a>Educatiuon01</h1><h4 id=\"1-1-Do-you-agree-or-disagree-with-the-following-statement-All-the-university-students-should-take-history-courses-no-matter-what-field-they-major-in\"><a href=\"#1-1-Do-you-agree-or-disagree-with-the-following-statement-All-the-university-students-should-take-history-courses-no-matter-what-field-they-major-in\" class=\"headerlink\" title=\"1.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.\"></a>1.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.</h4><h4 id=\"Agree\"><a href=\"#Agree\" class=\"headerlink\" title=\"Agree\"></a>Agree</h4><ol>\n<li><font color=\"blue\"> foster one’s rational thinking and critical thought</font> 培养理性思维和批判思维 </li>\n<li><font color=\"blue\"> get a clear perspective of oneself   </font> 了解自己 </li>\n<li><font color=\"blue\"> make sound judgment on</font> 对于……做出理性的判断 </li>\n<li><font color=\"blue\"> enhance one’s literacy</font> 增强一个人的读写能力  </li>\n<li><font color=\"blue\"> avoid making similar mistakes</font> 避免犯相似的错误 </li>\n<li><font color=\"blue\"> enlarge one’s scope of knowledge</font> 增加知识面 </li>\n<li><font color=\"blue\">broaden one’s mental horizons </font>拓宽视野 </li>\n<li>expand one’s mind 开拓视野(口语推荐) </li>\n<li><font color=\"blue\">learn the relevant experiences from the historical events</font> 从历史事件中学习相关经验 </li>\n<li><font color=\"blue\">take history as a mirror</font> 以史为鉴 </li>\n<li><font color=\"blue\">mature one’s thought </font> 成熟思想 </li>\n<li><font color=\"blue\"> successful figures </font> 成功的人</li>\n<li><font color=\"blue\"> mirroring the experiences of failure </font>学习失败教训</li>\n<li><font color=\"blue\">The difficulty is the best helper for steeling will </font> 困难是磨练意志最好的帮手</li>\n</ol>\n<h4 id=\"Disagree\"><a href=\"#Disagree\" class=\"headerlink\" title=\"Disagree\"></a>Disagree</h4><ol>\n<li><font color=\"blue\">if one’s major is totally irrelevant to history</font> 如果一个人的专业和历史完全无关<font color=\"red\"><p>解析：such as botany or zoology 例如动物学和动物性 </p></font><p></p></li>\n<li><font color=\"blue\"> to learn history will distract one’s energy and waster one’s time</font>学习历史会分散精力，浪费时间 </li>\n<li><font color=\"blue\"> have nothing to do with our current life </font>和我们当前的生活联系不大 </li>\n</ol>\n<h4 id=\"Opening-Paragraph\"><a href=\"#Opening-Paragraph\" class=\"headerlink\" title=\"Opening Paragraph\"></a>Opening Paragraph</h4><ol>\n<li>There is no denying that …</li>\n</ol>\n<h4 id=\"state-point\"><a href=\"#state-point\" class=\"headerlink\" title=\"state point\"></a>state point</h4><ol>\n<li>this view doesn’t hold water 这一观点是站不住脚的 </li>\n<li>Reasonable as it may sound, I do not think this view can hold the water 听起来很合理，但我认为这种观点不可能成立 </li>\n<li>I agree with this idea for a few reasons.</li>\n<li>It is because of these that you will be better at English</li>\n<li>This virtually to the student’s quality put forward higher requirements</li>\n<li>strengthens 加强</li>\n<li>cultural deposits 文化底蕴</li>\n<li>committing blunders 犯错误</li>\n<li>sound judgment 正确的判断</li>\n<li>absorb experience</li>\n<li>by means of 依靠</li>\n<li>take a keen interest in 对…有浓厚的兴趣 </li>\n<li>reading extensively 广泛阅读</li>\n<li>conduces to 有助于</li>\n<li>everyone has an obligation to </li>\n<li>put more academic pressures</li>\n</ol>\n<h4 id=\"Model-Essay\"><a href=\"#Model-Essay\" class=\"headerlink\" title=\"Model Essay\"></a>Model Essay</h4><p>University courses lay a very solid foundation for the future development of college students. Facing the great selections of these courses, some people say that history classes should be made compulsory for college students, for the reason that they could be more familiar with the advancement and evolution of human society. I disagree. I believe, despite minor merits, asking student of all major to attend history classes would cause problems.</p>\n<h4 id=\"My-imitation\"><a href=\"#My-imitation\" class=\"headerlink\" title=\" My imitation \"></a><font color=\"red\"> My imitation </font></h4><p>There is no denying that selecting courses is very important to college students, which affect students’ future development a lot. Some people say that history courses should be taken by all college students, I agree with this idea for a few reasons.</p>\n<p>The main reason that I approve of this view is that learning history could enlarge students’ scope of knowledge, which help students foster their rational and critical thought. For example, an engineering student may never know about the birth of his major if he doesn’t learn history. It is because of this irrelevant history knowledge that we mature our thought. Moreover, students have put forward higher requirements in today’s world. They are supposed to be more well-rounded, therefore, learning curricula, such as history, is essential.</p>\n<p>In general, having a good knowledge of history not only strengthens students’ cultural deposits, but also helps them learn to take history as a mirror, which could help students absorb the relevant experiences from the historical events to avoid committing similar blunders and make sound judgment. Many successful people attribute their success to the habit of reading history, they take a keen interest in studying history and reading extensively, which contribute to their later achievements in personal career. In other words, they benefit from the past histories rely on learning successful figures and mirroring the experiences of failure. According to them, we could find that studying history indeed facilitate our adolescent no matter what field we major in.</p>\n<p>In addition, traditional culture has become a gene of our nation, learning history is an important way to help our national cultural heritage. As a citizen, everyone has an obligation to passing on our culture. The long history finally breeds our glorious culture over thousands of years, which subtly influenced our thinking and behavior, and root in our inside deeply. History witness all the progress and evolutions, nothing could be better than learning history to inherit our culture.</p>\n<p>Admittedly, learning history does have some drawbacks. On one side, students must spend more time in history courses, which means they have less time on their major, it would put more academic pressures on students. On the other hand, for some students who doesn’t like history, the compulsory history class is a torture, which may influence the score seriously. </p>\n<p>In conclusion, although there are some drawbacks of compulsion of history class, making every college student take history course would bring them more possibilities in the future. Besides, those difficulties would be the best helper for steeling will.</p>\n\n      \n    </div>\n\n    <div>\n      \n        \n\n      \n    </div>\n\n    <div>\n      \n        \n\n      \n    </div>\n\n\n    <footer class=\"post-footer\">\n      \n        <div class=\"post-tags\">\n          \n            <a href=\"/tags/TOELF-writing/\" rel=\"tag\"># TOELF, writing</a>\n          \n        </div>\n      \n\n      \n        <div class=\"post-nav\">\n          <div class=\"post-nav-next post-nav-item\">\n            \n              <a href=\"/2017/03/06/Data Mining/\" rel=\"next\" title=\"What is data?\">\n                <i class=\"fa fa-chevron-left\"></i> What is data?\n              </a>\n            \n          </div>\n\n          <span class=\"post-nav-divider\"></span>\n\n          <div class=\"post-nav-prev post-nav-item\">\n            \n              <a href=\"/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/\" rel=\"prev\" title=\"TOEFL-writing-01-independent-grammar01-subject\">\n                TOEFL-writing-01-independent-grammar01-subject <i class=\"fa fa-chevron-right\"></i>\n              </a>\n            \n          </div>\n        </div>\n      \n\n      \n      \n    </footer>\n  </article>\n\n\n\n    <div class=\"post-spread\">\n      \n    </div>\n  </div>\n\n          \n          </div>\n          \n\n\n          \n  <div class=\"comments\" id=\"comments\">\n    \n  </div>\n\n\n        </div>\n        \n          \n  \n  <div class=\"sidebar-toggle\">\n    <div class=\"sidebar-toggle-line-wrap\">\n      <span class=\"sidebar-toggle-line sidebar-toggle-line-first\"></span>\n      <span class=\"sidebar-toggle-line sidebar-toggle-line-middle\"></span>\n      <span class=\"sidebar-toggle-line sidebar-toggle-line-last\"></span>\n    </div>\n  </div>\n\n  <aside id=\"sidebar\" class=\"sidebar\">\n    <div class=\"sidebar-inner\">\n\n      \n\n      \n        <ul class=\"sidebar-nav motion-element\">\n          <li class=\"sidebar-nav-toc sidebar-nav-active\" data-target=\"post-toc-wrap\" >\n            Table of Contents\n          </li>\n          <li class=\"sidebar-nav-overview\" data-target=\"site-overview\">\n            Overview\n          </li>\n        </ul>\n      \n\n      <section class=\"site-overview sidebar-panel\">\n        <div class=\"site-author motion-element\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n          <img class=\"site-author-image\" itemprop=\"image\"\n               src=\"/images/avatar.gif\"\n               alt=\"Nocis\" />\n          <p class=\"site-author-name\" itemprop=\"name\">Nocis</p>\n          <p class=\"site-description motion-element\" itemprop=\"description\"></p>\n        </div>\n        <nav class=\"site-state motion-element\">\n        \n          \n            <div class=\"site-state-item site-state-posts\">\n              <a href=\"/archives\">\n                <span class=\"site-state-item-count\">5</span>\n                <span class=\"site-state-item-name\">posts</span>\n              </a>\n            </div>\n          \n\n          \n            <div class=\"site-state-item site-state-categories\">\n              <a href=\"/categories\">\n                <span class=\"site-state-item-count\">3</span>\n                <span class=\"site-state-item-name\">categories</span>\n              </a>\n            </div>\n          \n\n          \n            <div class=\"site-state-item site-state-tags\">\n              <a href=\"/tags\">\n                <span class=\"site-state-item-count\">3</span>\n                <span class=\"site-state-item-name\">tags</span>\n              </a>\n            </div>\n          \n\n        </nav>\n\n        \n\n        <div class=\"links-of-author motion-element\">\n          \n        </div>\n\n        \n        \n\n        \n        \n\n        \n\n\n      </section>\n\n      \n      <!--noindex-->\n        <section class=\"post-toc-wrap motion-element sidebar-panel sidebar-panel-active\">\n          <div class=\"post-toc\">\n\n            \n              \n            \n\n            \n              <div class=\"post-toc-content\"><ol class=\"nav\"><li class=\"nav-item nav-level-1\"><a class=\"nav-link\" href=\"#Educatiuon01\"><span class=\"nav-number\">1.</span> <span class=\"nav-text\">Educatiuon01</span></a><ol class=\"nav-child\"><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#1-1-Do-you-agree-or-disagree-with-the-following-statement-All-the-university-students-should-take-history-courses-no-matter-what-field-they-major-in\"><span class=\"nav-number\">1.0.0.1.</span> <span class=\"nav-text\">1.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Agree\"><span class=\"nav-number\">1.0.0.2.</span> <span class=\"nav-text\">Agree</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Disagree\"><span class=\"nav-number\">1.0.0.3.</span> <span class=\"nav-text\">Disagree</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Opening-Paragraph\"><span class=\"nav-number\">1.0.0.4.</span> <span class=\"nav-text\">Opening Paragraph</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#state-point\"><span class=\"nav-number\">1.0.0.5.</span> <span class=\"nav-text\">state point</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Model-Essay\"><span class=\"nav-number\">1.0.0.6.</span> <span class=\"nav-text\">Model Essay</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#My-imitation\"><span class=\"nav-number\">1.0.0.7.</span> <span class=\"nav-text\"> My imitation </span></a></li></ol></li></ol></li></ol></li></ol></div>\n            \n\n          </div>\n        </section>\n      <!--/noindex-->\n      \n\n    </div>\n  </aside>\n\n\n        \n      </div>\n    </main>\n\n    <footer id=\"footer\" class=\"footer\">\n      <div class=\"footer-inner\">\n        <div class=\"copyright\" >\n  \n  &copy; \n  <span itemprop=\"copyrightYear\">2017</span>\n  <span class=\"with-love\">\n    <i class=\"fa fa-heart\"></i>\n  </span>\n  <span class=\"author\" itemprop=\"copyrightHolder\">Nocis</span>\n</div>\n\n\n<div class=\"powered-by\">\n  Powered by <a class=\"theme-link\" href=\"https://hexo.io\">Hexo</a>\n</div>\n\n<div class=\"theme-info\">\n  Theme -\n  <a class=\"theme-link\" href=\"https://github.com/iissnan/hexo-theme-next\">\n    NexT.Muse\n  </a>\n</div>\n\n\n        \n\n        \n      </div>\n    </footer>\n\n    <div class=\"back-to-top\">\n      <i class=\"fa fa-arrow-up\"></i>\n    </div>\n  </div>\n\n  \n\n<script type=\"text/javascript\">\n  if (Object.prototype.toString.call(window.Promise) !== '[object Function]') {\n    window.Promise = null;\n  }\n</script>\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n  \n  <script type=\"text/javascript\" src=\"/lib/jquery/index.js?v=2.1.3\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/fastclick/lib/fastclick.min.js?v=1.0.6\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/jquery_lazyload/jquery.lazyload.js?v=1.9.7\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.min.js?v=1.2.1\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.ui.min.js?v=1.2.1\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/fancybox/source/jquery.fancybox.pack.js?v=2.1.5\"></script>\n\n\n  \n\n\n  <script type=\"text/javascript\" src=\"/js/src/utils.js?v=5.1.0\"></script>\n\n  <script type=\"text/javascript\" src=\"/js/src/motion.js?v=5.1.0\"></script>\n\n\n\n  \n  \n\n  \n  <script type=\"text/javascript\" src=\"/js/src/scrollspy.js?v=5.1.0\"></script>\n<script type=\"text/javascript\" src=\"/js/src/post-details.js?v=5.1.0\"></script>\n\n\n\n  \n\n\n  <script type=\"text/javascript\" src=\"/js/src/bootstrap.js?v=5.1.0\"></script>\n\n\n\n  \n\n\n\n  \n\n\n\n\n\t\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n      <!-- UY BEGIN -->\n      <script type=\"text/javascript\" src=\"http://v2.uyan.cc/code/uyan.js?uid=\"></script>\n      <!-- UY END --><!-- hexo-inject:begin --><!-- Begin: Injected MathJax -->\n<script type=\"text/x-mathjax-config\">\n  MathJax.Hub.Config({\"tex2jax\":{\"inlineMath\":[[\"$\",\"$\"],[\"\\\\(\",\"\\\\)\"]],\"skipTags\":[\"script\",\"noscript\",\"style\",\"textarea\",\"pre\",\"code\"],\"processEscapes\":true},\"TeX\":{\"equationNumbers\":{\"autoNumber\":\"AMS\"}}});\n</script>\n\n<script type=\"text/x-mathjax-config\">\n  MathJax.Hub.Queue(function() {\n    var all = MathJax.Hub.getAllJax(), i;\n    for(i=0; i < all.length; i += 1) {\n      all[i].SourceElement().parentNode.className += ' has-jax';\n    }\n  });\n</script>\n\n<script type=\"text/javascript\" src=\"//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<!-- End: Injected MathJax -->\n<!-- hexo-inject:end -->\n  \n\n\n\n\n  \n  \n\n  \n\n  \n\n  \n\n  \n\n\n</body>\n</html>\n","slug":"TOEFL-writing-01","published":1,"updated":"2018-11-20T15:04:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14l90025o49uuv48qmwx","content":"<p>&lt;!doctype html&gt;</p>\n<html class=\"theme-next muse use-motion\" lang=\"en\"><br><head><meta name=\"generator\" content=\"Hexo 3.8.0\"><br>  <!-- hexo-inject:begin --><!-- hexo-inject:end --><meta charset=\"UTF-8\"><br><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><br><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"><br><br><br><br><meta http-equiv=\"Cache-Control\" content=\"no-transform\"><br><meta http-equiv=\"Cache-Control\" content=\"no-siteapp\"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>  <link href=\"/lib/fancybox/source/jquery.fancybox.css?v=2.1.5\" rel=\"stylesheet\" type=\"text/css\"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>    <link href=\"//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic&subset=latin,latin-ext\" rel=\"stylesheet\" type=\"text/css\"><br><br><br><br><br><br><br><br><link href=\"/lib/font-awesome/css/font-awesome.min.css?v=4.6.2\" rel=\"stylesheet\" type=\"text/css\"><br><br><link href=\"/css/main.css?v=5.1.0\" rel=\"stylesheet\" type=\"text/css\"><br><br><br>  <meta name=\"keywords\" content=\"TOELF, writing,\"><br><br><br><br><br><br><br><br><br>  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico?v=5.1.0\"><br><br><br><br><br><br><br><meta name=\"description\" content=\"Educatiuon011.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.Agree\n foster one’s rational thinking\"><br><meta property=\"og:type\" content=\"article\"><br><meta property=\"og:title\" content=\"TOEFL-writing-01-independent-Educatiuon01\"><br><meta property=\"og:url\" content=\"http://yoursite.com/2017/03/06/TOEFL-writing-01/index.html\"><br><meta property=\"og:site_name\" content=\"Nocis' workshop\"><br><meta property=\"og:description\" content=\"Educatiuon011.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.Agree\n foster one’s rational thinking\"><br><meta property=\"og:updated_time\" content=\"2017-03-30T16:37:13.694Z\"><br><meta name=\"twitter:card\" content=\"summary\"><br><meta name=\"twitter:title\" content=\"TOEFL-writing-01-independent-Educatiuon01\"><br><meta name=\"twitter:description\" content=\"Educatiuon011.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.Agree\n foster one’s rational thinking\"><br><br><br><br><script type=\"text/javascript\" id=\"hexo.configurations\"><br>  var NexT = window.NexT || {};<br>  var CONFIG = {<br>    root: ‘/‘,<br>    scheme: ‘Muse’,<br>    sidebar: {“position”:”left”,”display”:”post”},<br>    fancybox: true,<br>    motion: true,<br>    duoshuo: {<br>      userId: ‘0’,<br>      author: ‘Author’<br>    },<br>    algolia: {<br>      applicationID: ‘’,<br>      apiKey: ‘’,<br>      indexName: ‘’,<br>      hits: {“per_page”:10},<br>      labels: {“input_placeholder”:”Search for Posts”,”hits_empty”:”We didn’t find any results for the search: ${query}”,”hits_stats”:”${hits} results found in ${time} ms”}<br>    }<br>  };<br></script><br><br><br><br>  <link rel=\"canonical\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01/\"><br><br><br><br><br><br>  <title> TOEFL-writing-01-independent-Educatiuon01 | Nocis’ workshop </title><!-- hexo-inject:begin --><!-- hexo-inject:end --><br></head><br><br><body itemscope=\"\" itemtype=\"http://schema.org/WebPage\" lang=\"en\"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>  <!-- hexo-inject:begin --><!-- hexo-inject:end --><div class=\"container one-collumn sidebar-position-left page-post-detail \"><br>    <div class=\"headband\"></div><br><br>    <header id=\"header\" class=\"header\" itemscope=\"\" itemtype=\"http://schema.org/WPHeader\"><br>      <div class=\"header-inner\"><div class=\"site-meta \"><br><br><br>  <div class=\"custom-logo-site-title\"><br>    <a href=\"/\" class=\"brand\" rel=\"start\"><br>      <span class=\"logo-line-before\"><i></i></span><br>      <span class=\"site-title\">Nocis’ workshop</span><br>      <span class=\"logo-line-after\"><i></i></span><br>    </a><br>  </div><br><br>      <p class=\"site-subtitle\"></p><br><br></div><br><br><div class=\"site-nav-toggle\"><br>  <button><br>    <span class=\"btn-bar\"></span><br>    <span class=\"btn-bar\"></span><br>    <span class=\"btn-bar\"></span><br>  </button><br></div><br><br><nav class=\"site-nav\"><br><br><br><br>    <ul id=\"menu\" class=\"menu\"><br><br><br>        <li class=\"menu-item menu-item-home\"><br>          <a href=\"/\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-home\"></i> <br><br><br>            Home<br>          </a><br>        </li><br><br><br>        <li class=\"menu-item menu-item-categories\"><br>          <a href=\"/categories\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-th\"></i> <br><br><br>            Categories<br>          </a><br>        </li><br><br><br>        <li class=\"menu-item menu-item-archives\"><br>          <a href=\"/archives\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-archive\"></i> <br><br><br>            Archives<br>          </a><br>        </li><br><br><br>        <li class=\"menu-item menu-item-tags\"><br>          <a href=\"/tags\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-tags\"></i> <br><br><br>            Tags<br>          </a><br>        </li><br><br><br><br>    </ul><br><br><br><br></nav><br><br><br><br> </div><br>    </header><br><br>    <main id=\"main\" class=\"main\"><br>      <div class=\"main-inner\"><br>        <div class=\"content-wrap\"><br>          <div id=\"content\" class=\"content\"><br><br><br>  <div id=\"posts\" class=\"posts-expand\"><br><br><br><br><br><br><br><br><br>  <article class=\"post post-type-normal \" itemscope=\"\" itemtype=\"http://schema.org/Article\"><br>  <link itemprop=\"mainEntityOfPage\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01/\"><br><br>  <span style=\"display:none\" itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"><br>    <meta itemprop=\"name\" content=\"Nocis\"><br>    <meta itemprop=\"description\" content=\"\"><br>    <meta itemprop=\"image\" content=\"/images/avatar.gif\"><br>  </span><br><br>  <span style=\"display:none\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"http://schema.org/Organization\"><br>    <meta itemprop=\"name\" content=\"Nocis' workshop\"><br>    <span style=\"display:none\" itemprop=\"logo\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\"><br>      <img style=\"display:none;\" itemprop=\"url image\" alt=\"Nocis' workshop\" src=\"\"><br>    </span><br>  </span><br><br><br>      <header class=\"post-header\"><br><br><br><br>          <h1 class=\"post-title\" itemprop=\"name headline\"><br><br><br><br>                TOEFL-writing-01-independent-Educatiuon01<br><br><br>          </h1><br><br><br>        <div class=\"post-meta\"><br>          <span class=\"post-time\"><br><br>              <span class=\"post-meta-item-icon\"><br>                <i class=\"fa fa-calendar-o\"></i><br>              </span><br><br>                <span class=\"post-meta-item-text\">Posted on</span><br><br>              <time title=\"Post created\" itemprop=\"dateCreated datePublished\" datetime=\"2017-03-06T11:45:41+08:00\"><br>                2017-03-06<br>              </time><br><br><br><br><br><br>          </span><br><br><br>            <span class=\"post-category\"><br><br>              <span class=\"post-meta-divider\">|</span><br><br>              <span class=\"post-meta-item-icon\"><br>                <i class=\"fa fa-folder-o\"></i><br>              </span><br><br>                <span class=\"post-meta-item-text\">In</span><br><br><br>                <span itemprop=\"about\" itemscope=\"\" itemtype=\"http://schema.org/Thing\"><br>                  <a href=\"/categories/TOELF-writing/\" itemprop=\"url\" rel=\"index\"><br>                    <span itemprop=\"name\">TOELF, writing</span><br>                  </a><br>                </span><br><br><br><br><br>            </span><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>        </div><br>      </header><br><br><br><br>    <div class=\"post-body\" itemprop=\"articleBody\"><br><br><br><br><br><br>        <h1 id=\"Educatiuon01\"><a href=\"#Educatiuon01\" class=\"headerlink\" title=\"Educatiuon01\"></a>Educatiuon01</h1><h4 id=\"1-1-Do-you-agree-or-disagree-with-the-following-statement-All-the-university-students-should-take-history-courses-no-matter-what-field-they-major-in\"><a href=\"#1-1-Do-you-agree-or-disagree-with-the-following-statement-All-the-university-students-should-take-history-courses-no-matter-what-field-they-major-in\" class=\"headerlink\" title=\"1.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.\"></a>1.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.</h4><h4 id=\"Agree\"><a href=\"#Agree\" class=\"headerlink\" title=\"Agree\"></a>Agree</h4><ol><br><li><font color=\"blue\"> foster one’s rational thinking and critical thought</font> 培养理性思维和批判思维 </li><br><li><font color=\"blue\"> get a clear perspective of oneself   </font> 了解自己 </li><br><li><font color=\"blue\"> make sound judgment on</font> 对于……做出理性的判断 </li><br><li><font color=\"blue\"> enhance one’s literacy</font> 增强一个人的读写能力  </li><br><li><font color=\"blue\"> avoid making similar mistakes</font> 避免犯相似的错误 </li><br><li><font color=\"blue\"> enlarge one’s scope of knowledge</font> 增加知识面 </li><br><li><font color=\"blue\">broaden one’s mental horizons </font>拓宽视野 </li><br><li>expand one’s mind 开拓视野(口语推荐) </li><br><li><font color=\"blue\">learn the relevant experiences from the historical events</font> 从历史事件中学习相关经验 </li><br><li><font color=\"blue\">take history as a mirror</font> 以史为鉴 </li><br><li><font color=\"blue\">mature one’s thought </font> 成熟思想 </li><br><li><font color=\"blue\"> successful figures </font> 成功的人</li><br><li><font color=\"blue\"> mirroring the experiences of failure </font>学习失败教训</li><br><li><font color=\"blue\">The difficulty is the best helper for steeling will </font> 困难是磨练意志最好的帮手</li><br></ol><br><h4 id=\"Disagree\"><a href=\"#Disagree\" class=\"headerlink\" title=\"Disagree\"></a>Disagree</h4><ol><br><li><font color=\"blue\">if one’s major is totally irrelevant to history</font> 如果一个人的专业和历史完全无关<font color=\"red\"><p>解析：such as botany or zoology 例如动物学和动物性 </p></font><p></p></li><br><li><font color=\"blue\"> to learn history will distract one’s energy and waster one’s time</font>学习历史会分散精力，浪费时间 </li><br><li><font color=\"blue\"> have nothing to do with our current life </font>和我们当前的生活联系不大 </li><br></ol><br><h4 id=\"Opening-Paragraph\"><a href=\"#Opening-Paragraph\" class=\"headerlink\" title=\"Opening Paragraph\"></a>Opening Paragraph</h4><ol><br><li>There is no denying that …</li><br></ol><br><h4 id=\"state-point\"><a href=\"#state-point\" class=\"headerlink\" title=\"state point\"></a>state point</h4><ol><br><li>this view doesn’t hold water 这一观点是站不住脚的 </li><br><li>Reasonable as it may sound, I do not think this view can hold the water 听起来很合理，但我认为这种观点不可能成立 </li><br><li>I agree with this idea for a few reasons.</li><br><li>It is because of these that you will be better at English</li><br><li>This virtually to the student’s quality put forward higher requirements</li><br><li>strengthens 加强</li><br><li>cultural deposits 文化底蕴</li><br><li>committing blunders 犯错误</li><br><li>sound judgment 正确的判断</li><br><li>absorb experience</li><br><li>by means of 依靠</li><br><li>take a keen interest in 对…有浓厚的兴趣 </li><br><li>reading extensively 广泛阅读</li><br><li>conduces to 有助于</li><br><li>everyone has an obligation to </li><br><li>put more academic pressures</li><br></ol><br><h4 id=\"Model-Essay\"><a href=\"#Model-Essay\" class=\"headerlink\" title=\"Model Essay\"></a>Model Essay</h4><p>University courses lay a very solid foundation for the future development of college students. Facing the great selections of these courses, some people say that history classes should be made compulsory for college students, for the reason that they could be more familiar with the advancement and evolution of human society. I disagree. I believe, despite minor merits, asking student of all major to attend history classes would cause problems.</p><br><h4 id=\"My-imitation\"><a href=\"#My-imitation\" class=\"headerlink\" title=\" My imitation \"></a><font color=\"red\"> My imitation </font></h4><p>There is no denying that selecting courses is very important to college students, which affect students’ future development a lot. Some people say that history courses should be taken by all college students, I agree with this idea for a few reasons.</p><br><p>The main reason that I approve of this view is that learning history could enlarge students’ scope of knowledge, which help students foster their rational and critical thought. For example, an engineering student may never know about the birth of his major if he doesn’t learn history. It is because of this irrelevant history knowledge that we mature our thought. Moreover, students have put forward higher requirements in today’s world. They are supposed to be more well-rounded, therefore, learning curricula, such as history, is essential.</p><br><p>In general, having a good knowledge of history not only strengthens students’ cultural deposits, but also helps them learn to take history as a mirror, which could help students absorb the relevant experiences from the historical events to avoid committing similar blunders and make sound judgment. Many successful people attribute their success to the habit of reading history, they take a keen interest in studying history and reading extensively, which contribute to their later achievements in personal career. In other words, they benefit from the past histories rely on learning successful figures and mirroring the experiences of failure. According to them, we could find that studying history indeed facilitate our adolescent no matter what field we major in.</p><br><p>In addition, traditional culture has become a gene of our nation, learning history is an important way to help our national cultural heritage. As a citizen, everyone has an obligation to passing on our culture. The long history finally breeds our glorious culture over thousands of years, which subtly influenced our thinking and behavior, and root in our inside deeply. History witness all the progress and evolutions, nothing could be better than learning history to inherit our culture.</p><br><p>Admittedly, learning history does have some drawbacks. On one side, students must spend more time in history courses, which means they have less time on their major, it would put more academic pressures on students. On the other hand, for some students who doesn’t like history, the compulsory history class is a torture, which may influence the score seriously. </p><br><p>In conclusion, although there are some drawbacks of compulsion of history class, making every college student take history course would bring them more possibilities in the future. Besides, those difficulties would be the best helper for steeling will.</p><br><br><br>    </div><br><br>    <div><br><br><br><br><br>    </div><br><br>    <div><br><br><br><br><br>    </div><br><br><br>    <footer class=\"post-footer\"><br><br>        <div class=\"post-tags\"><br><br>            <a href=\"/tags/TOELF-writing/\" rel=\"tag\"># TOELF, writing</a><br><br>        </div><br><br><br><br>        <div class=\"post-nav\"><br>          <div class=\"post-nav-next post-nav-item\"><br><br>              <a href=\"/2017/03/06/Data Mining/\" rel=\"next\" title=\"What is data?\"><br>                <i class=\"fa fa-chevron-left\"></i> What is data?<br>              </a><br><br>          </div><br><br>          <span class=\"post-nav-divider\"></span><br><br>          <div class=\"post-nav-prev post-nav-item\"><br><br>              <a href=\"/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/\" rel=\"prev\" title=\"TOEFL-writing-01-independent-grammar01-subject\"><br>                TOEFL-writing-01-independent-grammar01-subject <i class=\"fa fa-chevron-right\"></i><br>              </a><br><br>          </div><br>        </div><br><br><br><br><br>    </footer><br>  </article><br><br><br><br>    <div class=\"post-spread\"><br><br>    </div><br>  </div><br><br><br>          </div><br><br><br><br><br>  <div class=\"comments\" id=\"comments\"><br><br>  </div><br><br><br>        </div><br><br><br><br>  <div class=\"sidebar-toggle\"><br>    <div class=\"sidebar-toggle-line-wrap\"><br>      <span class=\"sidebar-toggle-line sidebar-toggle-line-first\"></span><br>      <span class=\"sidebar-toggle-line sidebar-toggle-line-middle\"></span><br>      <span class=\"sidebar-toggle-line sidebar-toggle-line-last\"></span><br>    </div><br>  </div><br><br>  <aside id=\"sidebar\" class=\"sidebar\"><br>    <div class=\"sidebar-inner\"><br><br><br><br><br>        <ul class=\"sidebar-nav motion-element\"><br>          <li class=\"sidebar-nav-toc sidebar-nav-active\" data-target=\"post-toc-wrap\"><br>            Table of Contents<br>          </li><br>          <li class=\"sidebar-nav-overview\" data-target=\"site-overview\"><br>            Overview<br>          </li><br>        </ul><br><br><br>      <section class=\"site-overview sidebar-panel\"><br>        <div class=\"site-author motion-element\" itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"><br>          <img class=\"site-author-image\" itemprop=\"image\" src=\"/images/avatar.gif\" alt=\"Nocis\"><br>          <p class=\"site-author-name\" itemprop=\"name\">Nocis</p><br>          <p class=\"site-description motion-element\" itemprop=\"description\"></p><br>        </div><br>        <nav class=\"site-state motion-element\"><br><br><br>            <div class=\"site-state-item site-state-posts\"><br>              <a href=\"/archives\"><br>                <span class=\"site-state-item-count\">5</span><br>                <span class=\"site-state-item-name\">posts</span><br>              </a><br>            </div><br><br><br><br>            <div class=\"site-state-item site-state-categories\"><br>              <a href=\"/categories\"><br>                <span class=\"site-state-item-count\">3</span><br>                <span class=\"site-state-item-name\">categories</span><br>              </a><br>            </div><br><br><br><br>            <div class=\"site-state-item site-state-tags\"><br>              <a href=\"/tags\"><br>                <span class=\"site-state-item-count\">3</span><br>                <span class=\"site-state-item-name\">tags</span><br>              </a><br>            </div><br><br><br>        </nav><br><br><br><br>        <div class=\"links-of-author motion-element\"><br><br>        </div><br><br><br><br><br><br><br><br><br><br><br>      </section><br><br><br>      <!--noindex--><br>        <section class=\"post-toc-wrap motion-element sidebar-panel sidebar-panel-active\"><br>          <div class=\"post-toc\"><br><br><br><br><br><br><br>              <div class=\"post-toc-content\"><ol class=\"nav\"><li class=\"nav-item nav-level-1\"><a class=\"nav-link\" href=\"#Educatiuon01\"><span class=\"nav-number\">1.</span> <span class=\"nav-text\">Educatiuon01</span></a><ol class=\"nav-child\"><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#1-1-Do-you-agree-or-disagree-with-the-following-statement-All-the-university-students-should-take-history-courses-no-matter-what-field-they-major-in\"><span class=\"nav-number\">1.0.0.1.</span> <span class=\"nav-text\">1.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Agree\"><span class=\"nav-number\">1.0.0.2.</span> <span class=\"nav-text\">Agree</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Disagree\"><span class=\"nav-number\">1.0.0.3.</span> <span class=\"nav-text\">Disagree</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Opening-Paragraph\"><span class=\"nav-number\">1.0.0.4.</span> <span class=\"nav-text\">Opening Paragraph</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#state-point\"><span class=\"nav-number\">1.0.0.5.</span> <span class=\"nav-text\">state point</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Model-Essay\"><span class=\"nav-number\">1.0.0.6.</span> <span class=\"nav-text\">Model Essay</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#My-imitation\"><span class=\"nav-number\">1.0.0.7.</span> <span class=\"nav-text\"> My imitation </span></a></li></ol></li></ol></div><br><br><br>          </div><br>        </section><br>      <!--/noindex--><br><br><br>    </div><br>  </aside><br><br><br><br>      </div><br>    </main><br><br>    <footer id=\"footer\" class=\"footer\"><br>      <div class=\"footer-inner\"><br>        <div class=\"copyright\"><br><br>  &copy;<br>  <span itemprop=\"copyrightYear\">2017</span><br>  <span class=\"with-love\"><br>    <i class=\"fa fa-heart\"></i><br>  </span><br>  <span class=\"author\" itemprop=\"copyrightHolder\">Nocis</span><br></div><br><br><br><div class=\"powered-by\"><br>  Powered by <a class=\"theme-link\" href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo</a><br></div><br><br><div class=\"theme-info\"><br>  Theme -<br>  <a class=\"theme-link\" href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\"><br>    NexT.Muse<br>  </a><br></div><br><br><br><br><br><br>      </div><br>    </footer><br><br>    <div class=\"back-to-top\"><br>      <i class=\"fa fa-arrow-up\"></i><br>    </div><br>  </div><br><br><br><br><script type=\"text/javascript\"><br>  if (Object.prototype.toString.call(window.Promise) !== ‘[object Function]’) {<br>    window.Promise = null;<br>  }<br></script><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/lib/jquery/index.js?v=2.1.3\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/fastclick/lib/fastclick.min.js?v=1.0.6\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/jquery_lazyload/jquery.lazyload.js?v=1.9.7\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.min.js?v=1.2.1\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.ui.min.js?v=1.2.1\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/fancybox/source/jquery.fancybox.pack.js?v=2.1.5\"></script><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/js/src/utils.js?v=5.1.0\"></script><br><br>  <script type=\"text/javascript\" src=\"/js/src/motion.js?v=5.1.0\"></script><br><br><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/js/src/scrollspy.js?v=5.1.0\"></script><br><script type=\"text/javascript\" src=\"/js/src/post-details.js?v=5.1.0\"></script><br><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/js/src/bootstrap.js?v=5.1.0\"></script><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>      <!-- UY BEGIN --><br>      <script type=\"text/javascript\" src=\"http://v2.uyan.cc/code/uyan.js?uid=\"></script><br>      <!-- UY END --><!-- hexo-inject:begin --><!-- Begin: Injected MathJax --><br><script type=\"text/x-mathjax-config\"><br>  MathJax.Hub.Config({“tex2jax”:{“inlineMath”:[[“$”,”$”],[“\\(“,”\\)“]],”skipTags”:[“script”,”noscript”,”style”,”textarea”,”pre”,”code”],”processEscapes”:true},”TeX”:{“equationNumbers”:{“autoNumber”:”AMS”}}});<br></script><br><br><script type=\"text/x-mathjax-config\"><br>  MathJax.Hub.Queue(function() {<br>    var all = MathJax.Hub.getAllJax(), i;<br>    for(i=0; i &lt; all.length; i += 1) {<br>      all[i].SourceElement().parentNode.className += ‘ has-jax’;<br>    }<br>  });<br></script><br><br><script type=\"text/javascript\" src=\"//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"><br></script><br><!-- End: Injected MathJax --><br><!-- hexo-inject:end --><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></body><br></html>\n","site":{"data":{}},"excerpt":"","more":"<p>&lt;!doctype html&gt;</p>\n<html class=\"theme-next muse use-motion\" lang=\"en\"><br><head><meta name=\"generator\" content=\"Hexo 3.8.0\"><br>  <!-- hexo-inject:begin --><!-- hexo-inject:end --><meta charset=\"UTF-8\"><br><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><br><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"><br><br><br><br><meta http-equiv=\"Cache-Control\" content=\"no-transform\"><br><meta http-equiv=\"Cache-Control\" content=\"no-siteapp\"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>  <link href=\"/lib/fancybox/source/jquery.fancybox.css?v=2.1.5\" rel=\"stylesheet\" type=\"text/css\"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>    <link href=\"//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic&subset=latin,latin-ext\" rel=\"stylesheet\" type=\"text/css\"><br><br><br><br><br><br><br><br><link href=\"/lib/font-awesome/css/font-awesome.min.css?v=4.6.2\" rel=\"stylesheet\" type=\"text/css\"><br><br><link href=\"/css/main.css?v=5.1.0\" rel=\"stylesheet\" type=\"text/css\"><br><br><br>  <meta name=\"keywords\" content=\"TOELF, writing,\"><br><br><br><br><br><br><br><br><br>  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico?v=5.1.0\"><br><br><br><br><br><br><br><meta name=\"description\" content=\"Educatiuon011.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.Agree\n foster one’s rational thinking\"><br><meta property=\"og:type\" content=\"article\"><br><meta property=\"og:title\" content=\"TOEFL-writing-01-independent-Educatiuon01\"><br><meta property=\"og:url\" content=\"http://yoursite.com/2017/03/06/TOEFL-writing-01/index.html\"><br><meta property=\"og:site_name\" content=\"Nocis' workshop\"><br><meta property=\"og:description\" content=\"Educatiuon011.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.Agree\n foster one’s rational thinking\"><br><meta property=\"og:updated_time\" content=\"2017-03-30T16:37:13.694Z\"><br><meta name=\"twitter:card\" content=\"summary\"><br><meta name=\"twitter:title\" content=\"TOEFL-writing-01-independent-Educatiuon01\"><br><meta name=\"twitter:description\" content=\"Educatiuon011.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.Agree\n foster one’s rational thinking\"><br><br><br><br><script type=\"text/javascript\" id=\"hexo.configurations\"><br>  var NexT = window.NexT || {};<br>  var CONFIG = {<br>    root: ‘/‘,<br>    scheme: ‘Muse’,<br>    sidebar: {“position”:”left”,”display”:”post”},<br>    fancybox: true,<br>    motion: true,<br>    duoshuo: {<br>      userId: ‘0’,<br>      author: ‘Author’<br>    },<br>    algolia: {<br>      applicationID: ‘’,<br>      apiKey: ‘’,<br>      indexName: ‘’,<br>      hits: {“per_page”:10},<br>      labels: {“input_placeholder”:”Search for Posts”,”hits_empty”:”We didn’t find any results for the search: ${query}”,”hits_stats”:”${hits} results found in ${time} ms”}<br>    }<br>  };<br></script><br><br><br><br>  <link rel=\"canonical\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01/\"><br><br><br><br><br><br>  <title> TOEFL-writing-01-independent-Educatiuon01 | Nocis’ workshop </title><!-- hexo-inject:begin --><!-- hexo-inject:end --><br></head><br><br><body itemscope=\"\" itemtype=\"http://schema.org/WebPage\" lang=\"en\"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>  <!-- hexo-inject:begin --><!-- hexo-inject:end --><div class=\"container one-collumn sidebar-position-left page-post-detail \"><br>    <div class=\"headband\"></div><br><br>    <header id=\"header\" class=\"header\" itemscope=\"\" itemtype=\"http://schema.org/WPHeader\"><br>      <div class=\"header-inner\"><div class=\"site-meta \"><br><br><br>  <div class=\"custom-logo-site-title\"><br>    <a href=\"/\" class=\"brand\" rel=\"start\"><br>      <span class=\"logo-line-before\"><i></i></span><br>      <span class=\"site-title\">Nocis’ workshop</span><br>      <span class=\"logo-line-after\"><i></i></span><br>    </a><br>  </div><br><br>      <p class=\"site-subtitle\"></p><br><br></div><br><br><div class=\"site-nav-toggle\"><br>  <button><br>    <span class=\"btn-bar\"></span><br>    <span class=\"btn-bar\"></span><br>    <span class=\"btn-bar\"></span><br>  </button><br></div><br><br><nav class=\"site-nav\"><br><br><br><br>    <ul id=\"menu\" class=\"menu\"><br><br><br>        <li class=\"menu-item menu-item-home\"><br>          <a href=\"/\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-home\"></i> <br><br><br>            Home<br>          </a><br>        </li><br><br><br>        <li class=\"menu-item menu-item-categories\"><br>          <a href=\"/categories\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-th\"></i> <br><br><br>            Categories<br>          </a><br>        </li><br><br><br>        <li class=\"menu-item menu-item-archives\"><br>          <a href=\"/archives\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-archive\"></i> <br><br><br>            Archives<br>          </a><br>        </li><br><br><br>        <li class=\"menu-item menu-item-tags\"><br>          <a href=\"/tags\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-tags\"></i> <br><br><br>            Tags<br>          </a><br>        </li><br><br><br><br>    </ul><br><br><br><br></nav><br><br><br><br> </div><br>    </header><br><br>    <main id=\"main\" class=\"main\"><br>      <div class=\"main-inner\"><br>        <div class=\"content-wrap\"><br>          <div id=\"content\" class=\"content\"><br><br><br>  <div id=\"posts\" class=\"posts-expand\"><br><br><br><br><br><br><br><br><br>  <article class=\"post post-type-normal \" itemscope=\"\" itemtype=\"http://schema.org/Article\"><br>  <link itemprop=\"mainEntityOfPage\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01/\"><br><br>  <span style=\"display:none\" itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"><br>    <meta itemprop=\"name\" content=\"Nocis\"><br>    <meta itemprop=\"description\" content=\"\"><br>    <meta itemprop=\"image\" content=\"/images/avatar.gif\"><br>  </span><br><br>  <span style=\"display:none\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"http://schema.org/Organization\"><br>    <meta itemprop=\"name\" content=\"Nocis' workshop\"><br>    <span style=\"display:none\" itemprop=\"logo\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\"><br>      <img style=\"display:none;\" itemprop=\"url image\" alt=\"Nocis' workshop\" src=\"\"><br>    </span><br>  </span><br><br><br>      <header class=\"post-header\"><br><br><br><br>          <h1 class=\"post-title\" itemprop=\"name headline\"><br><br><br><br>                TOEFL-writing-01-independent-Educatiuon01<br><br><br>          </h1><br><br><br>        <div class=\"post-meta\"><br>          <span class=\"post-time\"><br><br>              <span class=\"post-meta-item-icon\"><br>                <i class=\"fa fa-calendar-o\"></i><br>              </span><br><br>                <span class=\"post-meta-item-text\">Posted on</span><br><br>              <time title=\"Post created\" itemprop=\"dateCreated datePublished\" datetime=\"2017-03-06T11:45:41+08:00\"><br>                2017-03-06<br>              </time><br><br><br><br><br><br>          </span><br><br><br>            <span class=\"post-category\"><br><br>              <span class=\"post-meta-divider\">|</span><br><br>              <span class=\"post-meta-item-icon\"><br>                <i class=\"fa fa-folder-o\"></i><br>              </span><br><br>                <span class=\"post-meta-item-text\">In</span><br><br><br>                <span itemprop=\"about\" itemscope=\"\" itemtype=\"http://schema.org/Thing\"><br>                  <a href=\"/categories/TOELF-writing/\" itemprop=\"url\" rel=\"index\"><br>                    <span itemprop=\"name\">TOELF, writing</span><br>                  </a><br>                </span><br><br><br><br><br>            </span><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>        </div><br>      </header><br><br><br><br>    <div class=\"post-body\" itemprop=\"articleBody\"><br><br><br><br><br><br>        <h1 id=\"Educatiuon01\"><a href=\"#Educatiuon01\" class=\"headerlink\" title=\"Educatiuon01\"></a>Educatiuon01</h1><h4 id=\"1-1-Do-you-agree-or-disagree-with-the-following-statement-All-the-university-students-should-take-history-courses-no-matter-what-field-they-major-in\"><a href=\"#1-1-Do-you-agree-or-disagree-with-the-following-statement-All-the-university-students-should-take-history-courses-no-matter-what-field-they-major-in\" class=\"headerlink\" title=\"1.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.\"></a>1.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.</h4><h4 id=\"Agree\"><a href=\"#Agree\" class=\"headerlink\" title=\"Agree\"></a>Agree</h4><ol><br><li><font color=\"blue\"> foster one’s rational thinking and critical thought</font> 培养理性思维和批判思维 </li><br><li><font color=\"blue\"> get a clear perspective of oneself   </font> 了解自己 </li><br><li><font color=\"blue\"> make sound judgment on</font> 对于……做出理性的判断 </li><br><li><font color=\"blue\"> enhance one’s literacy</font> 增强一个人的读写能力  </li><br><li><font color=\"blue\"> avoid making similar mistakes</font> 避免犯相似的错误 </li><br><li><font color=\"blue\"> enlarge one’s scope of knowledge</font> 增加知识面 </li><br><li><font color=\"blue\">broaden one’s mental horizons </font>拓宽视野 </li><br><li>expand one’s mind 开拓视野(口语推荐) </li><br><li><font color=\"blue\">learn the relevant experiences from the historical events</font> 从历史事件中学习相关经验 </li><br><li><font color=\"blue\">take history as a mirror</font> 以史为鉴 </li><br><li><font color=\"blue\">mature one’s thought </font> 成熟思想 </li><br><li><font color=\"blue\"> successful figures </font> 成功的人</li><br><li><font color=\"blue\"> mirroring the experiences of failure </font>学习失败教训</li><br><li><font color=\"blue\">The difficulty is the best helper for steeling will </font> 困难是磨练意志最好的帮手</li><br></ol><br><h4 id=\"Disagree\"><a href=\"#Disagree\" class=\"headerlink\" title=\"Disagree\"></a>Disagree</h4><ol><br><li><font color=\"blue\">if one’s major is totally irrelevant to history</font> 如果一个人的专业和历史完全无关<font color=\"red\"><p>解析：such as botany or zoology 例如动物学和动物性 </p></font><p></p></li><br><li><font color=\"blue\"> to learn history will distract one’s energy and waster one’s time</font>学习历史会分散精力，浪费时间 </li><br><li><font color=\"blue\"> have nothing to do with our current life </font>和我们当前的生活联系不大 </li><br></ol><br><h4 id=\"Opening-Paragraph\"><a href=\"#Opening-Paragraph\" class=\"headerlink\" title=\"Opening Paragraph\"></a>Opening Paragraph</h4><ol><br><li>There is no denying that …</li><br></ol><br><h4 id=\"state-point\"><a href=\"#state-point\" class=\"headerlink\" title=\"state point\"></a>state point</h4><ol><br><li>this view doesn’t hold water 这一观点是站不住脚的 </li><br><li>Reasonable as it may sound, I do not think this view can hold the water 听起来很合理，但我认为这种观点不可能成立 </li><br><li>I agree with this idea for a few reasons.</li><br><li>It is because of these that you will be better at English</li><br><li>This virtually to the student’s quality put forward higher requirements</li><br><li>strengthens 加强</li><br><li>cultural deposits 文化底蕴</li><br><li>committing blunders 犯错误</li><br><li>sound judgment 正确的判断</li><br><li>absorb experience</li><br><li>by means of 依靠</li><br><li>take a keen interest in 对…有浓厚的兴趣 </li><br><li>reading extensively 广泛阅读</li><br><li>conduces to 有助于</li><br><li>everyone has an obligation to </li><br><li>put more academic pressures</li><br></ol><br><h4 id=\"Model-Essay\"><a href=\"#Model-Essay\" class=\"headerlink\" title=\"Model Essay\"></a>Model Essay</h4><p>University courses lay a very solid foundation for the future development of college students. Facing the great selections of these courses, some people say that history classes should be made compulsory for college students, for the reason that they could be more familiar with the advancement and evolution of human society. I disagree. I believe, despite minor merits, asking student of all major to attend history classes would cause problems.</p><br><h4 id=\"My-imitation\"><a href=\"#My-imitation\" class=\"headerlink\" title=\" My imitation \"></a><font color=\"red\"> My imitation </font></h4><p>There is no denying that selecting courses is very important to college students, which affect students’ future development a lot. Some people say that history courses should be taken by all college students, I agree with this idea for a few reasons.</p><br><p>The main reason that I approve of this view is that learning history could enlarge students’ scope of knowledge, which help students foster their rational and critical thought. For example, an engineering student may never know about the birth of his major if he doesn’t learn history. It is because of this irrelevant history knowledge that we mature our thought. Moreover, students have put forward higher requirements in today’s world. They are supposed to be more well-rounded, therefore, learning curricula, such as history, is essential.</p><br><p>In general, having a good knowledge of history not only strengthens students’ cultural deposits, but also helps them learn to take history as a mirror, which could help students absorb the relevant experiences from the historical events to avoid committing similar blunders and make sound judgment. Many successful people attribute their success to the habit of reading history, they take a keen interest in studying history and reading extensively, which contribute to their later achievements in personal career. In other words, they benefit from the past histories rely on learning successful figures and mirroring the experiences of failure. According to them, we could find that studying history indeed facilitate our adolescent no matter what field we major in.</p><br><p>In addition, traditional culture has become a gene of our nation, learning history is an important way to help our national cultural heritage. As a citizen, everyone has an obligation to passing on our culture. The long history finally breeds our glorious culture over thousands of years, which subtly influenced our thinking and behavior, and root in our inside deeply. History witness all the progress and evolutions, nothing could be better than learning history to inherit our culture.</p><br><p>Admittedly, learning history does have some drawbacks. On one side, students must spend more time in history courses, which means they have less time on their major, it would put more academic pressures on students. On the other hand, for some students who doesn’t like history, the compulsory history class is a torture, which may influence the score seriously. </p><br><p>In conclusion, although there are some drawbacks of compulsion of history class, making every college student take history course would bring them more possibilities in the future. Besides, those difficulties would be the best helper for steeling will.</p><br><br><br>    </div><br><br>    <div><br><br><br><br><br>    </div><br><br>    <div><br><br><br><br><br>    </div><br><br><br>    <footer class=\"post-footer\"><br><br>        <div class=\"post-tags\"><br><br>            <a href=\"/tags/TOELF-writing/\" rel=\"tag\"># TOELF, writing</a><br><br>        </div><br><br><br><br>        <div class=\"post-nav\"><br>          <div class=\"post-nav-next post-nav-item\"><br><br>              <a href=\"/2017/03/06/Data Mining/\" rel=\"next\" title=\"What is data?\"><br>                <i class=\"fa fa-chevron-left\"></i> What is data?<br>              </a><br><br>          </div><br><br>          <span class=\"post-nav-divider\"></span><br><br>          <div class=\"post-nav-prev post-nav-item\"><br><br>              <a href=\"/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/\" rel=\"prev\" title=\"TOEFL-writing-01-independent-grammar01-subject\"><br>                TOEFL-writing-01-independent-grammar01-subject <i class=\"fa fa-chevron-right\"></i><br>              </a><br><br>          </div><br>        </div><br><br><br><br><br>    </footer><br>  </article><br><br><br><br>    <div class=\"post-spread\"><br><br>    </div><br>  </div><br><br><br>          </div><br><br><br><br><br>  <div class=\"comments\" id=\"comments\"><br><br>  </div><br><br><br>        </div><br><br><br><br>  <div class=\"sidebar-toggle\"><br>    <div class=\"sidebar-toggle-line-wrap\"><br>      <span class=\"sidebar-toggle-line sidebar-toggle-line-first\"></span><br>      <span class=\"sidebar-toggle-line sidebar-toggle-line-middle\"></span><br>      <span class=\"sidebar-toggle-line sidebar-toggle-line-last\"></span><br>    </div><br>  </div><br><br>  <aside id=\"sidebar\" class=\"sidebar\"><br>    <div class=\"sidebar-inner\"><br><br><br><br><br>        <ul class=\"sidebar-nav motion-element\"><br>          <li class=\"sidebar-nav-toc sidebar-nav-active\" data-target=\"post-toc-wrap\"><br>            Table of Contents<br>          </li><br>          <li class=\"sidebar-nav-overview\" data-target=\"site-overview\"><br>            Overview<br>          </li><br>        </ul><br><br><br>      <section class=\"site-overview sidebar-panel\"><br>        <div class=\"site-author motion-element\" itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"><br>          <img class=\"site-author-image\" itemprop=\"image\" src=\"/images/avatar.gif\" alt=\"Nocis\"><br>          <p class=\"site-author-name\" itemprop=\"name\">Nocis</p><br>          <p class=\"site-description motion-element\" itemprop=\"description\"></p><br>        </div><br>        <nav class=\"site-state motion-element\"><br><br><br>            <div class=\"site-state-item site-state-posts\"><br>              <a href=\"/archives\"><br>                <span class=\"site-state-item-count\">5</span><br>                <span class=\"site-state-item-name\">posts</span><br>              </a><br>            </div><br><br><br><br>            <div class=\"site-state-item site-state-categories\"><br>              <a href=\"/categories\"><br>                <span class=\"site-state-item-count\">3</span><br>                <span class=\"site-state-item-name\">categories</span><br>              </a><br>            </div><br><br><br><br>            <div class=\"site-state-item site-state-tags\"><br>              <a href=\"/tags\"><br>                <span class=\"site-state-item-count\">3</span><br>                <span class=\"site-state-item-name\">tags</span><br>              </a><br>            </div><br><br><br>        </nav><br><br><br><br>        <div class=\"links-of-author motion-element\"><br><br>        </div><br><br><br><br><br><br><br><br><br><br><br>      </section><br><br><br>      <!--noindex--><br>        <section class=\"post-toc-wrap motion-element sidebar-panel sidebar-panel-active\"><br>          <div class=\"post-toc\"><br><br><br><br><br><br><br>              <div class=\"post-toc-content\"><ol class=\"nav\"><li class=\"nav-item nav-level-1\"><a class=\"nav-link\" href=\"#Educatiuon01\"><span class=\"nav-number\">1.</span> <span class=\"nav-text\">Educatiuon01</span></a><ol class=\"nav-child\"><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#1-1-Do-you-agree-or-disagree-with-the-following-statement-All-the-university-students-should-take-history-courses-no-matter-what-field-they-major-in\"><span class=\"nav-number\">1.0.0.1.</span> <span class=\"nav-text\">1.1 Do you agree or disagree with the following statement: All the university students should take history courses no matter what field they major in.</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Agree\"><span class=\"nav-number\">1.0.0.2.</span> <span class=\"nav-text\">Agree</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Disagree\"><span class=\"nav-number\">1.0.0.3.</span> <span class=\"nav-text\">Disagree</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Opening-Paragraph\"><span class=\"nav-number\">1.0.0.4.</span> <span class=\"nav-text\">Opening Paragraph</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#state-point\"><span class=\"nav-number\">1.0.0.5.</span> <span class=\"nav-text\">state point</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#Model-Essay\"><span class=\"nav-number\">1.0.0.6.</span> <span class=\"nav-text\">Model Essay</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#My-imitation\"><span class=\"nav-number\">1.0.0.7.</span> <span class=\"nav-text\"> My imitation </span></a></li></ol></li></ol></div><br><br><br>          </div><br>        </section><br>      <!--/noindex--><br><br><br>    </div><br>  </aside><br><br><br><br>      </div><br>    </main><br><br>    <footer id=\"footer\" class=\"footer\"><br>      <div class=\"footer-inner\"><br>        <div class=\"copyright\"><br><br>  &copy;<br>  <span itemprop=\"copyrightYear\">2017</span><br>  <span class=\"with-love\"><br>    <i class=\"fa fa-heart\"></i><br>  </span><br>  <span class=\"author\" itemprop=\"copyrightHolder\">Nocis</span><br></div><br><br><br><div class=\"powered-by\"><br>  Powered by <a class=\"theme-link\" href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo</a><br></div><br><br><div class=\"theme-info\"><br>  Theme -<br>  <a class=\"theme-link\" href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\"><br>    NexT.Muse<br>  </a><br></div><br><br><br><br><br><br>      </div><br>    </footer><br><br>    <div class=\"back-to-top\"><br>      <i class=\"fa fa-arrow-up\"></i><br>    </div><br>  </div><br><br><br><br><script type=\"text/javascript\"><br>  if (Object.prototype.toString.call(window.Promise) !== ‘[object Function]’) {<br>    window.Promise = null;<br>  }<br></script><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/lib/jquery/index.js?v=2.1.3\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/fastclick/lib/fastclick.min.js?v=1.0.6\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/jquery_lazyload/jquery.lazyload.js?v=1.9.7\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.min.js?v=1.2.1\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.ui.min.js?v=1.2.1\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/fancybox/source/jquery.fancybox.pack.js?v=2.1.5\"></script><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/js/src/utils.js?v=5.1.0\"></script><br><br>  <script type=\"text/javascript\" src=\"/js/src/motion.js?v=5.1.0\"></script><br><br><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/js/src/scrollspy.js?v=5.1.0\"></script><br><script type=\"text/javascript\" src=\"/js/src/post-details.js?v=5.1.0\"></script><br><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/js/src/bootstrap.js?v=5.1.0\"></script><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>      <!-- UY BEGIN --><br>      <script type=\"text/javascript\" src=\"http://v2.uyan.cc/code/uyan.js?uid=\"></script><br>      <!-- UY END --><!-- hexo-inject:begin --><!-- Begin: Injected MathJax --><br><script type=\"text/x-mathjax-config\"><br>  MathJax.Hub.Config({“tex2jax”:{“inlineMath”:[[“$”,”$”],[“\\(“,”\\)“]],”skipTags”:[“script”,”noscript”,”style”,”textarea”,”pre”,”code”],”processEscapes”:true},”TeX”:{“equationNumbers”:{“autoNumber”:”AMS”}}});<br></script><br><br><script type=\"text/x-mathjax-config\"><br>  MathJax.Hub.Queue(function() {<br>    var all = MathJax.Hub.getAllJax(), i;<br>    for(i=0; i &lt; all.length; i += 1) {<br>      all[i].SourceElement().parentNode.className += ‘ has-jax’;<br>    }<br>  });<br></script><br><br><script type=\"text/javascript\" src=\"//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"><br></script><br><!-- End: Injected MathJax --><br><!-- hexo-inject:end --><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></body><br></html>\n"},{"title":"TOEFL-writing-01-independent-grammar01-subject","date":"2018-11-19T22:19:39.000Z","_content":"<!doctype html>\n\n\n\n  \n\n\n<html class=\"theme-next muse use-motion\" lang=\"en\">\n<head>\n  <!-- hexo-inject:begin --><!-- hexo-inject:end --><meta charset=\"UTF-8\"/>\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"/>\n\n\n\n<meta http-equiv=\"Cache-Control\" content=\"no-transform\" />\n<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n  <link href=\"/lib/fancybox/source/jquery.fancybox.css?v=2.1.5\" rel=\"stylesheet\" type=\"text/css\" />\n\n\n\n\n  \n  \n  \n  \n\n  \n    \n    \n  \n\n  \n\n  \n\n  \n\n  \n\n  \n    \n    \n    <link href=\"//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic&subset=latin,latin-ext\" rel=\"stylesheet\" type=\"text/css\">\n  \n\n\n\n\n\n\n<link href=\"/lib/font-awesome/css/font-awesome.min.css?v=4.6.2\" rel=\"stylesheet\" type=\"text/css\" />\n\n<link href=\"/css/main.css?v=5.1.0\" rel=\"stylesheet\" type=\"text/css\" />\n\n\n  <meta name=\"keywords\" content=\"TOELF, writing,\" />\n\n\n\n\n\n\n\n\n  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico?v=5.1.0\" />\n\n\n\n\n\n\n<meta name=\"description\" content=\"1. so-called主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)\n2. subject(to do , doing)动名词和不定式做主语的相同点1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：It is not easy to le\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:title\" content=\"TOEFL-writing-01-independent-grammar01-subject\">\n<meta property=\"og:url\" content=\"http://yoursite.com/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/index.html\">\n<meta property=\"og:site_name\" content=\"Nocis' workshop\">\n<meta property=\"og:description\" content=\"1. so-called主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)\n2. subject(to do , doing)动名词和不定式做主语的相同点1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：It is not easy to le\">\n<meta property=\"og:updated_time\" content=\"2017-03-30T16:37:10.141Z\">\n<meta name=\"twitter:card\" content=\"summary\">\n<meta name=\"twitter:title\" content=\"TOEFL-writing-01-independent-grammar01-subject\">\n<meta name=\"twitter:description\" content=\"1. so-called主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)\n2. subject(to do , doing)动名词和不定式做主语的相同点1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：It is not easy to le\">\n\n\n\n<script type=\"text/javascript\" id=\"hexo.configurations\">\n  var NexT = window.NexT || {};\n  var CONFIG = {\n    root: '/',\n    scheme: 'Muse',\n    sidebar: {\"position\":\"left\",\"display\":\"post\"},\n    fancybox: true,\n    motion: true,\n    duoshuo: {\n      userId: '0',\n      author: 'Author'\n    },\n    algolia: {\n      applicationID: '',\n      apiKey: '',\n      indexName: '',\n      hits: {\"per_page\":10},\n      labels: {\"input_placeholder\":\"Search for Posts\",\"hits_empty\":\"We didn't find any results for the search: ${query}\",\"hits_stats\":\"${hits} results found in ${time} ms\"}\n    }\n  };\n</script>\n\n\n\n  <link rel=\"canonical\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/\"/>\n\n\n\n\n\n  <title> TOEFL-writing-01-independent-grammar01-subject | Nocis' workshop </title><!-- hexo-inject:begin --><!-- hexo-inject:end -->\n</head>\n\n<body itemscope itemtype=\"http://schema.org/WebPage\" lang=\"en\">\n\n  \n\n\n\n\n\n\n\n\n\n\n  \n  \n    \n  \n\n  <!-- hexo-inject:begin --><!-- hexo-inject:end --><div class=\"container one-collumn sidebar-position-left page-post-detail \">\n    <div class=\"headband\"></div>\n\n    <header id=\"header\" class=\"header\" itemscope itemtype=\"http://schema.org/WPHeader\">\n      <div class=\"header-inner\"><div class=\"site-meta \">\n  \n\n  <div class=\"custom-logo-site-title\">\n    <a href=\"/\"  class=\"brand\" rel=\"start\">\n      <span class=\"logo-line-before\"><i></i></span>\n      <span class=\"site-title\">Nocis' workshop</span>\n      <span class=\"logo-line-after\"><i></i></span>\n    </a>\n  </div>\n    \n      <p class=\"site-subtitle\"></p>\n    \n</div>\n\n<div class=\"site-nav-toggle\">\n  <button>\n    <span class=\"btn-bar\"></span>\n    <span class=\"btn-bar\"></span>\n    <span class=\"btn-bar\"></span>\n  </button>\n</div>\n\n<nav class=\"site-nav\">\n  \n\n  \n    <ul id=\"menu\" class=\"menu\">\n      \n        \n        <li class=\"menu-item menu-item-home\">\n          <a href=\"/\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-home\"></i> <br />\n            \n            Home\n          </a>\n        </li>\n      \n        \n        <li class=\"menu-item menu-item-categories\">\n          <a href=\"/categories\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-th\"></i> <br />\n            \n            Categories\n          </a>\n        </li>\n      \n        \n        <li class=\"menu-item menu-item-archives\">\n          <a href=\"/archives\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-archive\"></i> <br />\n            \n            Archives\n          </a>\n        </li>\n      \n        \n        <li class=\"menu-item menu-item-tags\">\n          <a href=\"/tags\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-tags\"></i> <br />\n            \n            Tags\n          </a>\n        </li>\n      \n\n      \n    </ul>\n  \n\n  \n</nav>\n\n\n\n </div>\n    </header>\n\n    <main id=\"main\" class=\"main\">\n      <div class=\"main-inner\">\n        <div class=\"content-wrap\">\n          <div id=\"content\" class=\"content\">\n            \n\n  <div id=\"posts\" class=\"posts-expand\">\n    \n\n  \n\n  \n  \n  \n\n  <article class=\"post post-type-normal \" itemscope itemtype=\"http://schema.org/Article\">\n  <link itemprop=\"mainEntityOfPage\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/\">\n\n  <span style=\"display:none\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n    <meta itemprop=\"name\" content=\"Nocis\">\n    <meta itemprop=\"description\" content=\"\">\n    <meta itemprop=\"image\" content=\"/images/avatar.gif\">\n  </span>\n\n  <span style=\"display:none\" itemprop=\"publisher\" itemscope itemtype=\"http://schema.org/Organization\">\n    <meta itemprop=\"name\" content=\"Nocis' workshop\">\n    <span style=\"display:none\" itemprop=\"logo\" itemscope itemtype=\"http://schema.org/ImageObject\">\n      <img style=\"display:none;\" itemprop=\"url image\" alt=\"Nocis' workshop\" src=\"\">\n    </span>\n  </span>\n\n    \n      <header class=\"post-header\">\n\n        \n        \n          <h1 class=\"post-title\" itemprop=\"name headline\">\n            \n            \n              \n                TOEFL-writing-01-independent-grammar01-subject\n              \n            \n          </h1>\n        \n\n        <div class=\"post-meta\">\n          <span class=\"post-time\">\n            \n              <span class=\"post-meta-item-icon\">\n                <i class=\"fa fa-calendar-o\"></i>\n              </span>\n              \n                <span class=\"post-meta-item-text\">Posted on</span>\n              \n              <time title=\"Post created\" itemprop=\"dateCreated datePublished\" datetime=\"2017-03-06T11:45:41+08:00\">\n                2017-03-06\n              </time>\n            \n\n            \n\n            \n          </span>\n\n          \n            <span class=\"post-category\" >\n            \n              <span class=\"post-meta-divider\">|</span>\n            \n              <span class=\"post-meta-item-icon\">\n                <i class=\"fa fa-folder-o\"></i>\n              </span>\n              \n                <span class=\"post-meta-item-text\">In</span>\n              \n              \n                <span itemprop=\"about\" itemscope itemtype=\"http://schema.org/Thing\">\n                  <a href=\"/categories/TOELF-writing/\" itemprop=\"url\" rel=\"index\">\n                    <span itemprop=\"name\">TOELF, writing</span>\n                  </a>\n                </span>\n\n                \n                \n              \n            </span>\n          \n\n          \n            \n          \n\n          \n\n          \n          \n\n          \n\n          \n\n        </div>\n      </header>\n    \n\n\n    <div class=\"post-body\" itemprop=\"articleBody\">\n\n      \n      \n\n      \n        <h2 id=\"1-so-called\"><a href=\"#1-so-called\" class=\"headerlink\" title=\"1. so-called\"></a>1. so-called</h2><p>主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)</p>\n<h2 id=\"2-subject-to-do-doing\"><a href=\"#2-subject-to-do-doing\" class=\"headerlink\" title=\"2. subject(to do , doing)\"></a>2. subject(to do , doing)</h2><h4 id=\"动名词和不定式做主语的相同点\"><a href=\"#动名词和不定式做主语的相同点\" class=\"headerlink\" title=\"动名词和不定式做主语的相同点\"></a>动名词和不定式做主语的相同点</h4><p>1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：<br>It is not easy to learn English well.<br>It is no use asking him for help.</p>\n<p>2.如果主语用了不定式,表语和宾语也要用不定式;主语用了动名词,表语和宾语也要用动名词,这在英语中称为对称性,如:<br>To see is to believe. = Seeing is believing. (眼见为实)<br>(85)It is better to stay home than _A__ out.<br>A. to go B. going C. go D. gone</p>\n<h4 id=\"动名词和不定式做主语的不同点\"><a href=\"#动名词和不定式做主语的不同点\" class=\"headerlink\" title=\"动名词和不定式做主语的不同点\"></a>动名词和不定式做主语的不同点</h4><p>1.不定式做主语常表示具体的某一动作;表示泛指或一般的抽象的概念时,多用动名词,如:</p>\n<p>(92)_B_ is a good form of exercise for both young and old.<br>A. The walk B. Walking C. To walk D. Walk</p>\n<p>2.在”There/It +be+ no use(good/help/need)”之后常用动名词做主语,而少用不定式,如:<br>It /There is no use crying over the split milk.<br>It /There is no help taking this medicine.</p>\n<p>但是如果该句型中用了for引出不定式的逻辑主语,就只能用不定式,如:<br>(93) There is no good for us to do that exercise.</p>\n<p>3.不定式可以和when, where, how, what, whether等连用,在句子中做主语,宾语和表语,而动名词则不能,如:<br>How to solve the problem is a hot potato.<br>Where to put the box seems hard to decide.<br>Whether to do it hasn’t been decided.<br>What to do next is up to you. </p>\n\n      \n    </div>\n\n    <div>\n      \n        \n\n      \n    </div>\n\n    <div>\n      \n        \n\n      \n    </div>\n\n\n    <footer class=\"post-footer\">\n      \n        <div class=\"post-tags\">\n          \n            <a href=\"/tags/TOELF-writing/\" rel=\"tag\"># TOELF, writing</a>\n          \n        </div>\n      \n\n      \n        <div class=\"post-nav\">\n          <div class=\"post-nav-next post-nav-item\">\n            \n              <a href=\"/2017/03/06/TOEFL-writing-01/\" rel=\"next\" title=\"TOEFL-writing-01-independent-Educatiuon01\">\n                <i class=\"fa fa-chevron-left\"></i> TOEFL-writing-01-independent-Educatiuon01\n              </a>\n            \n          </div>\n\n          <span class=\"post-nav-divider\"></span>\n\n          <div class=\"post-nav-prev post-nav-item\">\n            \n          </div>\n        </div>\n      \n\n      \n      \n    </footer>\n  </article>\n\n\n\n    <div class=\"post-spread\">\n      \n    </div>\n  </div>\n\n          \n          </div>\n          \n\n\n          \n  <div class=\"comments\" id=\"comments\">\n    \n  </div>\n\n\n        </div>\n        \n          \n  \n  <div class=\"sidebar-toggle\">\n    <div class=\"sidebar-toggle-line-wrap\">\n      <span class=\"sidebar-toggle-line sidebar-toggle-line-first\"></span>\n      <span class=\"sidebar-toggle-line sidebar-toggle-line-middle\"></span>\n      <span class=\"sidebar-toggle-line sidebar-toggle-line-last\"></span>\n    </div>\n  </div>\n\n  <aside id=\"sidebar\" class=\"sidebar\">\n    <div class=\"sidebar-inner\">\n\n      \n\n      \n        <ul class=\"sidebar-nav motion-element\">\n          <li class=\"sidebar-nav-toc sidebar-nav-active\" data-target=\"post-toc-wrap\" >\n            Table of Contents\n          </li>\n          <li class=\"sidebar-nav-overview\" data-target=\"site-overview\">\n            Overview\n          </li>\n        </ul>\n      \n\n      <section class=\"site-overview sidebar-panel\">\n        <div class=\"site-author motion-element\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n          <img class=\"site-author-image\" itemprop=\"image\"\n               src=\"/images/avatar.gif\"\n               alt=\"Nocis\" />\n          <p class=\"site-author-name\" itemprop=\"name\">Nocis</p>\n          <p class=\"site-description motion-element\" itemprop=\"description\"></p>\n        </div>\n        <nav class=\"site-state motion-element\">\n        \n          \n            <div class=\"site-state-item site-state-posts\">\n              <a href=\"/archives\">\n                <span class=\"site-state-item-count\">5</span>\n                <span class=\"site-state-item-name\">posts</span>\n              </a>\n            </div>\n          \n\n          \n            <div class=\"site-state-item site-state-categories\">\n              <a href=\"/categories\">\n                <span class=\"site-state-item-count\">3</span>\n                <span class=\"site-state-item-name\">categories</span>\n              </a>\n            </div>\n          \n\n          \n            <div class=\"site-state-item site-state-tags\">\n              <a href=\"/tags\">\n                <span class=\"site-state-item-count\">3</span>\n                <span class=\"site-state-item-name\">tags</span>\n              </a>\n            </div>\n          \n\n        </nav>\n\n        \n\n        <div class=\"links-of-author motion-element\">\n          \n        </div>\n\n        \n        \n\n        \n        \n\n        \n\n\n      </section>\n\n      \n      <!--noindex-->\n        <section class=\"post-toc-wrap motion-element sidebar-panel sidebar-panel-active\">\n          <div class=\"post-toc\">\n\n            \n              \n            \n\n            \n              <div class=\"post-toc-content\"><ol class=\"nav\"><li class=\"nav-item nav-level-2\"><a class=\"nav-link\" href=\"#1-so-called\"><span class=\"nav-number\">1.</span> <span class=\"nav-text\">1. so-called</span></a></li><li class=\"nav-item nav-level-2\"><a class=\"nav-link\" href=\"#2-subject-to-do-doing\"><span class=\"nav-number\">2.</span> <span class=\"nav-text\">2. subject(to do , doing)</span></a><ol class=\"nav-child\"><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#动名词和不定式做主语的相同点\"><span class=\"nav-number\">2.0.1.</span> <span class=\"nav-text\">动名词和不定式做主语的相同点</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#动名词和不定式做主语的不同点\"><span class=\"nav-number\">2.0.2.</span> <span class=\"nav-text\">动名词和不定式做主语的不同点</span></a></li></ol></li></ol></li></ol></div>\n            \n\n          </div>\n        </section>\n      <!--/noindex-->\n      \n\n    </div>\n  </aside>\n\n\n        \n      </div>\n    </main>\n\n    <footer id=\"footer\" class=\"footer\">\n      <div class=\"footer-inner\">\n        <div class=\"copyright\" >\n  \n  &copy; \n  <span itemprop=\"copyrightYear\">2017</span>\n  <span class=\"with-love\">\n    <i class=\"fa fa-heart\"></i>\n  </span>\n  <span class=\"author\" itemprop=\"copyrightHolder\">Nocis</span>\n</div>\n\n\n<div class=\"powered-by\">\n  Powered by <a class=\"theme-link\" href=\"https://hexo.io\">Hexo</a>\n</div>\n\n<div class=\"theme-info\">\n  Theme -\n  <a class=\"theme-link\" href=\"https://github.com/iissnan/hexo-theme-next\">\n    NexT.Muse\n  </a>\n</div>\n\n\n        \n\n        \n      </div>\n    </footer>\n\n    <div class=\"back-to-top\">\n      <i class=\"fa fa-arrow-up\"></i>\n    </div>\n  </div>\n\n  \n\n<script type=\"text/javascript\">\n  if (Object.prototype.toString.call(window.Promise) !== '[object Function]') {\n    window.Promise = null;\n  }\n</script>\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n  \n  <script type=\"text/javascript\" src=\"/lib/jquery/index.js?v=2.1.3\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/fastclick/lib/fastclick.min.js?v=1.0.6\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/jquery_lazyload/jquery.lazyload.js?v=1.9.7\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.min.js?v=1.2.1\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.ui.min.js?v=1.2.1\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/fancybox/source/jquery.fancybox.pack.js?v=2.1.5\"></script>\n\n\n  \n\n\n  <script type=\"text/javascript\" src=\"/js/src/utils.js?v=5.1.0\"></script>\n\n  <script type=\"text/javascript\" src=\"/js/src/motion.js?v=5.1.0\"></script>\n\n\n\n  \n  \n\n  \n  <script type=\"text/javascript\" src=\"/js/src/scrollspy.js?v=5.1.0\"></script>\n<script type=\"text/javascript\" src=\"/js/src/post-details.js?v=5.1.0\"></script>\n\n\n\n  \n\n\n  <script type=\"text/javascript\" src=\"/js/src/bootstrap.js?v=5.1.0\"></script>\n\n\n\n  \n\n\n\n  \n\n\n\n\n\t\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n      <!-- UY BEGIN -->\n      <script type=\"text/javascript\" src=\"http://v2.uyan.cc/code/uyan.js?uid=\"></script>\n      <!-- UY END --><!-- hexo-inject:begin --><!-- Begin: Injected MathJax -->\n<script type=\"text/x-mathjax-config\">\n  MathJax.Hub.Config({\"tex2jax\":{\"inlineMath\":[[\"$\",\"$\"],[\"\\\\(\",\"\\\\)\"]],\"skipTags\":[\"script\",\"noscript\",\"style\",\"textarea\",\"pre\",\"code\"],\"processEscapes\":true},\"TeX\":{\"equationNumbers\":{\"autoNumber\":\"AMS\"}}});\n</script>\n\n<script type=\"text/x-mathjax-config\">\n  MathJax.Hub.Queue(function() {\n    var all = MathJax.Hub.getAllJax(), i;\n    for(i=0; i < all.length; i += 1) {\n      all[i].SourceElement().parentNode.className += ' has-jax';\n    }\n  });\n</script>\n\n<script type=\"text/javascript\" src=\"//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<!-- End: Injected MathJax -->\n<!-- hexo-inject:end -->\n  \n\n\n\n\n  \n  \n\n  \n\n  \n\n  \n\n  \n\n\n</body>\n</html>\n","source":"_posts/TOEFL-writing-01-independent-grammar01-subject.md","raw":"\n---\ntitle: TOEFL-writing-01-independent-grammar01-subject\ndate: 2018-11-20 06:19:39\ntags:\n---\n<!doctype html>\n\n\n\n  \n\n\n<html class=\"theme-next muse use-motion\" lang=\"en\">\n<head>\n  <!-- hexo-inject:begin --><!-- hexo-inject:end --><meta charset=\"UTF-8\"/>\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"/>\n\n\n\n<meta http-equiv=\"Cache-Control\" content=\"no-transform\" />\n<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n  <link href=\"/lib/fancybox/source/jquery.fancybox.css?v=2.1.5\" rel=\"stylesheet\" type=\"text/css\" />\n\n\n\n\n  \n  \n  \n  \n\n  \n    \n    \n  \n\n  \n\n  \n\n  \n\n  \n\n  \n    \n    \n    <link href=\"//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic&subset=latin,latin-ext\" rel=\"stylesheet\" type=\"text/css\">\n  \n\n\n\n\n\n\n<link href=\"/lib/font-awesome/css/font-awesome.min.css?v=4.6.2\" rel=\"stylesheet\" type=\"text/css\" />\n\n<link href=\"/css/main.css?v=5.1.0\" rel=\"stylesheet\" type=\"text/css\" />\n\n\n  <meta name=\"keywords\" content=\"TOELF, writing,\" />\n\n\n\n\n\n\n\n\n  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico?v=5.1.0\" />\n\n\n\n\n\n\n<meta name=\"description\" content=\"1. so-called主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)\n2. subject(to do , doing)动名词和不定式做主语的相同点1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：It is not easy to le\">\n<meta property=\"og:type\" content=\"article\">\n<meta property=\"og:title\" content=\"TOEFL-writing-01-independent-grammar01-subject\">\n<meta property=\"og:url\" content=\"http://yoursite.com/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/index.html\">\n<meta property=\"og:site_name\" content=\"Nocis' workshop\">\n<meta property=\"og:description\" content=\"1. so-called主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)\n2. subject(to do , doing)动名词和不定式做主语的相同点1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：It is not easy to le\">\n<meta property=\"og:updated_time\" content=\"2017-03-30T16:37:10.141Z\">\n<meta name=\"twitter:card\" content=\"summary\">\n<meta name=\"twitter:title\" content=\"TOEFL-writing-01-independent-grammar01-subject\">\n<meta name=\"twitter:description\" content=\"1. so-called主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)\n2. subject(to do , doing)动名词和不定式做主语的相同点1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：It is not easy to le\">\n\n\n\n<script type=\"text/javascript\" id=\"hexo.configurations\">\n  var NexT = window.NexT || {};\n  var CONFIG = {\n    root: '/',\n    scheme: 'Muse',\n    sidebar: {\"position\":\"left\",\"display\":\"post\"},\n    fancybox: true,\n    motion: true,\n    duoshuo: {\n      userId: '0',\n      author: 'Author'\n    },\n    algolia: {\n      applicationID: '',\n      apiKey: '',\n      indexName: '',\n      hits: {\"per_page\":10},\n      labels: {\"input_placeholder\":\"Search for Posts\",\"hits_empty\":\"We didn't find any results for the search: ${query}\",\"hits_stats\":\"${hits} results found in ${time} ms\"}\n    }\n  };\n</script>\n\n\n\n  <link rel=\"canonical\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/\"/>\n\n\n\n\n\n  <title> TOEFL-writing-01-independent-grammar01-subject | Nocis' workshop </title><!-- hexo-inject:begin --><!-- hexo-inject:end -->\n</head>\n\n<body itemscope itemtype=\"http://schema.org/WebPage\" lang=\"en\">\n\n  \n\n\n\n\n\n\n\n\n\n\n  \n  \n    \n  \n\n  <!-- hexo-inject:begin --><!-- hexo-inject:end --><div class=\"container one-collumn sidebar-position-left page-post-detail \">\n    <div class=\"headband\"></div>\n\n    <header id=\"header\" class=\"header\" itemscope itemtype=\"http://schema.org/WPHeader\">\n      <div class=\"header-inner\"><div class=\"site-meta \">\n  \n\n  <div class=\"custom-logo-site-title\">\n    <a href=\"/\"  class=\"brand\" rel=\"start\">\n      <span class=\"logo-line-before\"><i></i></span>\n      <span class=\"site-title\">Nocis' workshop</span>\n      <span class=\"logo-line-after\"><i></i></span>\n    </a>\n  </div>\n    \n      <p class=\"site-subtitle\"></p>\n    \n</div>\n\n<div class=\"site-nav-toggle\">\n  <button>\n    <span class=\"btn-bar\"></span>\n    <span class=\"btn-bar\"></span>\n    <span class=\"btn-bar\"></span>\n  </button>\n</div>\n\n<nav class=\"site-nav\">\n  \n\n  \n    <ul id=\"menu\" class=\"menu\">\n      \n        \n        <li class=\"menu-item menu-item-home\">\n          <a href=\"/\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-home\"></i> <br />\n            \n            Home\n          </a>\n        </li>\n      \n        \n        <li class=\"menu-item menu-item-categories\">\n          <a href=\"/categories\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-th\"></i> <br />\n            \n            Categories\n          </a>\n        </li>\n      \n        \n        <li class=\"menu-item menu-item-archives\">\n          <a href=\"/archives\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-archive\"></i> <br />\n            \n            Archives\n          </a>\n        </li>\n      \n        \n        <li class=\"menu-item menu-item-tags\">\n          <a href=\"/tags\" rel=\"section\">\n            \n              <i class=\"menu-item-icon fa fa-fw fa-tags\"></i> <br />\n            \n            Tags\n          </a>\n        </li>\n      \n\n      \n    </ul>\n  \n\n  \n</nav>\n\n\n\n </div>\n    </header>\n\n    <main id=\"main\" class=\"main\">\n      <div class=\"main-inner\">\n        <div class=\"content-wrap\">\n          <div id=\"content\" class=\"content\">\n            \n\n  <div id=\"posts\" class=\"posts-expand\">\n    \n\n  \n\n  \n  \n  \n\n  <article class=\"post post-type-normal \" itemscope itemtype=\"http://schema.org/Article\">\n  <link itemprop=\"mainEntityOfPage\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/\">\n\n  <span style=\"display:none\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n    <meta itemprop=\"name\" content=\"Nocis\">\n    <meta itemprop=\"description\" content=\"\">\n    <meta itemprop=\"image\" content=\"/images/avatar.gif\">\n  </span>\n\n  <span style=\"display:none\" itemprop=\"publisher\" itemscope itemtype=\"http://schema.org/Organization\">\n    <meta itemprop=\"name\" content=\"Nocis' workshop\">\n    <span style=\"display:none\" itemprop=\"logo\" itemscope itemtype=\"http://schema.org/ImageObject\">\n      <img style=\"display:none;\" itemprop=\"url image\" alt=\"Nocis' workshop\" src=\"\">\n    </span>\n  </span>\n\n    \n      <header class=\"post-header\">\n\n        \n        \n          <h1 class=\"post-title\" itemprop=\"name headline\">\n            \n            \n              \n                TOEFL-writing-01-independent-grammar01-subject\n              \n            \n          </h1>\n        \n\n        <div class=\"post-meta\">\n          <span class=\"post-time\">\n            \n              <span class=\"post-meta-item-icon\">\n                <i class=\"fa fa-calendar-o\"></i>\n              </span>\n              \n                <span class=\"post-meta-item-text\">Posted on</span>\n              \n              <time title=\"Post created\" itemprop=\"dateCreated datePublished\" datetime=\"2017-03-06T11:45:41+08:00\">\n                2017-03-06\n              </time>\n            \n\n            \n\n            \n          </span>\n\n          \n            <span class=\"post-category\" >\n            \n              <span class=\"post-meta-divider\">|</span>\n            \n              <span class=\"post-meta-item-icon\">\n                <i class=\"fa fa-folder-o\"></i>\n              </span>\n              \n                <span class=\"post-meta-item-text\">In</span>\n              \n              \n                <span itemprop=\"about\" itemscope itemtype=\"http://schema.org/Thing\">\n                  <a href=\"/categories/TOELF-writing/\" itemprop=\"url\" rel=\"index\">\n                    <span itemprop=\"name\">TOELF, writing</span>\n                  </a>\n                </span>\n\n                \n                \n              \n            </span>\n          \n\n          \n            \n          \n\n          \n\n          \n          \n\n          \n\n          \n\n        </div>\n      </header>\n    \n\n\n    <div class=\"post-body\" itemprop=\"articleBody\">\n\n      \n      \n\n      \n        <h2 id=\"1-so-called\"><a href=\"#1-so-called\" class=\"headerlink\" title=\"1. so-called\"></a>1. so-called</h2><p>主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)</p>\n<h2 id=\"2-subject-to-do-doing\"><a href=\"#2-subject-to-do-doing\" class=\"headerlink\" title=\"2. subject(to do , doing)\"></a>2. subject(to do , doing)</h2><h4 id=\"动名词和不定式做主语的相同点\"><a href=\"#动名词和不定式做主语的相同点\" class=\"headerlink\" title=\"动名词和不定式做主语的相同点\"></a>动名词和不定式做主语的相同点</h4><p>1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：<br>It is not easy to learn English well.<br>It is no use asking him for help.</p>\n<p>2.如果主语用了不定式,表语和宾语也要用不定式;主语用了动名词,表语和宾语也要用动名词,这在英语中称为对称性,如:<br>To see is to believe. = Seeing is believing. (眼见为实)<br>(85)It is better to stay home than _A__ out.<br>A. to go B. going C. go D. gone</p>\n<h4 id=\"动名词和不定式做主语的不同点\"><a href=\"#动名词和不定式做主语的不同点\" class=\"headerlink\" title=\"动名词和不定式做主语的不同点\"></a>动名词和不定式做主语的不同点</h4><p>1.不定式做主语常表示具体的某一动作;表示泛指或一般的抽象的概念时,多用动名词,如:</p>\n<p>(92)_B_ is a good form of exercise for both young and old.<br>A. The walk B. Walking C. To walk D. Walk</p>\n<p>2.在”There/It +be+ no use(good/help/need)”之后常用动名词做主语,而少用不定式,如:<br>It /There is no use crying over the split milk.<br>It /There is no help taking this medicine.</p>\n<p>但是如果该句型中用了for引出不定式的逻辑主语,就只能用不定式,如:<br>(93) There is no good for us to do that exercise.</p>\n<p>3.不定式可以和when, where, how, what, whether等连用,在句子中做主语,宾语和表语,而动名词则不能,如:<br>How to solve the problem is a hot potato.<br>Where to put the box seems hard to decide.<br>Whether to do it hasn’t been decided.<br>What to do next is up to you. </p>\n\n      \n    </div>\n\n    <div>\n      \n        \n\n      \n    </div>\n\n    <div>\n      \n        \n\n      \n    </div>\n\n\n    <footer class=\"post-footer\">\n      \n        <div class=\"post-tags\">\n          \n            <a href=\"/tags/TOELF-writing/\" rel=\"tag\"># TOELF, writing</a>\n          \n        </div>\n      \n\n      \n        <div class=\"post-nav\">\n          <div class=\"post-nav-next post-nav-item\">\n            \n              <a href=\"/2017/03/06/TOEFL-writing-01/\" rel=\"next\" title=\"TOEFL-writing-01-independent-Educatiuon01\">\n                <i class=\"fa fa-chevron-left\"></i> TOEFL-writing-01-independent-Educatiuon01\n              </a>\n            \n          </div>\n\n          <span class=\"post-nav-divider\"></span>\n\n          <div class=\"post-nav-prev post-nav-item\">\n            \n          </div>\n        </div>\n      \n\n      \n      \n    </footer>\n  </article>\n\n\n\n    <div class=\"post-spread\">\n      \n    </div>\n  </div>\n\n          \n          </div>\n          \n\n\n          \n  <div class=\"comments\" id=\"comments\">\n    \n  </div>\n\n\n        </div>\n        \n          \n  \n  <div class=\"sidebar-toggle\">\n    <div class=\"sidebar-toggle-line-wrap\">\n      <span class=\"sidebar-toggle-line sidebar-toggle-line-first\"></span>\n      <span class=\"sidebar-toggle-line sidebar-toggle-line-middle\"></span>\n      <span class=\"sidebar-toggle-line sidebar-toggle-line-last\"></span>\n    </div>\n  </div>\n\n  <aside id=\"sidebar\" class=\"sidebar\">\n    <div class=\"sidebar-inner\">\n\n      \n\n      \n        <ul class=\"sidebar-nav motion-element\">\n          <li class=\"sidebar-nav-toc sidebar-nav-active\" data-target=\"post-toc-wrap\" >\n            Table of Contents\n          </li>\n          <li class=\"sidebar-nav-overview\" data-target=\"site-overview\">\n            Overview\n          </li>\n        </ul>\n      \n\n      <section class=\"site-overview sidebar-panel\">\n        <div class=\"site-author motion-element\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n          <img class=\"site-author-image\" itemprop=\"image\"\n               src=\"/images/avatar.gif\"\n               alt=\"Nocis\" />\n          <p class=\"site-author-name\" itemprop=\"name\">Nocis</p>\n          <p class=\"site-description motion-element\" itemprop=\"description\"></p>\n        </div>\n        <nav class=\"site-state motion-element\">\n        \n          \n            <div class=\"site-state-item site-state-posts\">\n              <a href=\"/archives\">\n                <span class=\"site-state-item-count\">5</span>\n                <span class=\"site-state-item-name\">posts</span>\n              </a>\n            </div>\n          \n\n          \n            <div class=\"site-state-item site-state-categories\">\n              <a href=\"/categories\">\n                <span class=\"site-state-item-count\">3</span>\n                <span class=\"site-state-item-name\">categories</span>\n              </a>\n            </div>\n          \n\n          \n            <div class=\"site-state-item site-state-tags\">\n              <a href=\"/tags\">\n                <span class=\"site-state-item-count\">3</span>\n                <span class=\"site-state-item-name\">tags</span>\n              </a>\n            </div>\n          \n\n        </nav>\n\n        \n\n        <div class=\"links-of-author motion-element\">\n          \n        </div>\n\n        \n        \n\n        \n        \n\n        \n\n\n      </section>\n\n      \n      <!--noindex-->\n        <section class=\"post-toc-wrap motion-element sidebar-panel sidebar-panel-active\">\n          <div class=\"post-toc\">\n\n            \n              \n            \n\n            \n              <div class=\"post-toc-content\"><ol class=\"nav\"><li class=\"nav-item nav-level-2\"><a class=\"nav-link\" href=\"#1-so-called\"><span class=\"nav-number\">1.</span> <span class=\"nav-text\">1. so-called</span></a></li><li class=\"nav-item nav-level-2\"><a class=\"nav-link\" href=\"#2-subject-to-do-doing\"><span class=\"nav-number\">2.</span> <span class=\"nav-text\">2. subject(to do , doing)</span></a><ol class=\"nav-child\"><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#动名词和不定式做主语的相同点\"><span class=\"nav-number\">2.0.1.</span> <span class=\"nav-text\">动名词和不定式做主语的相同点</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#动名词和不定式做主语的不同点\"><span class=\"nav-number\">2.0.2.</span> <span class=\"nav-text\">动名词和不定式做主语的不同点</span></a></li></ol></li></ol></li></ol></div>\n            \n\n          </div>\n        </section>\n      <!--/noindex-->\n      \n\n    </div>\n  </aside>\n\n\n        \n      </div>\n    </main>\n\n    <footer id=\"footer\" class=\"footer\">\n      <div class=\"footer-inner\">\n        <div class=\"copyright\" >\n  \n  &copy; \n  <span itemprop=\"copyrightYear\">2017</span>\n  <span class=\"with-love\">\n    <i class=\"fa fa-heart\"></i>\n  </span>\n  <span class=\"author\" itemprop=\"copyrightHolder\">Nocis</span>\n</div>\n\n\n<div class=\"powered-by\">\n  Powered by <a class=\"theme-link\" href=\"https://hexo.io\">Hexo</a>\n</div>\n\n<div class=\"theme-info\">\n  Theme -\n  <a class=\"theme-link\" href=\"https://github.com/iissnan/hexo-theme-next\">\n    NexT.Muse\n  </a>\n</div>\n\n\n        \n\n        \n      </div>\n    </footer>\n\n    <div class=\"back-to-top\">\n      <i class=\"fa fa-arrow-up\"></i>\n    </div>\n  </div>\n\n  \n\n<script type=\"text/javascript\">\n  if (Object.prototype.toString.call(window.Promise) !== '[object Function]') {\n    window.Promise = null;\n  }\n</script>\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n  \n  <script type=\"text/javascript\" src=\"/lib/jquery/index.js?v=2.1.3\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/fastclick/lib/fastclick.min.js?v=1.0.6\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/jquery_lazyload/jquery.lazyload.js?v=1.9.7\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.min.js?v=1.2.1\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.ui.min.js?v=1.2.1\"></script>\n\n  \n  <script type=\"text/javascript\" src=\"/lib/fancybox/source/jquery.fancybox.pack.js?v=2.1.5\"></script>\n\n\n  \n\n\n  <script type=\"text/javascript\" src=\"/js/src/utils.js?v=5.1.0\"></script>\n\n  <script type=\"text/javascript\" src=\"/js/src/motion.js?v=5.1.0\"></script>\n\n\n\n  \n  \n\n  \n  <script type=\"text/javascript\" src=\"/js/src/scrollspy.js?v=5.1.0\"></script>\n<script type=\"text/javascript\" src=\"/js/src/post-details.js?v=5.1.0\"></script>\n\n\n\n  \n\n\n  <script type=\"text/javascript\" src=\"/js/src/bootstrap.js?v=5.1.0\"></script>\n\n\n\n  \n\n\n\n  \n\n\n\n\n\t\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n      <!-- UY BEGIN -->\n      <script type=\"text/javascript\" src=\"http://v2.uyan.cc/code/uyan.js?uid=\"></script>\n      <!-- UY END --><!-- hexo-inject:begin --><!-- Begin: Injected MathJax -->\n<script type=\"text/x-mathjax-config\">\n  MathJax.Hub.Config({\"tex2jax\":{\"inlineMath\":[[\"$\",\"$\"],[\"\\\\(\",\"\\\\)\"]],\"skipTags\":[\"script\",\"noscript\",\"style\",\"textarea\",\"pre\",\"code\"],\"processEscapes\":true},\"TeX\":{\"equationNumbers\":{\"autoNumber\":\"AMS\"}}});\n</script>\n\n<script type=\"text/x-mathjax-config\">\n  MathJax.Hub.Queue(function() {\n    var all = MathJax.Hub.getAllJax(), i;\n    for(i=0; i < all.length; i += 1) {\n      all[i].SourceElement().parentNode.className += ' has-jax';\n    }\n  });\n</script>\n\n<script type=\"text/javascript\" src=\"//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<!-- End: Injected MathJax -->\n<!-- hexo-inject:end -->\n  \n\n\n\n\n  \n  \n\n  \n\n  \n\n  \n\n  \n\n\n</body>\n</html>\n","slug":"TOEFL-writing-01-independent-grammar01-subject","published":1,"updated":"2018-11-20T15:04:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoyt14la0026o49ur9or9xfp","content":"<p>&lt;!doctype html&gt;</p>\n<html class=\"theme-next muse use-motion\" lang=\"en\"><br><head><meta name=\"generator\" content=\"Hexo 3.8.0\"><br>  <!-- hexo-inject:begin --><!-- hexo-inject:end --><meta charset=\"UTF-8\"><br><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><br><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"><br><br><br><br><meta http-equiv=\"Cache-Control\" content=\"no-transform\"><br><meta http-equiv=\"Cache-Control\" content=\"no-siteapp\"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>  <link href=\"/lib/fancybox/source/jquery.fancybox.css?v=2.1.5\" rel=\"stylesheet\" type=\"text/css\"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>    <link href=\"//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic&subset=latin,latin-ext\" rel=\"stylesheet\" type=\"text/css\"><br><br><br><br><br><br><br><br><link href=\"/lib/font-awesome/css/font-awesome.min.css?v=4.6.2\" rel=\"stylesheet\" type=\"text/css\"><br><br><link href=\"/css/main.css?v=5.1.0\" rel=\"stylesheet\" type=\"text/css\"><br><br><br>  <meta name=\"keywords\" content=\"TOELF, writing,\"><br><br><br><br><br><br><br><br><br>  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico?v=5.1.0\"><br><br><br><br><br><br><br><meta name=\"description\" content=\"1. so-called主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)\n2. subject(to do , doing)动名词和不定式做主语的相同点1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：It is not easy to le\"><br><meta property=\"og:type\" content=\"article\"><br><meta property=\"og:title\" content=\"TOEFL-writing-01-independent-grammar01-subject\"><br><meta property=\"og:url\" content=\"http://yoursite.com/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/index.html\"><br><meta property=\"og:site_name\" content=\"Nocis' workshop\"><br><meta property=\"og:description\" content=\"1. so-called主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)\n2. subject(to do , doing)动名词和不定式做主语的相同点1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：It is not easy to le\"><br><meta property=\"og:updated_time\" content=\"2017-03-30T16:37:10.141Z\"><br><meta name=\"twitter:card\" content=\"summary\"><br><meta name=\"twitter:title\" content=\"TOEFL-writing-01-independent-grammar01-subject\"><br><meta name=\"twitter:description\" content=\"1. so-called主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)\n2. subject(to do , doing)动名词和不定式做主语的相同点1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：It is not easy to le\"><br><br><br><br><script type=\"text/javascript\" id=\"hexo.configurations\"><br>  var NexT = window.NexT || {};<br>  var CONFIG = {<br>    root: ‘/‘,<br>    scheme: ‘Muse’,<br>    sidebar: {“position”:”left”,”display”:”post”},<br>    fancybox: true,<br>    motion: true,<br>    duoshuo: {<br>      userId: ‘0’,<br>      author: ‘Author’<br>    },<br>    algolia: {<br>      applicationID: ‘’,<br>      apiKey: ‘’,<br>      indexName: ‘’,<br>      hits: {“per_page”:10},<br>      labels: {“input_placeholder”:”Search for Posts”,”hits_empty”:”We didn’t find any results for the search: ${query}”,”hits_stats”:”${hits} results found in ${time} ms”}<br>    }<br>  };<br></script><br><br><br><br>  <link rel=\"canonical\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/\"><br><br><br><br><br><br>  <title> TOEFL-writing-01-independent-grammar01-subject | Nocis’ workshop </title><!-- hexo-inject:begin --><!-- hexo-inject:end --><br></head><br><br><body itemscope=\"\" itemtype=\"http://schema.org/WebPage\" lang=\"en\"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>  <!-- hexo-inject:begin --><!-- hexo-inject:end --><div class=\"container one-collumn sidebar-position-left page-post-detail \"><br>    <div class=\"headband\"></div><br><br>    <header id=\"header\" class=\"header\" itemscope=\"\" itemtype=\"http://schema.org/WPHeader\"><br>      <div class=\"header-inner\"><div class=\"site-meta \"><br><br><br>  <div class=\"custom-logo-site-title\"><br>    <a href=\"/\" class=\"brand\" rel=\"start\"><br>      <span class=\"logo-line-before\"><i></i></span><br>      <span class=\"site-title\">Nocis’ workshop</span><br>      <span class=\"logo-line-after\"><i></i></span><br>    </a><br>  </div><br><br>      <p class=\"site-subtitle\"></p><br><br></div><br><br><div class=\"site-nav-toggle\"><br>  <button><br>    <span class=\"btn-bar\"></span><br>    <span class=\"btn-bar\"></span><br>    <span class=\"btn-bar\"></span><br>  </button><br></div><br><br><nav class=\"site-nav\"><br><br><br><br>    <ul id=\"menu\" class=\"menu\"><br><br><br>        <li class=\"menu-item menu-item-home\"><br>          <a href=\"/\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-home\"></i> <br><br><br>            Home<br>          </a><br>        </li><br><br><br>        <li class=\"menu-item menu-item-categories\"><br>          <a href=\"/categories\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-th\"></i> <br><br><br>            Categories<br>          </a><br>        </li><br><br><br>        <li class=\"menu-item menu-item-archives\"><br>          <a href=\"/archives\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-archive\"></i> <br><br><br>            Archives<br>          </a><br>        </li><br><br><br>        <li class=\"menu-item menu-item-tags\"><br>          <a href=\"/tags\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-tags\"></i> <br><br><br>            Tags<br>          </a><br>        </li><br><br><br><br>    </ul><br><br><br><br></nav><br><br><br><br> </div><br>    </header><br><br>    <main id=\"main\" class=\"main\"><br>      <div class=\"main-inner\"><br>        <div class=\"content-wrap\"><br>          <div id=\"content\" class=\"content\"><br><br><br>  <div id=\"posts\" class=\"posts-expand\"><br><br><br><br><br><br><br><br><br>  <article class=\"post post-type-normal \" itemscope=\"\" itemtype=\"http://schema.org/Article\"><br>  <link itemprop=\"mainEntityOfPage\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/\"><br><br>  <span style=\"display:none\" itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"><br>    <meta itemprop=\"name\" content=\"Nocis\"><br>    <meta itemprop=\"description\" content=\"\"><br>    <meta itemprop=\"image\" content=\"/images/avatar.gif\"><br>  </span><br><br>  <span style=\"display:none\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"http://schema.org/Organization\"><br>    <meta itemprop=\"name\" content=\"Nocis' workshop\"><br>    <span style=\"display:none\" itemprop=\"logo\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\"><br>      <img style=\"display:none;\" itemprop=\"url image\" alt=\"Nocis' workshop\" src=\"\"><br>    </span><br>  </span><br><br><br>      <header class=\"post-header\"><br><br><br><br>          <h1 class=\"post-title\" itemprop=\"name headline\"><br><br><br><br>                TOEFL-writing-01-independent-grammar01-subject<br><br><br>          </h1><br><br><br>        <div class=\"post-meta\"><br>          <span class=\"post-time\"><br><br>              <span class=\"post-meta-item-icon\"><br>                <i class=\"fa fa-calendar-o\"></i><br>              </span><br><br>                <span class=\"post-meta-item-text\">Posted on</span><br><br>              <time title=\"Post created\" itemprop=\"dateCreated datePublished\" datetime=\"2017-03-06T11:45:41+08:00\"><br>                2017-03-06<br>              </time><br><br><br><br><br><br>          </span><br><br><br>            <span class=\"post-category\"><br><br>              <span class=\"post-meta-divider\">|</span><br><br>              <span class=\"post-meta-item-icon\"><br>                <i class=\"fa fa-folder-o\"></i><br>              </span><br><br>                <span class=\"post-meta-item-text\">In</span><br><br><br>                <span itemprop=\"about\" itemscope=\"\" itemtype=\"http://schema.org/Thing\"><br>                  <a href=\"/categories/TOELF-writing/\" itemprop=\"url\" rel=\"index\"><br>                    <span itemprop=\"name\">TOELF, writing</span><br>                  </a><br>                </span><br><br><br><br><br>            </span><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>        </div><br>      </header><br><br><br><br>    <div class=\"post-body\" itemprop=\"articleBody\"><br><br><br><br><br><br>        <h2 id=\"1-so-called\"><a href=\"#1-so-called\" class=\"headerlink\" title=\"1. so-called\"></a>1. so-called</h2><p>主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)</p><br><h2 id=\"2-subject-to-do-doing\"><a href=\"#2-subject-to-do-doing\" class=\"headerlink\" title=\"2. subject(to do , doing)\"></a>2. subject(to do , doing)</h2><h4 id=\"动名词和不定式做主语的相同点\"><a href=\"#动名词和不定式做主语的相同点\" class=\"headerlink\" title=\"动名词和不定式做主语的相同点\"></a>动名词和不定式做主语的相同点</h4><p>1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：<br>It is not easy to learn English well.<br>It is no use asking him for help.</p><br><p>2.如果主语用了不定式,表语和宾语也要用不定式;主语用了动名词,表语和宾语也要用动名词,这在英语中称为对称性,如:<br>To see is to believe. = Seeing is believing. (眼见为实)<br>(85)It is better to stay home than _A__ out.<br>A. to go B. going C. go D. gone</p><br><h4 id=\"动名词和不定式做主语的不同点\"><a href=\"#动名词和不定式做主语的不同点\" class=\"headerlink\" title=\"动名词和不定式做主语的不同点\"></a>动名词和不定式做主语的不同点</h4><p>1.不定式做主语常表示具体的某一动作;表示泛指或一般的抽象的概念时,多用动名词,如:</p><br><p>(92)_B_ is a good form of exercise for both young and old.<br>A. The walk B. Walking C. To walk D. Walk</p><br><p>2.在”There/It +be+ no use(good/help/need)”之后常用动名词做主语,而少用不定式,如:<br>It /There is no use crying over the split milk.<br>It /There is no help taking this medicine.</p><br><p>但是如果该句型中用了for引出不定式的逻辑主语,就只能用不定式,如:<br>(93) There is no good for us to do that exercise.</p><br><p>3.不定式可以和when, where, how, what, whether等连用,在句子中做主语,宾语和表语,而动名词则不能,如:<br>How to solve the problem is a hot potato.<br>Where to put the box seems hard to decide.<br>Whether to do it hasn’t been decided.<br>What to do next is up to you. </p><br><br><br>    </div><br><br>    <div><br><br><br><br><br>    </div><br><br>    <div><br><br><br><br><br>    </div><br><br><br>    <footer class=\"post-footer\"><br><br>        <div class=\"post-tags\"><br><br>            <a href=\"/tags/TOELF-writing/\" rel=\"tag\"># TOELF, writing</a><br><br>        </div><br><br><br><br>        <div class=\"post-nav\"><br>          <div class=\"post-nav-next post-nav-item\"><br><br>              <a href=\"/2017/03/06/TOEFL-writing-01/\" rel=\"next\" title=\"TOEFL-writing-01-independent-Educatiuon01\"><br>                <i class=\"fa fa-chevron-left\"></i> TOEFL-writing-01-independent-Educatiuon01<br>              </a><br><br>          </div><br><br>          <span class=\"post-nav-divider\"></span><br><br>          <div class=\"post-nav-prev post-nav-item\"><br><br>          </div><br>        </div><br><br><br><br><br>    </footer><br>  </article><br><br><br><br>    <div class=\"post-spread\"><br><br>    </div><br>  </div><br><br><br>          </div><br><br><br><br><br>  <div class=\"comments\" id=\"comments\"><br><br>  </div><br><br><br>        </div><br><br><br><br>  <div class=\"sidebar-toggle\"><br>    <div class=\"sidebar-toggle-line-wrap\"><br>      <span class=\"sidebar-toggle-line sidebar-toggle-line-first\"></span><br>      <span class=\"sidebar-toggle-line sidebar-toggle-line-middle\"></span><br>      <span class=\"sidebar-toggle-line sidebar-toggle-line-last\"></span><br>    </div><br>  </div><br><br>  <aside id=\"sidebar\" class=\"sidebar\"><br>    <div class=\"sidebar-inner\"><br><br><br><br><br>        <ul class=\"sidebar-nav motion-element\"><br>          <li class=\"sidebar-nav-toc sidebar-nav-active\" data-target=\"post-toc-wrap\"><br>            Table of Contents<br>          </li><br>          <li class=\"sidebar-nav-overview\" data-target=\"site-overview\"><br>            Overview<br>          </li><br>        </ul><br><br><br>      <section class=\"site-overview sidebar-panel\"><br>        <div class=\"site-author motion-element\" itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"><br>          <img class=\"site-author-image\" itemprop=\"image\" src=\"/images/avatar.gif\" alt=\"Nocis\"><br>          <p class=\"site-author-name\" itemprop=\"name\">Nocis</p><br>          <p class=\"site-description motion-element\" itemprop=\"description\"></p><br>        </div><br>        <nav class=\"site-state motion-element\"><br><br><br>            <div class=\"site-state-item site-state-posts\"><br>              <a href=\"/archives\"><br>                <span class=\"site-state-item-count\">5</span><br>                <span class=\"site-state-item-name\">posts</span><br>              </a><br>            </div><br><br><br><br>            <div class=\"site-state-item site-state-categories\"><br>              <a href=\"/categories\"><br>                <span class=\"site-state-item-count\">3</span><br>                <span class=\"site-state-item-name\">categories</span><br>              </a><br>            </div><br><br><br><br>            <div class=\"site-state-item site-state-tags\"><br>              <a href=\"/tags\"><br>                <span class=\"site-state-item-count\">3</span><br>                <span class=\"site-state-item-name\">tags</span><br>              </a><br>            </div><br><br><br>        </nav><br><br><br><br>        <div class=\"links-of-author motion-element\"><br><br>        </div><br><br><br><br><br><br><br><br><br><br><br>      </section><br><br><br>      <!--noindex--><br>        <section class=\"post-toc-wrap motion-element sidebar-panel sidebar-panel-active\"><br>          <div class=\"post-toc\"><br><br><br><br><br><br><br>              <div class=\"post-toc-content\"><ol class=\"nav\"><li class=\"nav-item nav-level-2\"><a class=\"nav-link\" href=\"#1-so-called\"><span class=\"nav-number\">1.</span> <span class=\"nav-text\">1. so-called</span></a></li><li class=\"nav-item nav-level-2\"><a class=\"nav-link\" href=\"#2-subject-to-do-doing\"><span class=\"nav-number\">2.</span> <span class=\"nav-text\">2. subject(to do , doing)</span></a><ol class=\"nav-child\"><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#动名词和不定式做主语的相同点\"><span class=\"nav-number\">2.0.1.</span> <span class=\"nav-text\">动名词和不定式做主语的相同点</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#动名词和不定式做主语的不同点\"><span class=\"nav-number\">2.0.2.</span> <span class=\"nav-text\">动名词和不定式做主语的不同点</span></a></li></ol></li></ol></div><br><br><br>          </div><br>        </section><br>      <!--/noindex--><br><br><br>    </div><br>  </aside><br><br><br><br>      </div><br>    </main><br><br>    <footer id=\"footer\" class=\"footer\"><br>      <div class=\"footer-inner\"><br>        <div class=\"copyright\"><br><br>  &copy;<br>  <span itemprop=\"copyrightYear\">2017</span><br>  <span class=\"with-love\"><br>    <i class=\"fa fa-heart\"></i><br>  </span><br>  <span class=\"author\" itemprop=\"copyrightHolder\">Nocis</span><br></div><br><br><br><div class=\"powered-by\"><br>  Powered by <a class=\"theme-link\" href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo</a><br></div><br><br><div class=\"theme-info\"><br>  Theme -<br>  <a class=\"theme-link\" href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\"><br>    NexT.Muse<br>  </a><br></div><br><br><br><br><br><br>      </div><br>    </footer><br><br>    <div class=\"back-to-top\"><br>      <i class=\"fa fa-arrow-up\"></i><br>    </div><br>  </div><br><br><br><br><script type=\"text/javascript\"><br>  if (Object.prototype.toString.call(window.Promise) !== ‘[object Function]’) {<br>    window.Promise = null;<br>  }<br></script><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/lib/jquery/index.js?v=2.1.3\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/fastclick/lib/fastclick.min.js?v=1.0.6\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/jquery_lazyload/jquery.lazyload.js?v=1.9.7\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.min.js?v=1.2.1\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.ui.min.js?v=1.2.1\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/fancybox/source/jquery.fancybox.pack.js?v=2.1.5\"></script><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/js/src/utils.js?v=5.1.0\"></script><br><br>  <script type=\"text/javascript\" src=\"/js/src/motion.js?v=5.1.0\"></script><br><br><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/js/src/scrollspy.js?v=5.1.0\"></script><br><script type=\"text/javascript\" src=\"/js/src/post-details.js?v=5.1.0\"></script><br><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/js/src/bootstrap.js?v=5.1.0\"></script><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>      <!-- UY BEGIN --><br>      <script type=\"text/javascript\" src=\"http://v2.uyan.cc/code/uyan.js?uid=\"></script><br>      <!-- UY END --><!-- hexo-inject:begin --><!-- Begin: Injected MathJax --><br><script type=\"text/x-mathjax-config\"><br>  MathJax.Hub.Config({“tex2jax”:{“inlineMath”:[[“$”,”$”],[“\\(“,”\\)“]],”skipTags”:[“script”,”noscript”,”style”,”textarea”,”pre”,”code”],”processEscapes”:true},”TeX”:{“equationNumbers”:{“autoNumber”:”AMS”}}});<br></script><br><br><script type=\"text/x-mathjax-config\"><br>  MathJax.Hub.Queue(function() {<br>    var all = MathJax.Hub.getAllJax(), i;<br>    for(i=0; i &lt; all.length; i += 1) {<br>      all[i].SourceElement().parentNode.className += ‘ has-jax’;<br>    }<br>  });<br></script><br><br><script type=\"text/javascript\" src=\"//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"><br></script><br><!-- End: Injected MathJax --><br><!-- hexo-inject:end --><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></body><br></html>\n","site":{"data":{}},"excerpt":"","more":"<p>&lt;!doctype html&gt;</p>\n<html class=\"theme-next muse use-motion\" lang=\"en\"><br><head><meta name=\"generator\" content=\"Hexo 3.8.0\"><br>  <!-- hexo-inject:begin --><!-- hexo-inject:end --><meta charset=\"UTF-8\"><br><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><br><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"><br><br><br><br><meta http-equiv=\"Cache-Control\" content=\"no-transform\"><br><meta http-equiv=\"Cache-Control\" content=\"no-siteapp\"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>  <link href=\"/lib/fancybox/source/jquery.fancybox.css?v=2.1.5\" rel=\"stylesheet\" type=\"text/css\"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>    <link href=\"//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic&subset=latin,latin-ext\" rel=\"stylesheet\" type=\"text/css\"><br><br><br><br><br><br><br><br><link href=\"/lib/font-awesome/css/font-awesome.min.css?v=4.6.2\" rel=\"stylesheet\" type=\"text/css\"><br><br><link href=\"/css/main.css?v=5.1.0\" rel=\"stylesheet\" type=\"text/css\"><br><br><br>  <meta name=\"keywords\" content=\"TOELF, writing,\"><br><br><br><br><br><br><br><br><br>  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/favicon.ico?v=5.1.0\"><br><br><br><br><br><br><br><meta name=\"description\" content=\"1. so-called主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)\n2. subject(to do , doing)动名词和不定式做主语的相同点1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：It is not easy to le\"><br><meta property=\"og:type\" content=\"article\"><br><meta property=\"og:title\" content=\"TOEFL-writing-01-independent-grammar01-subject\"><br><meta property=\"og:url\" content=\"http://yoursite.com/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/index.html\"><br><meta property=\"og:site_name\" content=\"Nocis' workshop\"><br><meta property=\"og:description\" content=\"1. so-called主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)\n2. subject(to do , doing)动名词和不定式做主语的相同点1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：It is not easy to le\"><br><meta property=\"og:updated_time\" content=\"2017-03-30T16:37:10.141Z\"><br><meta name=\"twitter:card\" content=\"summary\"><br><meta name=\"twitter:title\" content=\"TOEFL-writing-01-independent-grammar01-subject\"><br><meta name=\"twitter:description\" content=\"1. so-called主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)\n2. subject(to do , doing)动名词和不定式做主语的相同点1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：It is not easy to le\"><br><br><br><br><script type=\"text/javascript\" id=\"hexo.configurations\"><br>  var NexT = window.NexT || {};<br>  var CONFIG = {<br>    root: ‘/‘,<br>    scheme: ‘Muse’,<br>    sidebar: {“position”:”left”,”display”:”post”},<br>    fancybox: true,<br>    motion: true,<br>    duoshuo: {<br>      userId: ‘0’,<br>      author: ‘Author’<br>    },<br>    algolia: {<br>      applicationID: ‘’,<br>      apiKey: ‘’,<br>      indexName: ‘’,<br>      hits: {“per_page”:10},<br>      labels: {“input_placeholder”:”Search for Posts”,”hits_empty”:”We didn’t find any results for the search: ${query}”,”hits_stats”:”${hits} results found in ${time} ms”}<br>    }<br>  };<br></script><br><br><br><br>  <link rel=\"canonical\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/\"><br><br><br><br><br><br>  <title> TOEFL-writing-01-independent-grammar01-subject | Nocis’ workshop </title><!-- hexo-inject:begin --><!-- hexo-inject:end --><br></head><br><br><body itemscope=\"\" itemtype=\"http://schema.org/WebPage\" lang=\"en\"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>  <!-- hexo-inject:begin --><!-- hexo-inject:end --><div class=\"container one-collumn sidebar-position-left page-post-detail \"><br>    <div class=\"headband\"></div><br><br>    <header id=\"header\" class=\"header\" itemscope=\"\" itemtype=\"http://schema.org/WPHeader\"><br>      <div class=\"header-inner\"><div class=\"site-meta \"><br><br><br>  <div class=\"custom-logo-site-title\"><br>    <a href=\"/\" class=\"brand\" rel=\"start\"><br>      <span class=\"logo-line-before\"><i></i></span><br>      <span class=\"site-title\">Nocis’ workshop</span><br>      <span class=\"logo-line-after\"><i></i></span><br>    </a><br>  </div><br><br>      <p class=\"site-subtitle\"></p><br><br></div><br><br><div class=\"site-nav-toggle\"><br>  <button><br>    <span class=\"btn-bar\"></span><br>    <span class=\"btn-bar\"></span><br>    <span class=\"btn-bar\"></span><br>  </button><br></div><br><br><nav class=\"site-nav\"><br><br><br><br>    <ul id=\"menu\" class=\"menu\"><br><br><br>        <li class=\"menu-item menu-item-home\"><br>          <a href=\"/\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-home\"></i> <br><br><br>            Home<br>          </a><br>        </li><br><br><br>        <li class=\"menu-item menu-item-categories\"><br>          <a href=\"/categories\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-th\"></i> <br><br><br>            Categories<br>          </a><br>        </li><br><br><br>        <li class=\"menu-item menu-item-archives\"><br>          <a href=\"/archives\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-archive\"></i> <br><br><br>            Archives<br>          </a><br>        </li><br><br><br>        <li class=\"menu-item menu-item-tags\"><br>          <a href=\"/tags\" rel=\"section\"><br><br>              <i class=\"menu-item-icon fa fa-fw fa-tags\"></i> <br><br><br>            Tags<br>          </a><br>        </li><br><br><br><br>    </ul><br><br><br><br></nav><br><br><br><br> </div><br>    </header><br><br>    <main id=\"main\" class=\"main\"><br>      <div class=\"main-inner\"><br>        <div class=\"content-wrap\"><br>          <div id=\"content\" class=\"content\"><br><br><br>  <div id=\"posts\" class=\"posts-expand\"><br><br><br><br><br><br><br><br><br>  <article class=\"post post-type-normal \" itemscope=\"\" itemtype=\"http://schema.org/Article\"><br>  <link itemprop=\"mainEntityOfPage\" href=\"http://yoursite.com/2017/03/06/TOEFL-writing-01-independent-grammar01-subject/\"><br><br>  <span style=\"display:none\" itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"><br>    <meta itemprop=\"name\" content=\"Nocis\"><br>    <meta itemprop=\"description\" content=\"\"><br>    <meta itemprop=\"image\" content=\"/images/avatar.gif\"><br>  </span><br><br>  <span style=\"display:none\" itemprop=\"publisher\" itemscope=\"\" itemtype=\"http://schema.org/Organization\"><br>    <meta itemprop=\"name\" content=\"Nocis' workshop\"><br>    <span style=\"display:none\" itemprop=\"logo\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\"><br>      <img style=\"display:none;\" itemprop=\"url image\" alt=\"Nocis' workshop\" src=\"\"><br>    </span><br>  </span><br><br><br>      <header class=\"post-header\"><br><br><br><br>          <h1 class=\"post-title\" itemprop=\"name headline\"><br><br><br><br>                TOEFL-writing-01-independent-grammar01-subject<br><br><br>          </h1><br><br><br>        <div class=\"post-meta\"><br>          <span class=\"post-time\"><br><br>              <span class=\"post-meta-item-icon\"><br>                <i class=\"fa fa-calendar-o\"></i><br>              </span><br><br>                <span class=\"post-meta-item-text\">Posted on</span><br><br>              <time title=\"Post created\" itemprop=\"dateCreated datePublished\" datetime=\"2017-03-06T11:45:41+08:00\"><br>                2017-03-06<br>              </time><br><br><br><br><br><br>          </span><br><br><br>            <span class=\"post-category\"><br><br>              <span class=\"post-meta-divider\">|</span><br><br>              <span class=\"post-meta-item-icon\"><br>                <i class=\"fa fa-folder-o\"></i><br>              </span><br><br>                <span class=\"post-meta-item-text\">In</span><br><br><br>                <span itemprop=\"about\" itemscope=\"\" itemtype=\"http://schema.org/Thing\"><br>                  <a href=\"/categories/TOELF-writing/\" itemprop=\"url\" rel=\"index\"><br>                    <span itemprop=\"name\">TOELF, writing</span><br>                  </a><br>                </span><br><br><br><br><br>            </span><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>        </div><br>      </header><br><br><br><br>    <div class=\"post-body\" itemprop=\"articleBody\"><br><br><br><br><br><br>        <h2 id=\"1-so-called\"><a href=\"#1-so-called\" class=\"headerlink\" title=\"1. so-called\"></a>1. so-called</h2><p>主语:S(subject)谓语:P (predicate)宾语:O(object)补语:C (complement)定语:A(attribute)状语:A(adverbial)</p><br><h2 id=\"2-subject-to-do-doing\"><a href=\"#2-subject-to-do-doing\" class=\"headerlink\" title=\"2. subject(to do , doing)\"></a>2. subject(to do , doing)</h2><h4 id=\"动名词和不定式做主语的相同点\"><a href=\"#动名词和不定式做主语的相同点\" class=\"headerlink\" title=\"动名词和不定式做主语的相同点\"></a>动名词和不定式做主语的相同点</h4><p>1.不定式短语和动名词做主语时,常常为了保持句子的平衡,用it来做形式主语,如：<br>It is not easy to learn English well.<br>It is no use asking him for help.</p><br><p>2.如果主语用了不定式,表语和宾语也要用不定式;主语用了动名词,表语和宾语也要用动名词,这在英语中称为对称性,如:<br>To see is to believe. = Seeing is believing. (眼见为实)<br>(85)It is better to stay home than _A__ out.<br>A. to go B. going C. go D. gone</p><br><h4 id=\"动名词和不定式做主语的不同点\"><a href=\"#动名词和不定式做主语的不同点\" class=\"headerlink\" title=\"动名词和不定式做主语的不同点\"></a>动名词和不定式做主语的不同点</h4><p>1.不定式做主语常表示具体的某一动作;表示泛指或一般的抽象的概念时,多用动名词,如:</p><br><p>(92)_B_ is a good form of exercise for both young and old.<br>A. The walk B. Walking C. To walk D. Walk</p><br><p>2.在”There/It +be+ no use(good/help/need)”之后常用动名词做主语,而少用不定式,如:<br>It /There is no use crying over the split milk.<br>It /There is no help taking this medicine.</p><br><p>但是如果该句型中用了for引出不定式的逻辑主语,就只能用不定式,如:<br>(93) There is no good for us to do that exercise.</p><br><p>3.不定式可以和when, where, how, what, whether等连用,在句子中做主语,宾语和表语,而动名词则不能,如:<br>How to solve the problem is a hot potato.<br>Where to put the box seems hard to decide.<br>Whether to do it hasn’t been decided.<br>What to do next is up to you. </p><br><br><br>    </div><br><br>    <div><br><br><br><br><br>    </div><br><br>    <div><br><br><br><br><br>    </div><br><br><br>    <footer class=\"post-footer\"><br><br>        <div class=\"post-tags\"><br><br>            <a href=\"/tags/TOELF-writing/\" rel=\"tag\"># TOELF, writing</a><br><br>        </div><br><br><br><br>        <div class=\"post-nav\"><br>          <div class=\"post-nav-next post-nav-item\"><br><br>              <a href=\"/2017/03/06/TOEFL-writing-01/\" rel=\"next\" title=\"TOEFL-writing-01-independent-Educatiuon01\"><br>                <i class=\"fa fa-chevron-left\"></i> TOEFL-writing-01-independent-Educatiuon01<br>              </a><br><br>          </div><br><br>          <span class=\"post-nav-divider\"></span><br><br>          <div class=\"post-nav-prev post-nav-item\"><br><br>          </div><br>        </div><br><br><br><br><br>    </footer><br>  </article><br><br><br><br>    <div class=\"post-spread\"><br><br>    </div><br>  </div><br><br><br>          </div><br><br><br><br><br>  <div class=\"comments\" id=\"comments\"><br><br>  </div><br><br><br>        </div><br><br><br><br>  <div class=\"sidebar-toggle\"><br>    <div class=\"sidebar-toggle-line-wrap\"><br>      <span class=\"sidebar-toggle-line sidebar-toggle-line-first\"></span><br>      <span class=\"sidebar-toggle-line sidebar-toggle-line-middle\"></span><br>      <span class=\"sidebar-toggle-line sidebar-toggle-line-last\"></span><br>    </div><br>  </div><br><br>  <aside id=\"sidebar\" class=\"sidebar\"><br>    <div class=\"sidebar-inner\"><br><br><br><br><br>        <ul class=\"sidebar-nav motion-element\"><br>          <li class=\"sidebar-nav-toc sidebar-nav-active\" data-target=\"post-toc-wrap\"><br>            Table of Contents<br>          </li><br>          <li class=\"sidebar-nav-overview\" data-target=\"site-overview\"><br>            Overview<br>          </li><br>        </ul><br><br><br>      <section class=\"site-overview sidebar-panel\"><br>        <div class=\"site-author motion-element\" itemprop=\"author\" itemscope=\"\" itemtype=\"http://schema.org/Person\"><br>          <img class=\"site-author-image\" itemprop=\"image\" src=\"/images/avatar.gif\" alt=\"Nocis\"><br>          <p class=\"site-author-name\" itemprop=\"name\">Nocis</p><br>          <p class=\"site-description motion-element\" itemprop=\"description\"></p><br>        </div><br>        <nav class=\"site-state motion-element\"><br><br><br>            <div class=\"site-state-item site-state-posts\"><br>              <a href=\"/archives\"><br>                <span class=\"site-state-item-count\">5</span><br>                <span class=\"site-state-item-name\">posts</span><br>              </a><br>            </div><br><br><br><br>            <div class=\"site-state-item site-state-categories\"><br>              <a href=\"/categories\"><br>                <span class=\"site-state-item-count\">3</span><br>                <span class=\"site-state-item-name\">categories</span><br>              </a><br>            </div><br><br><br><br>            <div class=\"site-state-item site-state-tags\"><br>              <a href=\"/tags\"><br>                <span class=\"site-state-item-count\">3</span><br>                <span class=\"site-state-item-name\">tags</span><br>              </a><br>            </div><br><br><br>        </nav><br><br><br><br>        <div class=\"links-of-author motion-element\"><br><br>        </div><br><br><br><br><br><br><br><br><br><br><br>      </section><br><br><br>      <!--noindex--><br>        <section class=\"post-toc-wrap motion-element sidebar-panel sidebar-panel-active\"><br>          <div class=\"post-toc\"><br><br><br><br><br><br><br>              <div class=\"post-toc-content\"><ol class=\"nav\"><li class=\"nav-item nav-level-2\"><a class=\"nav-link\" href=\"#1-so-called\"><span class=\"nav-number\">1.</span> <span class=\"nav-text\">1. so-called</span></a></li><li class=\"nav-item nav-level-2\"><a class=\"nav-link\" href=\"#2-subject-to-do-doing\"><span class=\"nav-number\">2.</span> <span class=\"nav-text\">2. subject(to do , doing)</span></a><ol class=\"nav-child\"><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#动名词和不定式做主语的相同点\"><span class=\"nav-number\">2.0.1.</span> <span class=\"nav-text\">动名词和不定式做主语的相同点</span></a></li><li class=\"nav-item nav-level-4\"><a class=\"nav-link\" href=\"#动名词和不定式做主语的不同点\"><span class=\"nav-number\">2.0.2.</span> <span class=\"nav-text\">动名词和不定式做主语的不同点</span></a></li></ol></li></ol></div><br><br><br>          </div><br>        </section><br>      <!--/noindex--><br><br><br>    </div><br>  </aside><br><br><br><br>      </div><br>    </main><br><br>    <footer id=\"footer\" class=\"footer\"><br>      <div class=\"footer-inner\"><br>        <div class=\"copyright\"><br><br>  &copy;<br>  <span itemprop=\"copyrightYear\">2017</span><br>  <span class=\"with-love\"><br>    <i class=\"fa fa-heart\"></i><br>  </span><br>  <span class=\"author\" itemprop=\"copyrightHolder\">Nocis</span><br></div><br><br><br><div class=\"powered-by\"><br>  Powered by <a class=\"theme-link\" href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo</a><br></div><br><br><div class=\"theme-info\"><br>  Theme -<br>  <a class=\"theme-link\" href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\"><br>    NexT.Muse<br>  </a><br></div><br><br><br><br><br><br>      </div><br>    </footer><br><br>    <div class=\"back-to-top\"><br>      <i class=\"fa fa-arrow-up\"></i><br>    </div><br>  </div><br><br><br><br><script type=\"text/javascript\"><br>  if (Object.prototype.toString.call(window.Promise) !== ‘[object Function]’) {<br>    window.Promise = null;<br>  }<br></script><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/lib/jquery/index.js?v=2.1.3\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/fastclick/lib/fastclick.min.js?v=1.0.6\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/jquery_lazyload/jquery.lazyload.js?v=1.9.7\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.min.js?v=1.2.1\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/velocity/velocity.ui.min.js?v=1.2.1\"></script><br><br><br>  <script type=\"text/javascript\" src=\"/lib/fancybox/source/jquery.fancybox.pack.js?v=2.1.5\"></script><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/js/src/utils.js?v=5.1.0\"></script><br><br>  <script type=\"text/javascript\" src=\"/js/src/motion.js?v=5.1.0\"></script><br><br><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/js/src/scrollspy.js?v=5.1.0\"></script><br><script type=\"text/javascript\" src=\"/js/src/post-details.js?v=5.1.0\"></script><br><br><br><br><br><br><br>  <script type=\"text/javascript\" src=\"/js/src/bootstrap.js?v=5.1.0\"></script><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>      <!-- UY BEGIN --><br>      <script type=\"text/javascript\" src=\"http://v2.uyan.cc/code/uyan.js?uid=\"></script><br>      <!-- UY END --><!-- hexo-inject:begin --><!-- Begin: Injected MathJax --><br><script type=\"text/x-mathjax-config\"><br>  MathJax.Hub.Config({“tex2jax”:{“inlineMath”:[[“$”,”$”],[“\\(“,”\\)“]],”skipTags”:[“script”,”noscript”,”style”,”textarea”,”pre”,”code”],”processEscapes”:true},”TeX”:{“equationNumbers”:{“autoNumber”:”AMS”}}});<br></script><br><br><script type=\"text/x-mathjax-config\"><br>  MathJax.Hub.Queue(function() {<br>    var all = MathJax.Hub.getAllJax(), i;<br>    for(i=0; i &lt; all.length; i += 1) {<br>      all[i].SourceElement().parentNode.className += ‘ has-jax’;<br>    }<br>  });<br></script><br><br><script type=\"text/javascript\" src=\"//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"><br></script><br><!-- End: Injected MathJax --><br><!-- hexo-inject:end --><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></body><br></html>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjoyt14jn0000o49u5guqcref","category_id":"cjoyt14ju0004o49uq9fonfva","_id":"cjoyt14k7000ho49um42chazh"},{"post_id":"cjoyt14js0002o49um56d6j8m","category_id":"cjoyt14ju0004o49uq9fonfva","_id":"cjoyt14kb000mo49uc2cu3o48"},{"post_id":"cjoyt14jw0006o49ujtjt18hd","category_id":"cjoyt14k6000go49uyfkxvzd8","_id":"cjoyt14kd000ro49udgfhvlkl"}],"PostTag":[{"post_id":"cjoyt14jn0000o49u5guqcref","tag_id":"cjoyt14jw0005o49ukw52kb1x","_id":"cjoyt14k2000do49uy3joch64"},{"post_id":"cjoyt14js0002o49um56d6j8m","tag_id":"cjoyt14jw0005o49ukw52kb1x","_id":"cjoyt14k7000jo49u55gndrx5"},{"post_id":"cjoyt14jw0006o49ujtjt18hd","tag_id":"cjoyt14k7000io49utlu8mmwb","_id":"cjoyt14kc000po49uuqf1eu2l"},{"post_id":"cjoyt14kb000oo49uzfkfga4x","tag_id":"cjoyt14kb000no49u4qpnocnn","_id":"cjoyt14kd000to49u0nwyxzz4"},{"post_id":"cjoyt14jy0008o49uyaeo67oa","tag_id":"cjoyt14kb000no49u4qpnocnn","_id":"cjoyt14kf000vo49ulbanu3rv"},{"post_id":"cjoyt14k0000ao49un9z48wxw","tag_id":"cjoyt14kd000so49uaufiaasn","_id":"cjoyt14ki000zo49usuj7fc27"},{"post_id":"cjoyt14k4000eo49uxd824gpl","tag_id":"cjoyt14kh000xo49urpsmtxzc","_id":"cjoyt14km0013o49ugzta5ulg"},{"post_id":"cjoyt14k5000fo49un6vymgcd","tag_id":"cjoyt14kl0012o49u9gjx0sia","_id":"cjoyt14ks0018o49udfvv6vek"},{"post_id":"cjoyt14ka000lo49ur43217wa","tag_id":"cjoyt14kb000no49u4qpnocnn","_id":"cjoyt14ku001co49u3dbyrdua"},{"post_id":"cjoyt14kc000qo49uh9u1025d","tag_id":"cjoyt14kt001ao49uzqxb2984","_id":"cjoyt14l0001go49u95dtokmu"},{"post_id":"cjoyt14kc000qo49uh9u1025d","tag_id":"cjoyt14kz001eo49uc3sznzm8","_id":"cjoyt14l0001ho49ufs38uet5"},{"post_id":"cjoyt14ke000uo49uok77fvx8","tag_id":"cjoyt14l0001fo49ubud3x5j2","_id":"cjoyt14l1001ko49uh4a9kvfz"},{"post_id":"cjoyt14ke000uo49uok77fvx8","tag_id":"cjoyt14l1001io49u5pj1jn6c","_id":"cjoyt14l1001lo49u15irshey"},{"post_id":"cjoyt14kh000yo49uwwmf6shh","tag_id":"cjoyt14l1001jo49ul4snp9hk","_id":"cjoyt14l1001no49uip04krmd"},{"post_id":"cjoyt14ki0010o49ue6ltxzuf","tag_id":"cjoyt14l1001mo49uys2x33xk","_id":"cjoyt14l2001po49u9ixaevtu"},{"post_id":"cjoyt14kj0011o49ul8emd7un","tag_id":"cjoyt14l2001oo49ug3jf1yf4","_id":"cjoyt14l2001ro49u12sxk0rd"},{"post_id":"cjoyt14km0014o49u47f0nmji","tag_id":"cjoyt14l2001oo49ug3jf1yf4","_id":"cjoyt14l3001to49uoc8f63q5"},{"post_id":"cjoyt14ko0015o49uzn7d170d","tag_id":"cjoyt14l2001so49u681ry9rv","_id":"cjoyt14l3001vo49us115g1w9"},{"post_id":"cjoyt14kr0017o49upyz2b6fy","tag_id":"cjoyt14l1001mo49uys2x33xk","_id":"cjoyt14l4001xo49uyopjguzh"},{"post_id":"cjoyt14ks0019o49uppze5rh7","tag_id":"cjoyt14l4001wo49u0fvuvf78","_id":"cjoyt14l5001zo49uj35c839a"},{"post_id":"cjoyt14kt001bo49u9isuo7gt","tag_id":"cjoyt14l4001yo49uexawzkho","_id":"cjoyt14l50021o49uqhbiov5m"},{"post_id":"cjoyt14ku001do49u7j8b6fub","tag_id":"cjoyt14l4001yo49uexawzkho","_id":"cjoyt14l60022o49uw2i23uri"},{"post_id":"cjoyt14l70023o49uwhmf4oh5","tag_id":"cjoyt14kb000no49u4qpnocnn","_id":"cjoyt14l80024o49uuxo12yk0"}],"Tag":[{"name":"CV","_id":"cjoyt14jw0005o49ukw52kb1x"},{"name":"data mining","_id":"cjoyt14k7000io49utlu8mmwb"},{"name":"js","_id":"cjoyt14kb000no49u4qpnocnn"},{"name":"js express nodejs","_id":"cjoyt14kd000so49uaufiaasn"},{"name":"gulp vue","_id":"cjoyt14kh000xo49urpsmtxzc"},{"name":"gulp","_id":"cjoyt14kl0012o49u9gjx0sia"},{"name":"mathjax","_id":"cjoyt14kt001ao49uzqxb2984"},{"name":"hexo","_id":"cjoyt14kz001eo49uc3sznzm8"},{"name":"shell","_id":"cjoyt14l0001fo49ubud3x5j2"},{"name":"linux","_id":"cjoyt14l1001io49u5pj1jn6c"},{"name":"unix OS fs-error","_id":"cjoyt14l1001jo49ul4snp9hk"},{"name":"unix OS","_id":"cjoyt14l1001mo49uys2x33xk"},{"name":"vuejs","_id":"cjoyt14l2001oo49ug3jf1yf4"},{"name":"nodejs","_id":"cjoyt14l2001so49u681ry9rv"},{"name":"unix OS zsh","_id":"cjoyt14l4001wo49u0fvuvf78"},{"name":"杂谈 web开发","_id":"cjoyt14l4001yo49uexawzkho"}]}}